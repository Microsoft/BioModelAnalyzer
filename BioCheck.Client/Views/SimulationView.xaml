<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:SampleData="clr-namespace:Expression.Blend.SampleData.ProofData"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:Converters="clr-namespace:BioCheck.Converters" 
    xmlns:MvvmFx_Common_Converters="clr-namespace:MvvmFx.Common.Converters;assembly=MvvmFx.Common"
    xmlns:behaviors="clr-namespace:BioCheck.Behaviors" 
    xmlns:System="clr-namespace:System;assembly=mscorlib" 
    x:Class="BioCheck.Views.SimulationView"
    mc:Ignorable="d"
    Width="1000" Height="800">

    <UserControl.Resources>

        <MvvmFx_Common_Converters:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter"/>

        <SampleData:ProofData x:Key="ProofData" d:IsDataSource="True"/>

        <SolidColorBrush x:Key="ChangedStepBrush" Color="#FFFFFBB5"/>
        <SolidColorBrush x:Key="CycledStepBrush" Color="#FFb8b8dc"/>
        <SolidColorBrush x:Key="IsModifiedBrush" Color="Red"/>
        <SolidColorBrush x:Key="NotModifiedBrush" Color="#FF58595B"/>

        <Converters:BoolToBrushConverter 
            x:Key="BoolToStepBrushConverter"
            TrueBrush="{StaticResource ChangedStepBrush}" />

        <Converters:BoolToBrushConverter 
            x:Key="BoolToCycleBrushConverter"
            TrueBrush="{StaticResource CycledStepBrush}" />

        <Converters:BoolToBrushConverter 
            x:Key="BoolToModifiedBrushConverter"
            TrueBrush="{StaticResource IsModifiedBrush}" 
            FalseBrush="{StaticResource NotModifiedBrush}" 
            />

        <DataTemplate x:Key="ProgressionInfoColumnTemplate">
            <Grid>
                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{Binding HasChanged, Converter={StaticResource BoolToStepBrushConverter}}" />
                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{Binding HasCycled, Converter={StaticResource BoolToCycleBrushConverter}}" Opacity="0.3" />
                <TextBlock VerticalAlignment="Center" Text="{Binding Value}" 
                           Foreground="{Binding IsModified, Converter={StaticResource BoolToModifiedBrushConverter}}" 
                           HorizontalAlignment="Center"/>
            </Grid>
        </DataTemplate>

        <Style x:Key="VariablesDataGridColumnHeaderStyle" TargetType="sdk:DataGridColumnHeader">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="SeparatorBrush" Value="#FFC9CACA"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="sdk:DataGridColumnHeader">
                        <Grid x:Name="Root" Background="{StaticResource PopupGridHeaderBackground}" Margin="0,0,1,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SortStates">
                                    <VisualState x:Name="Unsorted"/>
                                    <VisualState x:Name="SortAscending">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SortIcon"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SortDescending">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SortIcon"/>
                                            <DoubleAnimation Duration="0" To="-.9" Storyboard.TargetProperty="(RenderTransform).ScaleY" Storyboard.TargetName="SortIcon"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Content="{TemplateBinding Content}"/>
                                <Path x:Name="SortIcon" Grid.Column="1" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z " Fill="#FF444444" HorizontalAlignment="Left" Margin="4,0,0,0" Opacity="0" RenderTransformOrigin=".5,.5" Stretch="Uniform" VerticalAlignment="Center" Width="8">
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleY=".9" ScaleX=".9"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>
        <Style x:Key="RunCounterExampleButtonStyle" TargetType="Button">
        	<Setter Property="Background" Value="#FF1F3B53"/>
        	<Setter Property="Foreground" Value="#FF000000"/>
        	<Setter Property="Padding" Value="3"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="BorderBrush">
        		<Setter.Value>
        			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        				<GradientStop Color="#FFA3AEB9" Offset="0"/>
        				<GradientStop Color="#FF8399A9" Offset="0.375"/>
        				<GradientStop Color="#FF718597" Offset="0.375"/>
        				<GradientStop Color="#FF617584" Offset="1"/>
        			</LinearGradientBrush>
        		</Setter.Value>
        	</Setter>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="Button">
        				<Grid>
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="MouseOver"/>
        							<VisualState x:Name="Pressed"/>
        							<VisualState x:Name="Disabled"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="FocusStates">
        							<VisualState x:Name="Focused"/>
        							<VisualState x:Name="Unfocused"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
        					<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>

    	<Style x:Key="PlainCheckBoxStyle" TargetType="CheckBox">
    		<Setter Property="Background" Value="#FF448DCA"/>
    		<Setter Property="Foreground" Value="#FF000000"/>
    		<Setter Property="HorizontalContentAlignment" Value="Left"/>
    		<Setter Property="VerticalContentAlignment" Value="Top"/>
    		<Setter Property="Padding" Value="4,1,0,0"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="BorderBrush">
    			<Setter.Value>
    				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    					<GradientStop Color="#FFA3AEB9" Offset="0"/>
    					<GradientStop Color="#FF8399A9" Offset="0.375"/>
    					<GradientStop Color="#FF718597" Offset="0.375"/>
    					<GradientStop Color="#FF617584" Offset="1"/>
    				</LinearGradientBrush>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="CheckBox">
    					<Grid>
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="16"/>
    						
    						</Grid.ColumnDefinitions>
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver"/>
    								<VisualState x:Name="Pressed"/>
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="CheckStates">
    								<VisualState x:Name="Checked">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon"/>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Unchecked"/>
    								<VisualState x:Name="Indeterminate">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateIcon"/>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="FocusStates">
    								<VisualState x:Name="Focused"/>
    								<VisualState x:Name="Unfocused"/>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="ValidationStates">
    								<VisualState x:Name="Valid"/>
    								<VisualState x:Name="InvalidUnfocused"/>
    								<VisualState x:Name="InvalidFocused"/>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
    							<Path x:Name="CheckIcon" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" Fill="#FF333333" FlowDirection="LeftToRight" Height="12" Margin="1,1,0,1.5" Opacity="0" Stretch="Fill" Width="12.5"/>
    							<Rectangle x:Name="IndeterminateIcon" Fill="#FF333333" Height="2" Opacity="0" Width="6"/>
    							<Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" Height="14" Opacity="0" RadiusY="1" RadiusX="1" Width="14"/>
    						</Grid>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
		
		
    	<Style x:Key="GraphToggleButtonStyle" TargetType="ToggleButton">
    		<Setter Property="Background" Value="#FF1F3B53"/>
    		<Setter Property="Foreground" Value="#FF000000"/>
    		<Setter Property="Padding" Value="3"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="BorderBrush">
    			<Setter.Value>
    				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    					<GradientStop Color="#FFA3AEB9" Offset="0"/>
    					<GradientStop Color="#FF8399A9" Offset="0.375"/>
    					<GradientStop Color="#FF718597" Offset="0.375"/>
    					<GradientStop Color="#FF617584" Offset="1"/>
    				</LinearGradientBrush>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="ToggleButton">
    					<Grid Background="Transparent">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="12"/>
    							<ColumnDefinition/>
    						</Grid.ColumnDefinitions>
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver"/>
    								<VisualState x:Name="Pressed"/>
    								<VisualState x:Name="Disabled"/>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="CheckStates">
    								<VisualState x:Name="Checked">
    										<Storyboard>
    										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon"/>
    									</Storyboard>			
									</VisualState>
    								<VisualState x:Name="Unchecked"/>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="FocusStates">
    								<VisualState x:Name="Focused"/>
    								<VisualState x:Name="Unfocused"/>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    					<Rectangle VerticalAlignment="Stretch" 
							Fill="{Binding GraphColor}" 
                							 HorizontalAlignment="Left" Width="12" Height="Auto"/>
											 	<Path x:Name="CheckIcon" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" Fill="#FF333333" FlowDirection="LeftToRight" Grid.Column="1" Height="14" Margin="1,1,0,1.5" Stretch="Fill" Width="14.5" Opacity="0"/>
						</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
        <Style x:Key="SlimColumnHeaderStyle" TargetType="sdk:DataGridColumnHeader">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="SeparatorBrush" Value="#FFC9CACA"/>
            <Setter Property="Padding" Value="0,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="sdk:DataGridColumnHeader">
                        <Grid x:Name="Root" Background="{StaticResource PopupGridHeaderBackground}" Margin="0,0,1,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SortStates">
                                    <VisualState x:Name="Unsorted"/>
                                    <VisualState x:Name="SortAscending"/>
                                    <VisualState x:Name="SortDescending"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>
        <Style x:Key="CenteredDataGridCellStyle" TargetType="sdk:DataGridCell">
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Stretch"/>
        	<Setter Property="IsTabStop" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="sdk:DataGridCell">
        				<Grid x:Name="Root" Background="{TemplateBinding Background}">
        					<Grid.ColumnDefinitions>
        						<ColumnDefinition/>
        						<ColumnDefinition Width="Auto"/>
        					</Grid.ColumnDefinitions>
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CurrentStates">
        							<VisualState x:Name="Regular"/>
        							<VisualState x:Name="Current">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="ValidationStates">
        							<VisualState x:Name="Valid"/>
        							<VisualState x:Name="Invalid">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InvalidVisualElement"/>
        									<ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(Fill).Color" Storyboard.TargetName="FocusVisual"/>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Rectangle x:Name="FocusVisual" Fill="#66FFFFFF" HorizontalAlignment="Stretch" IsHitTestVisible="false" Opacity="0" Stroke="#FF6DBDD1" StrokeThickness="1" VerticalAlignment="Stretch"/>
        					<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        					<Rectangle x:Name="InvalidVisualElement" HorizontalAlignment="Stretch" IsHitTestVisible="False" Opacity="0" Stroke="#FFDC000C" StrokeThickness="1" VerticalAlignment="Stretch"/>
        					<Rectangle x:Name="RightGridLine" Grid.Column="1" VerticalAlignment="Stretch" Width="1"/>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="NonSelectableDataGridRowStyle" TargetType="sdk:DataGridRow">
        	<Setter Property="IsTabStop" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="sdk:DataGridRow">
        				<sdk:DataGridFrozenGrid x:Name="Root">
        					<sdk:DataGridFrozenGrid.Resources>
        						<Storyboard x:Key="DetailsVisibleTransition">
        							<DoubleAnimation Duration="00:00:0.1" Storyboard.TargetProperty="ContentHeight" Storyboard.TargetName="DetailsPresenter"/>
        						</Storyboard>
        					</sdk:DataGridFrozenGrid.Resources>
        					<sdk:DataGridFrozenGrid.ColumnDefinitions>
        						<ColumnDefinition Width="Auto"/>
        						<ColumnDefinition/>
        					</sdk:DataGridFrozenGrid.ColumnDefinitions>
        					<sdk:DataGridFrozenGrid.RowDefinitions>
        						<RowDefinition/>
        						<RowDefinition Height="Auto"/>
        						<RowDefinition Height="Auto"/>
        					</sdk:DataGridFrozenGrid.RowDefinitions>
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="NormalAlternatingRow">
        								<Storyboard>
        									<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundRectangle"/>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="MouseOver"/>
        							<VisualState x:Name="NormalSelected"/>
        							<VisualState x:Name="MouseOverSelected"/>
        							<VisualState x:Name="UnfocusedSelected"/>
        							<VisualState x:Name="MouseOverEditing"/>
        							<VisualState x:Name="UnfocusedEditing"/>
        							<VisualState x:Name="NormalEditing"/>
        							<VisualState x:Name="MouseOverUnfocusedEditing"/>
        							<VisualState x:Name="MouseOverUnfocusedSelected"/>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="ValidationStates">
        							<VisualState x:Name="Valid"/>
        							<VisualState x:Name="Invalid">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="BackgroundRectangle">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
        									</ObjectAnimationUsingKeyFrames>
        									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InvalidVisualElement"/>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Rectangle x:Name="BackgroundRectangle" Grid.ColumnSpan="2" Fill="#FFBADDE9" Opacity="0" Grid.RowSpan="2"/>
        					<Rectangle x:Name="InvalidVisualElement" Grid.ColumnSpan="2" Fill="#FFF7D8DB" Opacity="0" Grid.RowSpan="2"/>
        					<sdk:DataGridRowHeader x:Name="RowHeader" sdk:DataGridFrozenGrid.IsFrozen="True" Grid.RowSpan="3"/>
        					<sdk:DataGridCellsPresenter x:Name="CellsPresenter" Grid.Column="1" sdk:DataGridFrozenGrid.IsFrozen="True"/>
        					<sdk:DataGridDetailsPresenter x:Name="DetailsPresenter" Grid.Column="1" Grid.Row="1"/>
        					<Rectangle x:Name="BottomGridLine" Grid.Column="1" HorizontalAlignment="Stretch" Height="1" Grid.Row="2"/>
        				</sdk:DataGridFrozenGrid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>

    </UserControl.Resources>

    <Grid x:Name="grid" d:DataContext="{Binding Source={StaticResource ProofData}}" >

        <Border BorderBrush="#FFBABCBE" BorderThickness="2" CornerRadius="8" d:LayoutOverrides="HorizontalMargin">
            <Border.Effect>
                <DropShadowEffect Direction="331" BlurRadius="8" ShadowDepth="3"/>
            </Border.Effect>
        </Border>
        <Border BorderBrush="#FFBBBDBF" BorderThickness="2,5,2,2" CornerRadius="8" Background="White">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.4*" MaxWidth="400"/>
                	<ColumnDefinition Width="0.6*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="12"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MinHeight="30"/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle Fill="{StaticResource PopupBorders}" Cursor="Hand" Margin="0,-1,0,0" Grid.ColumnSpan="2"/>
                <Path Cursor="Hand" Data="M31.667,7.2360039E-05 C33.876141,-0.013075233 35.667,1.7671272 35.667,3.9762654 L35.667,8.9762659 L35.666985,8.9769392 L35.666985,11.976406 L35.666988,18.976406 L31.666985,18.976406 L27.66699,18.976406 L9.6669884,18.976406 C7.457849,18.976406 5.6669884,17.185545 5.6669884,14.976406 L5.6669884,9.9760742 L5.6617923,9.7705717 C5.5546594,7.6570921 3.8070998,5.9764109 1.6669962,5.9764104 L0,5.9764104 L0,4.1885428 C4.7683716E-07,1.9794044 1.7908611,0.17788482 3.9999998,0.16473651 z" Fill="{StaticResource PopupBorders}" HorizontalAlignment="Right" Height="18.976" Margin="0,-5.976,0,0" Grid.Row="1" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Top" Width="35.667" Grid.Column="1"/>
                <TextBlock TextWrapping="NoWrap" TextTrimming="WordEllipsis" Text="{Binding ModelName}" VerticalAlignment="Center" Margin="10,10,0,0" Style="{StaticResource TitleTextStyle}" FontSize="21.333" d:LayoutOverrides="Width" Grid.Row="1"/>
                <StackPanel Margin="0,10,38,0" Orientation="Horizontal" Grid.Row="1" VerticalAlignment="Center" Grid.Column="1">
                	<TextBlock TextWrapping="Wrap" Text="{Binding NumberOfSteps}" VerticalAlignment="Center" Style="{StaticResource PopupTextStyle}" HorizontalAlignment="Right" Margin="0"/>
                	<TextBlock TextWrapping="Wrap" Text="Steps" VerticalAlignment="Center" Style="{StaticResource PopupTextStyle}" HorizontalAlignment="Right" Margin="5,0,0,0"/>

                    <Button VerticalAlignment="Center" Margin="10,0,0,0" Command="{Binding Plus10StepsCommand}" Background="{StaticResource PopupGridHeaderBackground}" 
                            Content="+ 10"
                            Style="{StaticResource RunCounterExampleButtonStyle}" Foreground="White" Padding="10,3" FontSize="13.333"/>
                    <Button VerticalAlignment="Center" Margin="5,0,0,0"
                            Command="{Binding Minus10StepsCommand}" Background="{StaticResource PopupGridHeaderBackground}"
                            Content="- 10" 
                            Style="{StaticResource RunCounterExampleButtonStyle}" Foreground="White" Padding="10,3" FontSize="13.333"/>
       
                </StackPanel>
                
                <Button VerticalAlignment="Center" Margin="0,10,40,0" 
                        Command="{Binding RunCommand}" 
                        Background="#FF82BD82" 
                        Content="RUN" 
                        Style="{StaticResource RunCounterExampleButtonStyle}" Foreground="White" Padding="10,3" FontSize="13.333" HorizontalAlignment="Right" d:LayoutOverrides="HorizontalAlignment" Grid.Row="1" Grid.Column="1"/>
           
                <Button Style="{StaticResource PathButtonStyle}" 
                        Command="{Binding RandomizeCommand}"
                        HorizontalAlignment="Left" Margin="0,10,0,5" Grid.Row="2" Grid.Column="1" Foreground="Black">
                	<StackPanel Orientation="Horizontal">
                		<Path Data="F1M33,377.7158C36.271,377.7158,38.936,375.0538,38.936,371.7808C38.936,368.5098,36.271,365.8478,33,365.8478L33,367.4868C35.369,367.4868,37.297,369.4128,37.297,371.7808C37.297,374.1498,35.369,376.0768,33,376.0768C30.707,376.0768,28.844,374.2658,28.727,371.9998L31.377,371.9998L27.936,368.5588L24.492,371.9998L27.076,371.9998C27.193,375.1708,29.801,377.7158,33,377.7158" Fill="#FF787878" Height="11.868" Stretch="Fill" UseLayoutRounding="False" Margin="0,4,-0.444,4" VerticalAlignment="Center"/>
                		<TextBlock TextWrapping="Wrap" Text="Randomise" VerticalAlignment="Center" Style="{StaticResource PopupTextStyle}" HorizontalAlignment="Right" d:LayoutOverrides="GridBox" Margin="5,0,0,0"/>
                	</StackPanel>
                </Button>
                
                <Button 
					TabIndex="3" 
					Command="{Binding CloseCommand}"
					Style="{StaticResource PathButtonStyle}" HorizontalAlignment="Right" Margin="0,-1,4,-9" Grid.Column="1">
                    <Path Data="M4.6969919,3.9939952 L10.498491,9.7945509 L16.29999,3.9939954 L17.00699,4.7009959 L11.205549,10.501494 L17.00699,16.301996 L16.29999,17.008997 L10.498491,11.208438 L4.696991,17.008997 L3.9899905,16.301996 L9.7914324,10.501494 L3.9899912,4.7009959 z M0.99999994,1.0000002 L0.99999994,20.000008 L20,20.000008 L20,1.0000002 z M0,0 L21,0 L21,21 L0,21 z" Fill="White" Height="21" Stretch="Fill" Width="21" UseLayoutRounding="False"/>
                </Button>
                
                <sdk:DataGrid x:Name="VariablesGrid"
                	AutoGenerateColumns="False" 
                	ItemsSource="{Binding Variables}" 
                	Style="{StaticResource PopupDataGridStyle}"
                	BorderBrush="{StaticResource PageBorderBrush}" 
                	ColumnHeaderStyle="{StaticResource VariablesDataGridColumnHeaderStyle}" 
                	Foreground="#FF58595B" 
                	BorderThickness="1" 
                	HorizontalScrollBarVisibility="Hidden" 
                	CanUserReorderColumns="False"
                	CanUserResizeColumns="False"
                	CanUserSortColumns="False"
                	FontFamily="Verdana" 
                	FontSize="13.333"
                	RowStyle="{StaticResource NonSelectableDataGridRowStyle}" 
                	VerticalScrollBarVisibility="Auto" 
                	CellStyle="{StaticResource PopupDataGridCellStyle}"
                	Margin="10,0,10,10" HorizontalAlignment="Left" MaxWidth="400"
                            Grid.Row="3" RowHeight="24"
                            >

                	<sdk:DataGrid.Columns>

                		<sdk:DataGridTemplateColumn  
                			Header="Graph"		
                			IsReadOnly="False"
                			Width="52" HeaderStyle="{StaticResource SlimColumnHeaderStyle}">
                			<sdk:DataGridTemplateColumn.CellTemplate>
                				<DataTemplate>
                					<ToggleButton Content="ToggleButton" 
                						IsChecked="{Binding IsGraphed, Mode=TwoWay}"
                						Command="{Binding ToggleGraphedCommand}"
                                                  
                						Margin="0" Width="Auto" Style="{StaticResource GraphToggleButtonStyle}" d:LayoutOverrides="Width" Cursor="Hand"/>
                				
                				</DataTemplate>
                                
                			</sdk:DataGridTemplateColumn.CellTemplate>

                		</sdk:DataGridTemplateColumn>
                        
                        <sdk:DataGridTextColumn Binding="{Binding CellName}" IsReadOnly="True" Header="Cell" Width="*"/>
                		<sdk:DataGridTextColumn Binding="{Binding Name}" IsReadOnly="True" Header="Name" Width="*"/>
                        
                		<sdk:DataGridTextColumn Binding="{Binding Range}" IsReadOnly="True" Header="Range" HeaderStyle="{StaticResource SlimColumnHeaderStyle}" CellStyle="{StaticResource CenteredDataGridCellStyle}" Width="60"  />

                	</sdk:DataGrid.Columns>
                </sdk:DataGrid>
                
                <!--
                <sdk:GridSplitter x:Name="gridSplitter" Background="LightGray" Grid.Column="0" Grid.Row="3" Grid.RowSpan="1"/>
                -->
                
                <sdk:DataGrid 
                	x:Name="ProgressionGrid" 
                	FrozenColumnCount = "1"
                	AutoGenerateColumns="False" 
                	ItemsSource="{Binding Variables}" 
                	Style="{StaticResource PopupDataGridStyle}"
                	BorderBrush="{StaticResource PageBorderBrush}" 
                	ColumnHeaderStyle="{StaticResource VariablesDataGridColumnHeaderStyle}" 
                	Foreground="#FF58595B" 
                	BorderThickness="1" 
                	HorizontalScrollBarVisibility="Auto" 
                	FontFamily="Verdana" 
                	FontSize="13.333"
                	CanUserReorderColumns="False"
                	CanUserResizeColumns="False"
                	CanUserSortColumns="False"
                	RowStyle="{StaticResource NonSelectableDataGridRowStyle}" 
                	VerticalScrollBarVisibility="Auto" 
                	CellStyle="{StaticResource PopupDataGridCellStyle}" Margin="0,0,10,10" 
                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                    Grid.Row="3" Grid.Column="1" RowHeight="24" 
                            >

                	<sdk:DataGrid.Columns>

                		<!--<sdk:DataGridTextColumn Binding="{Binding InitialValue}" 
                			IsReadOnly="False" 
                			Header="Initial Value" HeaderStyle="{StaticResource SlimColumnHeaderStyle}" Width="88"/>-->
      
	                    <sdk:DataGridTemplateColumn  
                			Header="Initial Value"		
                			IsReadOnly="False"
                			Width="88" 
                            HeaderStyle="{StaticResource SlimColumnHeaderStyle}">
                			<sdk:DataGridTemplateColumn.CellTemplate>
                				<DataTemplate>
                					<StackPanel Orientation="Horizontal" Background="Transparent">
                						<TextBlock TextWrapping="NoWrap" 
                                                    Foreground="{Binding IsModified, Converter={StaticResource BoolToModifiedBrushConverter}}" 
                                                   Text="{Binding InitialValue}" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="32,0,0,0"/>
                						<Button Style="{StaticResource PathButtonStyle}" 
                                                Command="{Binding RandomizeCommand}"
                                                HorizontalAlignment="Left" Margin="0" Height="20">
                                            <Path Data="F1M33,377.7158C36.271,377.7158,38.936,375.0538,38.936,371.7808C38.936,368.5098,36.271,365.8478,33,365.8478L33,367.4868C35.369,367.4868,37.297,369.4128,37.297,371.7808C37.297,374.1498,35.369,376.0768,33,376.0768C30.707,376.0768,28.844,374.2658,28.727,371.9998L31.377,371.9998L27.936,368.5588L24.492,371.9998L27.076,371.9998C27.193,375.1708,29.801,377.7158,33,377.7158" 
                                                  Fill="#FFD0D2D2" Height="11.868" Stretch="Fill" Width="14.944" UseLayoutRounding="False" Margin="5,4,0,4" VerticalAlignment="Center"/>
                						</Button>
                					</StackPanel>
                				</DataTemplate>   
                			</sdk:DataGridTemplateColumn.CellTemplate>
							
							<sdk:DataGridTemplateColumn.CellEditingTemplate>
                				<DataTemplate>
                					<StackPanel Orientation="Horizontal" Background="Transparent">
                						<TextBox TextWrapping="NoWrap" 
                                                  Foreground="{Binding IsModified, Converter={StaticResource BoolToModifiedBrushConverter}}" 
                                                 Text="{Binding InitialValue, Mode=TwoWay}" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="29,0,0,0" Padding="2,0"/>
                						<Button Style="{StaticResource PathButtonStyle}" 
                                                Command="{Binding RandomizeCommand}"
                                                HorizontalAlignment="Left" Margin="0,0,0,0" Height="20">
                                            <Path Data="F1M33,377.7158C36.271,377.7158,38.936,375.0538,38.936,371.7808C38.936,368.5098,36.271,365.8478,33,365.8478L33,367.4868C35.369,367.4868,37.297,369.4128,37.297,371.7808C37.297,374.1498,35.369,376.0768,33,376.0768C30.707,376.0768,28.844,374.2658,28.727,371.9998L31.377,371.9998L27.936,368.5588L24.492,371.9998L27.076,371.9998C27.193,375.1708,29.801,377.7158,33,377.7158"
                                                  Fill="#FFD0D2D2" Height="11.868" Stretch="Fill" Width="14.944" UseLayoutRounding="False" Margin="8,4,0,4" VerticalAlignment="Center"/>
                						</Button>
                					</StackPanel>
                				
                				
                				</DataTemplate>
                                
                			</sdk:DataGridTemplateColumn.CellEditingTemplate>

                		</sdk:DataGridTemplateColumn>

                	</sdk:DataGrid.Columns>
                </sdk:DataGrid>

                <Grid x:Name="FooterPanel" Grid.Row="5" Grid.ColumnSpan="2">
                    <Rectangle RadiusX="8" RadiusY="8" Margin="0" Fill="#FFE6E6E6"/>
                    <Rectangle Fill="#FFE6E6E6" Margin="0" Height="10" VerticalAlignment="Top"/>

                    <!--<Button x:Name="SaveButton" 
					Style="{StaticResource ToolbarButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,5,5,5" Command="{Binding SaveCommand}" ToolTipService.ToolTip="Save Model" Width="44" Height="44" Grid.Row="4" Background="White">
                    <Path Data="F1M182.1255,150.4204L175.6765,156.8684L169.2285,150.4204L173.0255,150.4204L173.0255,140.4524L178.3275,140.4524L178.3275,150.4204z M165.2395,160.4794L165.2395,129.2414L177.7065,129.2414L177.7065,137.7254L186.6145,137.7254L186.6145,160.4794z M178.7065,129.9084L185.8645,136.7254L178.7065,136.7254z M178.4065,128.2414L164.2395,128.2414L164.2395,161.4794L187.6145,161.4794L187.6145,137.0114z" Fill="#FF58595B" Height="33.238" Stretch="Fill" Width="23.375" UseLayoutRounding="False"/>
                </Button>-->

                    <StackPanel  Margin="10,5,10,0" />
                    <Button x:Name="ShowGraphButton" Style="{StaticResource ToolbarButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" 
                    	Command="{Binding ShowGraphCommand}" Padding="0" ToolTipService.ToolTip="Run Proof" Width="44" Height="44" Margin="10,5,5,5" Background="White">

                    	<Canvas>
                    		<Path Data="M41.8047,227.7051L47.6177,218.8671L54.1297,224.4491L56.4547,215.1461L63.8967,219.3321L66.9197,210.0301" Height="19.008" StrokeStartLineCap="Flat" Stretch="Fill" StrokeEndLineCap="Flat" Stroke="#FFA6A8AB" StrokeThickness="1.333" StrokeMiterLimit="4" StrokeLineJoin="Miter" Width="26.448" UseLayoutRounding="False" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.Top="-9.338" Canvas.Left="-13.34"/>
                    		<Path Data="M67.9277,231.7354L41.8807,231.7354L41.8807,205.6884" Height="27.907" StrokeStartLineCap="Flat" Stretch="Fill" StrokeEndLineCap="Flat" Stroke="#FF231F20" StrokeThickness="1.86" StrokeMiterLimit="4" StrokeLineJoin="Miter" Width="27.907" UseLayoutRounding="False" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.Top="-14.007" Canvas.Left="-13.34"/>

                    	</Canvas>

                    </Button>
                </Grid>
                <Button 
                    Command="{Binding GraphAllCommand}"
                    Style="{StaticResource PathButtonStyle}" HorizontalAlignment="Left" Margin="10,10,0,5" Grid.Row="2" Foreground="Black">
                	<StackPanel Orientation="Horizontal">
                		<Path x:Name="CheckIcon" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" Fill="#FF787878" FlowDirection="LeftToRight" Height="14" Stretch="Fill" Width="14.5" UseLayoutRounding="False" d:LayoutOverrides="Height"/>
                		<TextBlock TextWrapping="Wrap" Text="All" VerticalAlignment="Center" Style="{StaticResource PopupTextStyle}" HorizontalAlignment="Right" d:LayoutOverrides="GridBox" Margin="5,0,0,0"/>
                	</StackPanel>
                </Button>

            </Grid>
        </Border>
    </Grid>

</UserControl>
