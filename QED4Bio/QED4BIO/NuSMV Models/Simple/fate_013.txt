-- specification AG ((((((((((((((((((p1.path < 4 & p1.path > 0) | (p2.path < 4 & p2.path > 0)) | (p3.path < 4 & p3.path > 0)) | (p4.path < 4 & p4.path > 0)) | (p5.path < 4 & p5.path > 0)) | ((((p2.path = 4 & p3.path = 4) & p1.path = 4) & p4.path = 4) & p5.path = 4)) | ((((p2.path = 4 & p3.path = 4) & p1.path = 4) & p4.path = 4) & p5.path = 0)) | ((((p2.path = 4 & p3.path = 4) & p1.path = 4) & p4.path = 0) & p5.path = 4)) | ((((p2.path = 4 & p3.path = 0) & p1.path = 4) & p4.path = 4) & p5.path = 4)) | ((((p2.path = 4 & p3.path = 0) & p1.path = 4) & p4.path = 4) & p5.path = 0)) | ((((p2.path = 4 & p3.path = 0) & p1.path = 4) & p4.path = 0) & p5.path = 4)) | ((((p2.path = 0 & p3.path = 4) & p1.path = 4) & p4.path = 4) & p5.path = 4)) | ((((p2.path = 0 & p3.path = 4) & p1.path = 4) & p4.path = 4) & p5.path = 0)) | ((((p2.path = 0 & p3.path = 4) & p1.path = 4) & p4.path = 0) & p5.path = 4)) | ((((p2.path = 0 & p3.path = 0) & p1.path = 4) & p4.path = 4) & p5.path = 4)) | ((((p2.path = 0 & p3.path = 0) & p1.path = 4) & p4.path = 4) & p5.path = 0)) | ((((p2.path = 4 & p3.path = 4) & p1.path = 0) & p4.path = 4) & p5.path = 4)) | ((((p2.path = 4 & p3.path = 4) & p1.path = 0) & p4.path = 4) & p5.path = 0))  is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 14.1 <-
  t.var1 = FALSE
  t.var2 = FALSE
  t.var3 = FALSE
  t.var4 = FALSE
  t.var5 = FALSE
  t.step = 49
  t.state1 = waiting
  t.state2 = waiting
  t.state3 = waiting
  t.state4 = waiting
  t.state5 = waiting
  t.reset = FALSE
  p1.path = 1
  p1.signal = 3
  p2.path = 1
  p2.signal = 3
  p3.path = 1
  p3.signal = 3
  p4.path = 1
  p4.signal = 3
  p5.path = 1
  p5.signal = 3
-> State: 14.2 <-
  t.state2 = running
-> State: 14.3 <-
  t.var2 = TRUE
  t.step = 48
-> State: 14.4 <-
  t.step = 47
  p2.path = 4
  p2.signal = 2
-> State: 14.5 <-
  t.step = 46
  p2.signal = 0
-> State: 14.6 <-
  t.step = 45
-> State: 14.7 <-
  t.step = 44
-> State: 14.8 <-
  t.step = 43
-> State: 14.9 <-
  t.step = 42
-> State: 14.10 <-
  t.step = 41
-> State: 14.11 <-
  t.step = 40
-> State: 14.12 <-
  t.step = 39
-> State: 14.13 <-
  t.step = 38
-> State: 14.14 <-
  t.step = 37
-> State: 14.15 <-
  t.step = 36
-> State: 14.16 <-
  t.step = 35
-> State: 14.17 <-
  t.step = 34
-> State: 14.18 <-
  t.step = 33
-> State: 14.19 <-
  t.step = 32
-> State: 14.20 <-
  t.step = 31
-> State: 14.21 <-
  t.step = 30
-> State: 14.22 <-
  t.step = 29
-> State: 14.23 <-
  t.step = 28
-> State: 14.24 <-
  t.step = 27
-> State: 14.25 <-
  t.step = 26
-> State: 14.26 <-
  t.step = 25
-> State: 14.27 <-
  t.step = 24
-> State: 14.28 <-
  t.step = 23
-> State: 14.29 <-
  t.step = 22
-> State: 14.30 <-
  t.step = 21
-> State: 14.31 <-
  t.step = 20
-> State: 14.32 <-
  t.step = 19
-> State: 14.33 <-
  t.step = 18
-> State: 14.34 <-
  t.step = 17
-> State: 14.35 <-
  t.step = 16
-> State: 14.36 <-
  t.step = 15
-> State: 14.37 <-
  t.step = 14
-> State: 14.38 <-
  t.step = 13
-> State: 14.39 <-
  t.step = 12
-> State: 14.40 <-
  t.step = 11
-> State: 14.41 <-
  t.step = 10
-> State: 14.42 <-
  t.step = 9
-> State: 14.43 <-
  t.step = 8
-> State: 14.44 <-
  t.step = 7
-> State: 14.45 <-
  t.step = 6
-> State: 14.46 <-
  t.step = 5
-> State: 14.47 <-
  t.step = 4
-> State: 14.48 <-
  t.step = 3
-> State: 14.49 <-
  t.step = 2
-> State: 14.50 <-
  t.step = 1
-> State: 14.51 <-
  t.step = 0
-> State: 14.52 <-
  t.step = 49
  t.state2 = exhausted
-> State: 14.53 <-
  t.var2 = FALSE
  t.state1 = running
  t.state3 = running
  t.state4 = running
  t.state5 = running
-> State: 14.54 <-
  t.var1 = TRUE
  t.var3 = TRUE
  t.var4 = TRUE
  t.var5 = TRUE
  t.step = 48
-> State: 14.55 <-
  t.step = 47
  p1.path = 0
  p1.signal = 4
  p3.path = 0
  p3.signal = 4
  p4.path = 4
  p4.signal = 2
  p5.path = 4
  p5.signal = 2
