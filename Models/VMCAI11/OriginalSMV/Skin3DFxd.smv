-- Generated with BioCheck on Thu Apr 08 19:58:29 BST 2010

module main() {

	gt2_4_3_0 : 0 .. 3; 
	bcat1_2_3 : 0 .. 3; 
	bcat1_2_2 : 0 .. 3; 
	bcat1_2_1 : 0 .. 3; 
	bcat1_2_0 : 0 .. 3; 
	gt1_2_2_3 : 0 .. 3; 
	gt1_3_1_0 : 0 .. 3; 
	gt1_2_2_2 : 0 .. 3; 
	gt1_2_2_1 : 0 .. 3; 
	wnt3_4_3 : 0 .. 3; 
	gt1_3_1_3 : 0 .. 3; 
	gt1_2_2_0 : 0 .. 3; 
	wnt3_4_2 : 0 .. 3; 
	gt1_3_1_1 : 0 .. 3; 
	wnt3_4_1 : 0 .. 3; 
	wnt3_4_0 : 0 .. 3; 
	gt1_3_1_2 : 0 .. 3; 
	gt1_2_4_1 : 0 .. 3; 
	gt1_2_4_2 : 0 .. 3; 
	gt1_2_4_0 : 0 .. 3; 
	p21_3_4_0 : 0 .. 3; 
	p21_3_4_2 : 0 .. 3; 
	p21_3_4_1 : 0 .. 3; 
	p21_3_4_3 : 0 .. 3; 
	gt2_4_1_0 : 0 .. 3; 
	gt2_4_1_1 : 0 .. 3; 
	gt2_4_1_2 : 0 .. 3; 
	p21_3_2_0 : 0 .. 3; 
	p21_3_2_1 : 0 .. 3; 
	p21_3_2_2 : 0 .. 3; 
	p21_3_2_3 : 0 .. 3; 
	gt2_2_0_1 : 0 .. 3; 
	gt1_3_3_1 : 0 .. 3; 
	gt1_3_3_2 : 0 .. 3; 
	gt2_2_0_0 : 0 .. 3; 
	gt2_1_1_2 : 0 .. 3; 
	gt2_1_1_3 : 0 .. 3; 
	gt1_3_3_0 : 0 .. 3; 
	frizzled1_1_1 : 0 .. 3; 
	gt2_1_1_0 : 0 .. 3; 
	wntext2_4_1 : 0 .. 3; 
	gt2_1_1_1 : 0 .. 3; 
	wntext2_4_0 : 0 .. 3; 
	frizzled1_1_0 : 0 .. 3; 
	wntext2_4_3 : 0 .. 3; 
	gt2_2_0_3 : 0 .. 3; 
	notchic3_4_0 : 0 .. 3; 
	wntext2_4_2 : 0 .. 3; 
	gt2_2_0_2 : 0 .. 3; 
	notchic3_4_2 : 0 .. 3; 
	gt2_3_0_2 : 0 .. 3; 
	gt2_3_0_1 : 0 .. 3; 
	notchic3_4_1 : 0 .. 3; 
	frizzled1_1_3 : 0 .. 3; 
	notchic3_4_3 : 0 .. 3; 
	gt2_3_0_3 : 0 .. 3; 
	frizzled1_1_2 : 0 .. 3; 
	gt2_3_0_0 : 0 .. 3; 
	wnt2_2_3 : 0 .. 3; 
	gt2_3_2_0 : 0 .. 3; 
	wnt2_0_0 : 0 .. 3; 
	gt2_3_2_1 : 0 .. 3; 
	gt2_4_1_3 : 0 .. 3; 
	gt2_3_2_2 : 0 .. 3; 
	axin0_0_1 : 0 .. 3; 
	wnt2_2_0 : 0 .. 3; 
	axin0_0_0 : 0 .. 3; 
	wnt2_2_2 : 0 .. 3; 
	wnt2_2_1 : 0 .. 3; 
	gt2_1_3_3 : 0 .. 3; 
	gt2_1_3_2 : 0 .. 3; 
	axin0_0_3 : 0 .. 3; 
	gt2_1_3_1 : 0 .. 3; 
	gt2_1_3_0 : 0 .. 3; 
	axin0_0_2 : 0 .. 3; 
	wnt2_0_2 : 0 .. 3; 
	wnt2_0_1 : 0 .. 3; 
	wnt2_0_3 : 0 .. 3; 
	p21_2_2_0 : 0 .. 3; 
	p21_2_2_1 : 0 .. 3; 
	p21_2_2_2 : 0 .. 3; 
	gt1_2_4_3 : 0 .. 3; 
	p21_2_2_3 : 0 .. 3; 
	notchic3_0_0 : 0 .. 3; 
	notchic3_0_3 : 0 .. 3; 
	notchic3_0_1 : 0 .. 3; 
	notchic3_0_2 : 0 .. 3; 
	gt2_4_3_2 : 0 .. 3; 
	gt2_4_3_1 : 0 .. 3; 
	gt2_4_3_3 : 0 .. 3; 
	p21_2_0_1 : 0 .. 3; 
	p21_2_0_0 : 0 .. 3; 
	p21_2_0_3 : 0 .. 3; 
	p21_2_0_2 : 0 .. 3; 
	wnt4_3_3 : 0 .. 3; 
	delta4_1_1 : 0 .. 3; 
	wnt4_3_2 : 0 .. 3; 
	delta4_1_2 : 0 .. 3; 
	delta4_1_3 : 0 .. 3; 
	wnt4_3_1 : 0 .. 3; 
	wnt4_3_0 : 0 .. 3; 
	gt1_1_0_0 : 0 .. 3; 
	p21_0_0_0 : 0 .. 3; 
	gt1_1_0_1 : 0 .. 3; 
	p21_0_0_1 : 0 .. 3; 
	gt2_0_1_0 : 0 .. 3; 
	gt2_0_1_1 : 0 .. 3; 
	gt1_1_0_2 : 0 .. 3; 
	gt1_1_0_3 : 0 .. 3; 
	gt2_0_1_2 : 0 .. 3; 
	gt2_0_1_3 : 0 .. 3; 
	p21_0_0_2 : 0 .. 3; 
	p21_0_0_3 : 0 .. 3; 
	gt1_1_2_1 : 0 .. 3; 
	gt1_1_2_0 : 0 .. 3; 
	gt1_1_2_3 : 0 .. 3; 
	p21_0_2_3 : 0 .. 3; 
	p21_0_2_2 : 0 .. 3; 
	gt1_1_2_2 : 0 .. 3; 
	p21_0_2_1 : 0 .. 3; 
	p21_0_2_0 : 0 .. 3; 
	delta3_4_3 : 0 .. 3; 
	notchic2_0_1 : 0 .. 3; 
	wnt4_1_2 : 0 .. 3; 
	wnt4_1_3 : 0 .. 3; 
	notchic2_0_0 : 0 .. 3; 
	notchic2_0_3 : 0 .. 3; 
	wnt4_1_0 : 0 .. 3; 
	delta3_4_0 : 0 .. 3; 
	wnt4_1_1 : 0 .. 3; 
	notchic2_0_2 : 0 .. 3; 
	delta3_4_1 : 0 .. 3; 
	delta3_4_2 : 0 .. 3; 
	gt2_0_3_0 : 0 .. 3; 
	gt2_3_2_3 : 0 .. 3; 
	gt2_0_3_3 : 0 .. 3; 
	gt2_0_3_1 : 0 .. 3; 
	gt2_0_3_2 : 0 .. 3; 
	axin3_4_3 : 0 .. 3; 
	p21_0_4_3 : 0 .. 3; 
	p21_0_4_2 : 0 .. 3; 
	notchic1_3_1 : 0 .. 3; 
	notchic1_3_0 : 0 .. 3; 
	notchic1_3_3 : 0 .. 3; 
	notchic1_3_2 : 0 .. 3; 
	delta0_0_2 : 0 .. 3; 
	delta0_0_3 : 0 .. 3; 
	gt1_1_4_3 : 0 .. 3; 
	delta4_1_0 : 0 .. 3; 
	gt1_1_4_2 : 0 .. 3; 
	delta0_0_0 : 0 .. 3; 
	p21_0_4_1 : 0 .. 3; 
	gt1_1_4_1 : 0 .. 3; 
	delta0_0_1 : 0 .. 3; 
	gt1_1_4_0 : 0 .. 3; 
	p21_0_4_0 : 0 .. 3; 
	delta2_3_1 : 0 .. 3; 
	delta2_3_2 : 0 .. 3; 
	delta2_3_3 : 0 .. 3; 
	frizzled0_2_3 : 0 .. 3; 
	p21_4_0_0 : 0 .. 3; 
	p21_4_0_1 : 0 .. 3; 
	frizzled0_2_2 : 0 .. 3; 
	deltaext3_4_2 : 0 .. 3; 
	frizzled0_2_1 : 0 .. 3; 
	p21_4_0_2 : 0 .. 3; 
	deltaext3_4_3 : 0 .. 3; 
	p21_4_0_3 : 0 .. 3; 
	frizzled0_2_0 : 0 .. 3; 
	deltaext3_4_0 : 0 .. 3; 
	deltaext3_4_1 : 0 .. 3; 
	axin3_4_0 : 0 .. 3; 
	p21_4_2_1 : 0 .. 3; 
	p21_4_2_0 : 0 .. 3; 
	p21_4_2_3 : 0 .. 3; 
	axin3_4_2 : 0 .. 3; 
	deltaext1_0_0 : 0 .. 3; 
	p21_4_2_2 : 0 .. 3; 
	deltaext1_0_1 : 0 .. 3; 
	axin3_4_1 : 0 .. 3; 
	notchic0_4_0 : 0 .. 3; 
	deltaext1_0_2 : 0 .. 3; 
	deltaext1_0_3 : 0 .. 3; 
	notchic0_4_1 : 0 .. 3; 
	notchic0_4_2 : 0 .. 3; 
	notchic0_4_3 : 0 .. 3; 
	frizzled0_4_2 : 0 .. 3; 
	frizzled0_4_3 : 0 .. 3; 
	frizzled0_4_0 : 0 .. 3; 
	frizzled0_4_1 : 0 .. 3; 
	notchic0_0_3 : 0 .. 3; 
	notchic0_0_2 : 0 .. 3; 
	notchic0_0_1 : 0 .. 3; 
	notchic0_0_0 : 0 .. 3; 
	wnt0_4_3 : 0 .. 3; 
	wnt0_4_0 : 0 .. 3; 
	wnt0_4_1 : 0 .. 3; 
	wnt0_4_2 : 0 .. 3; 
	frizzled4_3_3 : 0 .. 3; 
	p21_4_4_1 : 0 .. 3; 
	p21_4_4_0 : 0 .. 3; 
	frizzled4_3_1 : 0 .. 3; 
	frizzled4_3_2 : 0 .. 3; 
	delta2_3_0 : 0 .. 3; 
	frizzled4_3_0 : 0 .. 3; 
	p21_4_4_3 : 0 .. 3; 
	p21_4_4_2 : 0 .. 3; 
	deltaext2_4_3 : 0 .. 3; 
	deltaext2_4_1 : 0 .. 3; 
	deltaext2_4_2 : 0 .. 3; 
	bcat1_0_1 : 0 .. 3; 
	bcat1_0_2 : 0 .. 3; 
	bcat1_0_3 : 0 .. 3; 
	deltaext2_4_0 : 0 .. 3; 
	dsh3_4_1 : 0 .. 3; 
	dsh3_4_0 : 0 .. 3; 
	dsh3_4_3 : 0 .. 3; 
	dsh3_4_2 : 0 .. 3; 
	dsh4_3_1 : 0 .. 3; 
	dsh0_4_0 : 0 .. 3; 
	dsh4_3_0 : 0 .. 3; 
	dsh4_3_3 : 0 .. 3; 
	deltaext4_1_3 : 0 .. 3; 
	gt1_0_0_0 : 0 .. 3; 
	dsh0_4_1 : 0 .. 3; 
	dsh0_4_2 : 0 .. 3; 
	dsh4_3_2 : 0 .. 3; 
	deltaext4_1_2 : 0 .. 3; 
	gt1_0_0_2 : 0 .. 3; 
	gt1_0_0_1 : 0 .. 3; 
	gt1_0_0_3 : 0 .. 3; 
	bcat1_0_0 : 0 .. 3; 
	dsh3_2_3 : 0 .. 3; 
	dsh1_4_0 : 0 .. 3; 
	dsh1_4_1 : 0 .. 3; 
	dsh3_2_2 : 0 .. 3; 
	dsh0_2_2 : 0 .. 3; 
	bcat1_4_3 : 0 .. 3; 
	wnt1_3_3 : 0 .. 3; 
	dsh0_2_1 : 0 .. 3; 
	bcat1_4_2 : 0 .. 3; 
	dsh0_2_3 : 0 .. 3; 
	dsh1_1_0 : 0 .. 3; 
	bcat1_4_1 : 0 .. 3; 
	dsh1_1_1 : 0 .. 3; 
	bcat1_4_0 : 0 .. 3; 
	wnt1_3_0 : 0 .. 3; 
	deltaext4_1_0 : 0 .. 3; 
	deltaext4_1_1 : 0 .. 3; 
	dsh1_1_2 : 0 .. 3; 
	dsh1_1_3 : 0 .. 3; 
	wnt1_3_2 : 0 .. 3; 
	dsh0_2_0 : 0 .. 3; 
	wnt1_3_1 : 0 .. 3; 
	axin2_0_3 : 0 .. 3; 
	bcat2_3_3 : 0 .. 3; 
	axin2_0_2 : 0 .. 3; 
	notchic3_2_3 : 0 .. 3; 
	bcat2_3_2 : 0 .. 3; 
	axin2_0_1 : 0 .. 3; 
	axin2_0_0 : 0 .. 3; 
	bcat2_3_1 : 0 .. 3; 
	bcat2_3_0 : 0 .. 3; 
	notchic3_2_1 : 0 .. 3; 
	notchic3_2_2 : 0 .. 3; 
	dsh1_4_3 : 0 .. 3; 
	dsh3_2_0 : 0 .. 3; 
	dsh1_4_2 : 0 .. 3; 
	notchic3_2_0 : 0 .. 3; 
	dsh3_2_1 : 0 .. 3; 
	axin0_2_0 : 0 .. 3; 
	axin0_2_1 : 0 .. 3; 
	axin0_2_2 : 0 .. 3; 
	axin0_2_3 : 0 .. 3; 
	dsh3_0_1 : 0 .. 3; 
	dsh3_0_0 : 0 .. 3; 
	dsh3_0_3 : 0 .. 3; 
	dsh3_0_2 : 0 .. 3; 
	wnt2_4_3 : 0 .. 3; 
	wnt2_4_1 : 0 .. 3; 
	dsh0_4_3 : 0 .. 3; 
	wnt2_4_2 : 0 .. 3; 
	wnt2_4_0 : 0 .. 3; 
	wntext2_2_1 : 0 .. 3; 
	wntext2_2_0 : 0 .. 3; 
	wntext2_2_3 : 0 .. 3; 
	wntext2_2_2 : 0 .. 3; 
	delta0_2_0 : 0 .. 3; 
	delta0_2_1 : 0 .. 3; 
	delta0_2_2 : 0 .. 3; 
	delta0_2_3 : 0 .. 3; 
	gt2_2_3_2 : 0 .. 3; 
	frizzled3_4_3 : 0 .. 3; 
	gt2_2_3_1 : 0 .. 3; 
	frizzled3_4_2 : 0 .. 3; 
	gt2_2_3_0 : 0 .. 3; 
	frizzled3_4_1 : 0 .. 3; 
	frizzled3_4_0 : 0 .. 3; 
	wntext4_3_3 : 0 .. 3; 
	wntext4_3_0 : 0 .. 3; 
	wntext4_3_2 : 0 .. 3; 
	wntext4_3_1 : 0 .. 3; 
	delta1_0_0 : 0 .. 3; 
	delta1_0_2 : 0 .. 3; 
	delta1_0_1 : 0 .. 3; 
	delta1_0_3 : 0 .. 3; 
	axin1_4_2 : 0 .. 3; 
	bcat3_2_0 : 0 .. 3; 
	axin1_4_1 : 0 .. 3; 
	axin1_4_3 : 0 .. 3; 
	delta2_1_3 : 0 .. 3; 
	bcat3_2_3 : 0 .. 3; 
	axin1_4_0 : 0 .. 3; 
	bcat3_2_2 : 0 .. 3; 
	bcat3_2_1 : 0 .. 3; 
	wntext1_4_0 : 0 .. 3; 
	deltaext1_2_3 : 0 .. 3; 
	wntext1_4_2 : 0 .. 3; 
	wntext1_4_1 : 0 .. 3; 
	deltaext1_2_2 : 0 .. 3; 
	deltaext1_2_1 : 0 .. 3; 
	wntext1_4_3 : 0 .. 3; 
	deltaext1_2_0 : 0 .. 3; 
	notchic0_2_0 : 0 .. 3; 
	notchic0_2_1 : 0 .. 3; 
	deltaext3_2_1 : 0 .. 3; 
	notchic0_2_2 : 0 .. 3; 
	notchic0_2_3 : 0 .. 3; 
	deltaext3_2_0 : 0 .. 3; 
	gt2_2_3_3 : 0 .. 3; 
	deltaext3_2_2 : 0 .. 3; 
	deltaext3_2_3 : 0 .. 3; 
	delta2_1_0 : 0 .. 3; 
	delta2_1_1 : 0 .. 3; 
	delta2_1_2 : 0 .. 3; 
	gt1_4_3_2 : 0 .. 3; 
	gt1_4_3_3 : 0 .. 3; 
	wntext1_3_0 : 0 .. 3; 
	frizzled1_4_1 : 0 .. 3; 
	frizzled1_4_2 : 0 .. 3; 
	axin4_1_0 : 0 .. 3; 
	wntext1_3_1 : 0 .. 3; 
	frizzled1_4_0 : 0 .. 3; 
	axin4_1_3 : 0 .. 3; 
	frizzled1_4_3 : 0 .. 3; 
	wntext1_3_2 : 0 .. 3; 
	axin4_1_1 : 0 .. 3; 
	wntext1_3_3 : 0 .. 3; 
	axin4_1_2 : 0 .. 3; 
	axin0_4_0 : 0 .. 3; 
	axin0_4_1 : 0 .. 3; 
	axin0_4_2 : 0 .. 3; 
	axin0_4_3 : 0 .. 3; 
	deltaext0_2_0 : 0 .. 3; 
	deltaext0_2_3 : 0 .. 3; 
	deltaext0_2_1 : 0 .. 3; 
	deltaext0_2_2 : 0 .. 3; 
	wntext1_1_3 : 0 .. 3; 
	wntext1_1_2 : 0 .. 3; 
	wntext1_1_1 : 0 .. 3; 
	gt2_3_4_0 : 0 .. 3; 
	wntext1_1_0 : 0 .. 3; 
	axin4_3_2 : 0 .. 3; 
	axin4_3_1 : 0 .. 3; 
	axin4_3_0 : 0 .. 3; 
	wntext3_4_1 : 0 .. 3; 
	wntext3_4_2 : 0 .. 3; 
	wntext3_4_0 : 0 .. 3; 
	wntext3_4_3 : 0 .. 3; 
	delta3_1_1 : 0 .. 3; 
	delta3_1_0 : 0 .. 3; 
	wntext0_2_3 : 0 .. 3; 
	wntext0_2_2 : 0 .. 3; 
	wntext0_2_1 : 0 .. 3; 
	wntext0_2_0 : 0 .. 3; 
	delta3_1_2 : 0 .. 3; 
	delta3_1_3 : 0 .. 3; 
	deltaext2_1_0 : 0 .. 3; 
	frizzled2_1_0 : 0 .. 3; 
	deltaext2_1_1 : 0 .. 3; 
	deltaext2_1_2 : 0 .. 3; 
	deltaext2_1_3 : 0 .. 3; 
	wntext0_4_0 : 0 .. 3; 
	wnt3_0_2 : 0 .. 3; 
	frizzled2_1_3 : 0 .. 3; 
	wnt3_0_3 : 0 .. 3; 
	wntext0_4_1 : 0 .. 3; 
	wnt3_0_0 : 0 .. 3; 
	frizzled2_1_2 : 0 .. 3; 
	wnt3_0_1 : 0 .. 3; 
	frizzled2_1_1 : 0 .. 3; 
	wntext0_4_2 : 0 .. 3; 
	wntext0_4_3 : 0 .. 3; 
	wntext2_1_1 : 0 .. 3; 
	wntext2_1_2 : 0 .. 3; 
	wntext2_1_0 : 0 .. 3; 
	wntext2_1_3 : 0 .. 3; 
	bcat0_3_3 : 0 .. 3; 
	bcat0_3_0 : 0 .. 3; 
	bcat0_3_2 : 0 .. 3; 
	bcat0_3_1 : 0 .. 3; 
	delta0_4_2 : 0 .. 3; 
	delta1_2_1 : 0 .. 3; 
	notchic4_2_1 : 0 .. 3; 
	delta0_4_3 : 0 .. 3; 
	notchic4_2_0 : 0 .. 3; 
	delta1_2_2 : 0 .. 3; 
	delta1_2_0 : 0 .. 3; 
	bcat0_1_0 : 0 .. 3; 
	notchic4_2_3 : 0 .. 3; 
	notchic4_2_2 : 0 .. 3; 
	axin3_0_3 : 0 .. 3; 
	axin2_3_0 : 0 .. 3; 
	axin2_3_2 : 0 .. 3; 
	bcat0_1_3 : 0 .. 3; 
	axin3_0_0 : 0 .. 3; 
	axin2_3_1 : 0 .. 3; 
	axin3_0_1 : 0 .. 3; 
	deltaext1_4_1 : 0 .. 3; 
	bcat0_1_2 : 0 .. 3; 
	axin2_3_3 : 0 .. 3; 
	bcat0_1_1 : 0 .. 3; 
	deltaext1_4_0 : 0 .. 3; 
	axin3_0_2 : 0 .. 3; 
	dsh4_1_1 : 0 .. 3; 
	dsh4_1_0 : 0 .. 3; 
	delta0_4_1 : 0 .. 3; 
	delta1_2_3 : 0 .. 3; 
	delta0_4_0 : 0 .. 3; 
	bcat2_1_3 : 0 .. 3; 
	dsh1_3_3 : 0 .. 3; 
	bcat3_4_0 : 0 .. 3; 
	bcat2_1_0 : 0 .. 3; 
	bcat3_4_2 : 0 .. 3; 
	bcat2_1_1 : 0 .. 3; 
	bcat3_4_1 : 0 .. 3; 
	bcat2_1_2 : 0 .. 3; 
	deltaext1_4_2 : 0 .. 3; 
	axin3_2_2 : 0 .. 3; 
	bcat3_4_3 : 0 .. 3; 
	deltaext1_4_3 : 0 .. 3; 
	axin2_1_0 : 0 .. 3; 
	axin3_2_1 : 0 .. 3; 
	axin2_1_1 : 0 .. 3; 
	axin3_2_3 : 0 .. 3; 
	axin2_1_2 : 0 .. 3; 
	axin2_1_3 : 0 .. 3; 
	axin3_2_0 : 0 .. 3; 
	bcat4_1_0 : 0 .. 3; 
	bcat4_1_3 : 0 .. 3; 
	bcat4_1_1 : 0 .. 3; 
	bcat4_1_2 : 0 .. 3; 
	gt1_0_3_3 : 0 .. 3; 
	gt1_0_3_2 : 0 .. 3; 
	gt1_0_3_1 : 0 .. 3; 
	axin4_3_3 : 0 .. 3; 
	gt1_0_3_0 : 0 .. 3; 
	gt1_0_1_2 : 0 .. 3; 
	gt1_0_1_3 : 0 .. 3; 
	gt1_0_1_0 : 0 .. 3; 
	gt1_0_1_1 : 0 .. 3; 
	bcat4_3_3 : 0 .. 3; 
	bcat3_0_3 : 0 .. 3; 
	bcat3_0_0 : 0 .. 3; 
	bcat3_0_1 : 0 .. 3; 
	bcat3_0_2 : 0 .. 3; 
	bcat4_3_0 : 0 .. 3; 
	gt1_4_3_0 : 0 .. 3; 
	bcat4_3_1 : 0 .. 3; 
	bcat4_3_2 : 0 .. 3; 
	gt1_4_3_1 : 0 .. 3; 
	gt1_4_1_1 : 0 .. 3; 
	gt1_4_1_0 : 0 .. 3; 
	gt1_4_1_3 : 0 .. 3; 
	gt1_4_1_2 : 0 .. 3; 
	wnt0_3_3 : 0 .. 3; 
	wnt0_3_2 : 0 .. 3; 
	wnt0_3_1 : 0 .. 3; 
	wnt0_3_0 : 0 .. 3; 
	wnt0_1_2 : 0 .. 3; 
	wnt0_1_3 : 0 .. 3; 
	wnt0_1_0 : 0 .. 3; 
	wnt0_1_1 : 0 .. 3; 
	deltaext0_4_3 : 0 .. 3; 
	frizzled0_1_0 : 0 .. 3; 
	frizzled0_1_1 : 0 .. 3; 
	frizzled0_1_2 : 0 .. 3; 
	frizzled0_1_3 : 0 .. 3; 
	deltaext0_4_0 : 0 .. 3; 
	deltaext0_4_2 : 0 .. 3; 
	deltaext0_4_1 : 0 .. 3; 
	deltaext4_3_3 : 0 .. 3; 
	dsh4_1_3 : 0 .. 3; 
	deltaext4_3_2 : 0 .. 3; 
	notchic1_2_0 : 0 .. 3; 
	dsh4_1_2 : 0 .. 3; 
	wntext3_2_0 : 0 .. 3; 
	deltaext4_3_1 : 0 .. 3; 
	deltaext4_3_0 : 0 .. 3; 
	notchic1_2_3 : 0 .. 3; 
	wntext3_2_2 : 0 .. 3; 
	wntext3_2_1 : 0 .. 3; 
	notchic1_2_1 : 0 .. 3; 
	wntext3_2_3 : 0 .. 3; 
	notchic1_2_2 : 0 .. 3; 
	notchic2_1_0 : 0 .. 3; 
	notchic2_1_3 : 0 .. 3; 
	notchic2_1_1 : 0 .. 3; 
	notchic2_1_2 : 0 .. 3; 
	frizzled2_3_0 : 0 .. 3; 
	wnt3_2_1 : 0 .. 3; 
	frizzled2_3_1 : 0 .. 3; 
	notchic2_3_3 : 0 .. 3; 
	frizzled2_3_2 : 0 .. 3; 
	wnt3_2_0 : 0 .. 3; 
	frizzled2_3_3 : 0 .. 3; 
	wnt3_2_3 : 0 .. 3; 
	wnt3_2_2 : 0 .. 3; 
	wnt1_0_3 : 0 .. 3; 
	wnt1_0_2 : 0 .. 3; 
	wnt1_0_1 : 0 .. 3; 
	wnt1_0_0 : 0 .. 3; 
	notchic2_3_2 : 0 .. 3; 
	notchic2_3_1 : 0 .. 3; 
	notchic2_3_0 : 0 .. 3; 
	frizzled3_2_0 : 0 .. 3; 
	dsh2_2_2 : 0 .. 3; 
	dsh2_2_1 : 0 .. 3; 
	dsh2_2_0 : 0 .. 3; 
	frizzled3_2_2 : 0 .. 3; 
	frizzled3_2_1 : 0 .. 3; 
	axin1_1_3 : 0 .. 3; 
	wntext0_1_0 : 0 .. 3; 
	frizzled3_2_3 : 0 .. 3; 
	axin1_1_2 : 0 .. 3; 
	gt1_3_3_3 : 0 .. 3; 
	axin1_1_1 : 0 .. 3; 
	axin1_1_0 : 0 .. 3; 
	delta1_4_2 : 0 .. 3; 
	delta1_4_1 : 0 .. 3; 
	delta1_4_3 : 0 .. 3; 
	frizzled3_0_0 : 0 .. 3; 
	wntext0_1_3 : 0 .. 3; 
	frizzled3_0_1 : 0 .. 3; 
	notchic4_0_0 : 0 .. 3; 
	notchic4_0_1 : 0 .. 3; 
	dsh2_4_0 : 0 .. 3; 
	frizzled3_0_2 : 0 .. 3; 
	frizzled3_0_3 : 0 .. 3; 
	wntext0_1_1 : 0 .. 3; 
	notchic4_0_2 : 0 .. 3; 
	notchic4_0_3 : 0 .. 3; 
	wntext0_1_2 : 0 .. 3; 
	p21_1_2_3 : 0 .. 3; 
	notchic4_4_3 : 0 .. 3; 
	notchic4_4_2 : 0 .. 3; 
	notchic4_4_1 : 0 .. 3; 
	notchic4_4_0 : 0 .. 3; 
	delta1_4_0 : 0 .. 3; 
	p21_1_2_1 : 0 .. 3; 
	p21_1_2_2 : 0 .. 3; 
	p21_1_2_0 : 0 .. 3; 
	p21_1_4_0 : 0 .. 3; 
	p21_1_4_3 : 0 .. 3; 
	p21_1_4_2 : 0 .. 3; 
	p21_1_4_1 : 0 .. 3; 
	wntext4_1_2 : 0 .. 3; 
	wntext4_1_1 : 0 .. 3; 
	p21_3_1_3 : 0 .. 3; 
	wntext4_1_3 : 0 .. 3; 
	p21_3_1_2 : 0 .. 3; 
	wntext4_1_0 : 0 .. 3; 
	p21_3_1_1 : 0 .. 3; 
	p21_3_1_0 : 0 .. 3; 
	frizzled4_1_0 : 0 .. 3; 
	frizzled4_1_2 : 0 .. 3; 
	frizzled4_1_1 : 0 .. 3; 
	frizzled4_1_3 : 0 .. 3; 
	gt2_3_4_1 : 0 .. 3; 
	gt2_3_4_2 : 0 .. 3; 
	gt2_3_4_3 : 0 .. 3; 
	dsh2_4_2 : 0 .. 3; 
	dsh2_4_1 : 0 .. 3; 
	dsh2_4_3 : 0 .. 3; 
	delta4_4_1 : 0 .. 3; 
	delta4_4_0 : 0 .. 3; 
	delta4_4_3 : 0 .. 3; 
	delta4_4_2 : 0 .. 3; 
	dsh2_2_3 : 0 .. 3; 
	gt1_2_1_1 : 0 .. 3; 
	gt1_3_2_2 : 0 .. 3; 
	gt1_3_2_3 : 0 .. 3; 
	gt1_2_1_0 : 0 .. 3; 
	gt1_3_2_0 : 0 .. 3; 
	gt1_3_2_1 : 0 .. 3; 
	gt1_2_1_3 : 0 .. 3; 
	gt1_2_1_2 : 0 .. 3; 
	gt2_4_2_0 : 0 .. 3; 
	gt2_4_2_1 : 0 .. 3; 
	p21_0_1_3 : 0 .. 3; 
	p21_0_1_1 : 0 .. 3; 
	p21_0_1_2 : 0 .. 3; 
	p21_0_1_0 : 0 .. 3; 
	wnt4_2_0 : 0 .. 3; 
	gt1_3_0_3 : 0 .. 3; 
	gt1_3_0_2 : 0 .. 3; 
	gt1_2_3_2 : 0 .. 3; 
	gt1_3_0_1 : 0 .. 3; 
	gt1_2_3_3 : 0 .. 3; 
	wnt4_2_3 : 0 .. 3; 
	gt1_3_0_0 : 0 .. 3; 
	wnt4_2_2 : 0 .. 3; 
	gt1_2_3_0 : 0 .. 3; 
	wnt4_2_1 : 0 .. 3; 
	gt1_2_3_1 : 0 .. 3; 
	gt2_4_0_0 : 0 .. 3; 
	notchic1_4_3 : 0 .. 3; 
	gt2_4_0_1 : 0 .. 3; 
	gt2_3_3_3 : 0 .. 3; 
	gt2_4_0_2 : 0 .. 3; 
	gt2_4_0_3 : 0 .. 3; 
	gt2_3_3_2 : 0 .. 3; 
	notchic1_4_0 : 0 .. 3; 
	notchic1_4_2 : 0 .. 3; 
	notchic1_4_1 : 0 .. 3; 
	gt1_3_4_3 : 0 .. 3; 
	p21_3_3_0 : 0 .. 3; 
	gt1_3_4_2 : 0 .. 3; 
	p21_3_3_1 : 0 .. 3; 
	p21_3_3_2 : 0 .. 3; 
	p21_3_3_3 : 0 .. 3; 
	gt2_3_1_1 : 0 .. 3; 
	gt2_3_1_0 : 0 .. 3; 
	gt2_3_1_3 : 0 .. 3; 
	gt2_3_1_2 : 0 .. 3; 
	p21_1_0_3 : 0 .. 3; 
	gt2_1_0_1 : 0 .. 3; 
	gt2_2_1_3 : 0 .. 3; 
	gt2_1_0_2 : 0 .. 3; 
	p21_1_0_1 : 0 .. 3; 
	gt2_2_1_2 : 0 .. 3; 
	gt2_1_0_0 : 0 .. 3; 
	gt2_2_1_1 : 0 .. 3; 
	p21_1_0_2 : 0 .. 3; 
	gt1_3_4_0 : 0 .. 3; 
	gt2_2_1_0 : 0 .. 3; 
	p21_1_0_0 : 0 .. 3; 
	gt1_3_4_1 : 0 .. 3; 
	gt2_1_0_3 : 0 .. 3; 
	gt2_1_2_0 : 0 .. 3; 
	frizzled0_3_0 : 0 .. 3; 
	gt2_1_2_3 : 0 .. 3; 
	gt2_1_2_2 : 0 .. 3; 
	gt2_1_2_1 : 0 .. 3; 
	frizzled0_3_3 : 0 .. 3; 
	frizzled0_3_2 : 0 .. 3; 
	frizzled0_3_1 : 0 .. 3; 
	gt2_3_3_0 : 0 .. 3; 
	gt2_3_3_1 : 0 .. 3; 
	frizzled4_2_0 : 0 .. 3; 
	frizzled4_2_1 : 0 .. 3; 
	frizzled4_2_2 : 0 .. 3; 
	frizzled4_2_3 : 0 .. 3; 
	p21_2_4_0 : 0 .. 3; 
	p21_2_4_1 : 0 .. 3; 
	p21_2_4_2 : 0 .. 3; 
	p21_2_4_3 : 0 .. 3; 
	frizzled4_4_3 : 0 .. 3; 
	frizzled4_4_2 : 0 .. 3; 
	frizzled4_4_1 : 0 .. 3; 
	frizzled4_4_0 : 0 .. 3; 
	bcat1_3_0 : 0 .. 3; 
	wnt1_2_0 : 0 .. 3; 
	wnt1_2_1 : 0 .. 3; 
	bcat1_3_1 : 0 .. 3; 
	notchic2_4_0 : 0 .. 3; 
	wnt1_2_2 : 0 .. 3; 
	wnt1_2_3 : 0 .. 3; 
	notchic2_4_1 : 0 .. 3; 
	gt2_0_0_0 : 0 .. 3; 
	gt2_0_0_1 : 0 .. 3; 
	bcat1_3_2 : 0 .. 3; 
	gt2_0_0_2 : 0 .. 3; 
	bcat1_3_3 : 0 .. 3; 
	gt2_0_0_3 : 0 .. 3; 
	wnt3_3_3 : 0 .. 3; 
	wnt3_3_1 : 0 .. 3; 
	wnt3_3_2 : 0 .. 3; 
	notchic2_4_2 : 0 .. 3; 
	delta4_2_0 : 0 .. 3; 
	notchic2_4_3 : 0 .. 3; 
	wnt3_3_0 : 0 .. 3; 
	delta4_2_1 : 0 .. 3; 
	delta4_2_2 : 0 .. 3; 
	delta4_2_3 : 0 .. 3; 
	delta3_3_0 : 0 .. 3; 
	delta3_3_1 : 0 .. 3; 
	delta3_3_2 : 0 .. 3; 
	delta3_3_3 : 0 .. 3; 
	bcat1_1_3 : 0 .. 3; 
	gt1_1_1_3 : 0 .. 3; 
	bcat1_1_2 : 0 .. 3; 
	bcat1_1_1 : 0 .. 3; 
	bcat1_1_0 : 0 .. 3; 
	gt1_1_1_0 : 0 .. 3; 
	gt1_1_1_2 : 0 .. 3; 
	gt1_1_1_1 : 0 .. 3; 
	gt2_0_2_2 : 0 .. 3; 
	gt2_0_2_3 : 0 .. 3; 
	gt2_0_2_0 : 0 .. 3; 
	gt2_0_2_1 : 0 .. 3; 
	gt2_0_4_3 : 0 .. 3; 
	gt1_1_3_3 : 0 .. 3; 
	gt2_0_4_2 : 0 .. 3; 
	gt1_1_3_2 : 0 .. 3; 
	gt2_0_4_1 : 0 .. 3; 
	wntext3_0_3 : 0 .. 3; 
	gt2_0_4_0 : 0 .. 3; 
	gt1_1_3_1 : 0 .. 3; 
	gt1_1_3_0 : 0 .. 3; 
	wntext3_0_2 : 0 .. 3; 
	wntext3_0_1 : 0 .. 3; 
	wntext3_0_0 : 0 .. 3; 
	deltaext0_0_3 : 0 .. 3; 
	wntext2_3_1 : 0 .. 3; 
	wntext2_3_2 : 0 .. 3; 
	frizzled1_2_0 : 0 .. 3; 
	wntext2_3_3 : 0 .. 3; 
	p21_4_1_1 : 0 .. 3; 
	deltaext0_0_0 : 0 .. 3; 
	p21_4_1_2 : 0 .. 3; 
	p21_4_1_3 : 0 .. 3; 
	deltaext0_0_1 : 0 .. 3; 
	wntext2_3_0 : 0 .. 3; 
	deltaext0_0_2 : 0 .. 3; 
	wnt2_3_1 : 0 .. 3; 
	wnt2_3_0 : 0 .. 3; 
	p21_4_1_0 : 0 .. 3; 
	wnt2_3_3 : 0 .. 3; 
	frizzled1_2_3 : 0 .. 3; 
	delta2_4_0 : 0 .. 3; 
	wnt2_3_2 : 0 .. 3; 
	delta2_4_1 : 0 .. 3; 
	delta2_4_2 : 0 .. 3; 
	frizzled1_2_1 : 0 .. 3; 
	delta2_4_3 : 0 .. 3; 
	frizzled1_2_2 : 0 .. 3; 
	wnt2_1_0 : 0 .. 3; 
	wnt2_1_1 : 0 .. 3; 
	wnt2_1_2 : 0 .. 3; 
	wnt2_1_3 : 0 .. 3; 
	notchic3_3_3 : 0 .. 3; 
	notchic3_3_2 : 0 .. 3; 
	frizzled1_0_3 : 0 .. 3; 
	dsh3_3_0 : 0 .. 3; 
	notchic0_3_1 : 0 .. 3; 
	frizzled1_0_2 : 0 .. 3; 
	p21_4_3_3 : 0 .. 3; 
	notchic0_3_2 : 0 .. 3; 
	frizzled1_0_1 : 0 .. 3; 
	notchic0_3_3 : 0 .. 3; 
	frizzled1_0_0 : 0 .. 3; 
	notchic3_3_1 : 0 .. 3; 
	notchic3_3_0 : 0 .. 3; 
	p21_4_3_0 : 0 .. 3; 
	axin3_3_1 : 0 .. 3; 
	axin3_3_0 : 0 .. 3; 
	axin3_3_3 : 0 .. 3; 
	p21_4_3_2 : 0 .. 3; 
	axin3_3_2 : 0 .. 3; 
	notchic0_3_0 : 0 .. 3; 
	p21_4_3_1 : 0 .. 3; 
	p21_2_1_0 : 0 .. 3; 
	p21_2_1_2 : 0 .. 3; 
	p21_2_1_1 : 0 .. 3; 
	gt2_4_4_1 : 0 .. 3; 
	gt2_4_4_0 : 0 .. 3; 
	gt2_4_4_3 : 0 .. 3; 
	gt2_4_4_2 : 0 .. 3; 
	p21_2_1_3 : 0 .. 3; 
	notchic3_1_3 : 0 .. 3; 
	gt1_4_0_0 : 0 .. 3; 
	notchic3_1_2 : 0 .. 3; 
	notchic3_1_1 : 0 .. 3; 
	notchic3_1_0 : 0 .. 3; 
	wnt4_4_3 : 0 .. 3; 
	gt1_4_0_3 : 0 .. 3; 
	gt1_4_0_2 : 0 .. 3; 
	gt1_4_0_1 : 0 .. 3; 
	wntext4_4_2 : 0 .. 3; 
	wnt4_0_2 : 0 .. 3; 
	wntext4_4_3 : 0 .. 3; 
	wnt4_0_1 : 0 .. 3; 
	dsh3_1_3 : 0 .. 3; 
	wnt4_0_0 : 0 .. 3; 
	p21_0_3_3 : 0 .. 3; 
	wnt4_0_3 : 0 .. 3; 
	dsh1_0_3 : 0 .. 3; 
	p21_0_3_1 : 0 .. 3; 
	p21_0_3_2 : 0 .. 3; 
	dsh1_0_2 : 0 .. 3; 
	p21_0_3_0 : 0 .. 3; 
	dsh4_2_2 : 0 .. 3; 
	dsh0_3_0 : 0 .. 3; 
	dsh4_2_1 : 0 .. 3; 
	dsh0_3_1 : 0 .. 3; 
	dsh0_3_2 : 0 .. 3; 
	dsh1_0_1 : 0 .. 3; 
	wntext4_4_0 : 0 .. 3; 
	dsh0_3_3 : 0 .. 3; 
	dsh4_2_3 : 0 .. 3; 
	dsh1_0_0 : 0 .. 3; 
	wntext4_4_1 : 0 .. 3; 
	dsh4_4_3 : 0 .. 3; 
	dsh1_2_0 : 0 .. 3; 
	dsh1_2_1 : 0 .. 3; 
	dsh0_1_1 : 0 .. 3; 
	dsh1_2_2 : 0 .. 3; 
	dsh1_2_3 : 0 .. 3; 
	dsh0_1_0 : 0 .. 3; 
	dsh0_1_3 : 0 .. 3; 
	dsh4_4_0 : 0 .. 3; 
	dsh0_1_2 : 0 .. 3; 
	dsh4_4_1 : 0 .. 3; 
	dsh4_4_2 : 0 .. 3; 
	dsh3_3_3 : 0 .. 3; 
	dsh3_3_2 : 0 .. 3; 
	dsh3_3_1 : 0 .. 3; 
	bcat3_3_2 : 0 .. 3; 
	bcat3_3_3 : 0 .. 3; 
	bcat3_3_0 : 0 .. 3; 
	bcat3_3_1 : 0 .. 3; 
	bcat3_1_3 : 0 .. 3; 
	bcat3_1_2 : 0 .. 3; 
	bcat3_1_1 : 0 .. 3; 
	bcat3_1_0 : 0 .. 3; 
	dsh4_2_0 : 0 .. 3; 
	deltaext3_3_0 : 0 .. 3; 
	gt2_2_4_2 : 0 .. 3; 
	gt2_2_4_3 : 0 .. 3; 
	deltaext3_1_3 : 0 .. 3; 
	deltaext3_1_2 : 0 .. 3; 
	deltaext3_1_1 : 0 .. 3; 
	deltaext3_1_0 : 0 .. 3; 
	deltaext3_3_3 : 0 .. 3; 
	deltaext3_3_2 : 0 .. 3; 
	deltaext3_3_1 : 0 .. 3; 
	deltaext2_3_1 : 0 .. 3; 
	deltaext2_3_0 : 0 .. 3; 
	gt2_2_2_3 : 0 .. 3; 
	gt2_2_2_2 : 0 .. 3; 
	gt2_2_2_1 : 0 .. 3; 
	gt2_2_2_0 : 0 .. 3; 
	delta4_0_1 : 0 .. 3; 
	delta4_0_0 : 0 .. 3; 
	delta0_1_0 : 0 .. 3; 
	delta0_1_1 : 0 .. 3; 
	delta0_1_2 : 0 .. 3; 
	delta0_1_3 : 0 .. 3; 
	gt2_2_4_0 : 0 .. 3; 
	gt2_1_4_3 : 0 .. 3; 
	gt2_2_4_1 : 0 .. 3; 
	deltaext2_3_2 : 0 .. 3; 
	deltaext2_3_3 : 0 .. 3; 
	deltaext4_0_3 : 0 .. 3; 
	delta4_0_2 : 0 .. 3; 
	delta4_0_3 : 0 .. 3; 
	notchic1_0_3 : 0 .. 3; 
	deltaext4_0_2 : 0 .. 3; 
	deltaext4_0_1 : 0 .. 3; 
	wnt1_4_0 : 0 .. 3; 
	deltaext4_0_0 : 0 .. 3; 
	wnt1_4_1 : 0 .. 3; 
	wnt1_4_2 : 0 .. 3; 
	wnt1_4_3 : 0 .. 3; 
	notchic1_0_0 : 0 .. 3; 
	notchic1_0_1 : 0 .. 3; 
	notchic1_0_2 : 0 .. 3; 
	dsh2_0_0 : 0 .. 3; 
	axin1_3_1 : 0 .. 3; 
	axin1_3_0 : 0 .. 3; 
	axin0_1_0 : 0 .. 3; 
	axin1_3_3 : 0 .. 3; 
	dsh2_0_2 : 0 .. 3; 
	axin1_3_2 : 0 .. 3; 
	dsh2_0_1 : 0 .. 3; 
	delta2_2_3 : 0 .. 3; 
	dsh2_0_3 : 0 .. 3; 
	delta2_2_2 : 0 .. 3; 
	axin0_1_1 : 0 .. 3; 
	axin0_1_2 : 0 .. 3; 
	axin0_1_3 : 0 .. 3; 
	axin0_3_3 : 0 .. 3; 
	deltaext1_1_3 : 0 .. 3; 
	dsh3_1_0 : 0 .. 3; 
	dsh3_1_1 : 0 .. 3; 
	deltaext1_1_2 : 0 .. 3; 
	deltaext1_1_1 : 0 .. 3; 
	dsh3_1_2 : 0 .. 3; 
	deltaext1_1_0 : 0 .. 3; 
	axin0_3_0 : 0 .. 3; 
	axin0_3_2 : 0 .. 3; 
	axin0_3_1 : 0 .. 3; 
	bcat2_4_3 : 0 .. 3; 
	bcat2_4_2 : 0 .. 3; 
	bcat2_4_1 : 0 .. 3; 
	bcat2_4_0 : 0 .. 3; 
	notchic0_1_3 : 0 .. 3; 
	notchic0_1_0 : 0 .. 3; 
	notchic0_1_1 : 0 .. 3; 
	notchic0_1_2 : 0 .. 3; 
	gt2_4_2_2 : 0 .. 3; 
	gt2_4_2_3 : 0 .. 3; 
	delta2_2_0 : 0 .. 3; 
	delta2_2_1 : 0 .. 3; 
	axin4_0_2 : 0 .. 3; 
	axin4_0_3 : 0 .. 3; 
	notchic4_1_3 : 0 .. 3; 
	axin4_0_0 : 0 .. 3; 
	axin4_0_1 : 0 .. 3; 
	notchic4_1_2 : 0 .. 3; 
	notchic4_1_1 : 0 .. 3; 
	notchic4_1_0 : 0 .. 3; 
	bcat0_4_1 : 0 .. 3; 
	bcat0_4_0 : 0 .. 3; 
	bcat0_4_3 : 0 .. 3; 
	bcat0_4_2 : 0 .. 3; 
	notchic4_3_0 : 0 .. 3; 
	notchic4_3_3 : 0 .. 3; 
	notchic4_3_1 : 0 .. 3; 
	notchic4_3_2 : 0 .. 3; 
	bcat0_0_1 : 0 .. 3; 
	bcat0_0_0 : 0 .. 3; 
	bcat0_0_2 : 0 .. 3; 
	bcat0_0_3 : 0 .. 3; 
	axin4_2_2 : 0 .. 3; 
	axin4_2_3 : 0 .. 3; 
	wntext1_0_0 : 0 .. 3; 
	wntext1_2_3 : 0 .. 3; 
	axin4_2_0 : 0 .. 3; 
	axin4_2_1 : 0 .. 3; 
	wntext1_2_1 : 0 .. 3; 
	wntext1_2_2 : 0 .. 3; 
	wntext1_2_0 : 0 .. 3; 
	bcat2_0_1 : 0 .. 3; 
	axin4_4_1 : 0 .. 3; 
	axin4_4_0 : 0 .. 3; 
	bcat2_0_0 : 0 .. 3; 
	bcat2_0_3 : 0 .. 3; 
	bcat2_0_2 : 0 .. 3; 
	wntext1_0_3 : 0 .. 3; 
	wntext1_0_2 : 0 .. 3; 
	wntext1_0_1 : 0 .. 3; 
	frizzled3_3_2 : 0 .. 3; 
	p21_1_1_1 : 0 .. 3; 
	axin1_2_1 : 0 .. 3; 
	frizzled3_3_3 : 0 .. 3; 
	p21_1_1_0 : 0 .. 3; 
	axin1_2_2 : 0 .. 3; 
	p21_1_1_3 : 0 .. 3; 
	deltaext0_1_2 : 0 .. 3; 
	deltaext0_1_3 : 0 .. 3; 
	axin1_2_0 : 0 .. 3; 
	p21_1_1_2 : 0 .. 3; 
	deltaext0_1_0 : 0 .. 3; 
	dsh2_1_2 : 0 .. 3; 
	dsh2_1_3 : 0 .. 3; 
	deltaext0_1_1 : 0 .. 3; 
	axin1_2_3 : 0 .. 3; 
	frizzled3_3_0 : 0 .. 3; 
	dsh2_1_0 : 0 .. 3; 
	dsh2_1_1 : 0 .. 3; 
	frizzled3_3_1 : 0 .. 3; 
	bcat4_0_3 : 0 .. 3; 
	bcat4_0_2 : 0 .. 3; 
	bcat4_0_1 : 0 .. 3; 
	bcat4_0_0 : 0 .. 3; 
	axin4_4_2 : 0 .. 3; 
	axin4_4_3 : 0 .. 3; 
	wntext4_2_2 : 0 .. 3; 
	wntext4_2_3 : 0 .. 3; 
	delta3_2_0 : 0 .. 3; 
	wntext4_2_0 : 0 .. 3; 
	wntext4_2_1 : 0 .. 3; 
	gt2_1_4_0 : 0 .. 3; 
	gt2_1_4_2 : 0 .. 3; 
	gt2_1_4_1 : 0 .. 3; 
	deltaext2_2_3 : 0 .. 3; 
	delta3_2_3 : 0 .. 3; 
	delta3_2_1 : 0 .. 3; 
	wntext0_3_3 : 0 .. 3; 
	delta3_2_2 : 0 .. 3; 
	wntext0_3_2 : 0 .. 3; 
	wntext0_3_1 : 0 .. 3; 
	wntext0_3_0 : 0 .. 3; 
	p21_3_0_1 : 0 .. 3; 
	p21_3_0_2 : 0 .. 3; 
	bcat4_4_0 : 0 .. 3; 
	p21_3_0_0 : 0 .. 3; 
	bcat4_4_1 : 0 .. 3; 
	deltaext2_2_0 : 0 .. 3; 
	deltaext2_2_1 : 0 .. 3; 
	deltaext2_2_2 : 0 .. 3; 
	bcat4_4_2 : 0 .. 3; 
	bcat4_4_3 : 0 .. 3; 
	p21_3_0_3 : 0 .. 3; 
	delta2_0_2 : 0 .. 3; 
	delta2_0_3 : 0 .. 3; 
	gt1_4_2_3 : 0 .. 3; 
	delta2_0_0 : 0 .. 3; 
	delta2_0_1 : 0 .. 3; 
	deltaext3_0_0 : 0 .. 3; 
	deltaext3_0_1 : 0 .. 3; 
	deltaext3_0_2 : 0 .. 3; 
	deltaext3_0_3 : 0 .. 3; 
	wntext2_0_2 : 0 .. 3; 
	wntext2_0_3 : 0 .. 3; 
	wntext2_0_0 : 0 .. 3; 
	wntext2_0_1 : 0 .. 3; 
	gt1_4_4_3 : 0 .. 3; 
	gt1_4_4_2 : 0 .. 3; 
	gt1_4_4_1 : 0 .. 3; 
	delta0_3_3 : 0 .. 3; 
	delta1_1_2 : 0 .. 3; 
	delta1_1_3 : 0 .. 3; 
	delta1_1_0 : 0 .. 3; 
	delta1_1_1 : 0 .. 3; 
	delta0_3_2 : 0 .. 3; 
	delta0_3_1 : 0 .. 3; 
	delta0_3_0 : 0 .. 3; 
	deltaext1_3_0 : 0 .. 3; 
	axin2_4_1 : 0 .. 3; 
	axin2_4_0 : 0 .. 3; 
	axin2_4_3 : 0 .. 3; 
	deltaext1_3_2 : 0 .. 3; 
	axin2_4_2 : 0 .. 3; 
	deltaext1_3_1 : 0 .. 3; 
	axin2_2_2 : 0 .. 3; 
	axin2_2_3 : 0 .. 3; 
	axin3_1_1 : 0 .. 3; 
	axin3_1_0 : 0 .. 3; 
	deltaext1_3_3 : 0 .. 3; 
	axin3_1_3 : 0 .. 3; 
	axin3_1_2 : 0 .. 3; 
	axin2_2_0 : 0 .. 3; 
	axin2_2_1 : 0 .. 3; 
	gt1_0_4_0 : 0 .. 3; 
	deltaext4_2_0 : 0 .. 3; 
	gt1_0_4_3 : 0 .. 3; 
	gt1_0_4_2 : 0 .. 3; 
	gt1_0_4_1 : 0 .. 3; 
	dsh1_3_2 : 0 .. 3; 
	dsh1_3_1 : 0 .. 3; 
	dsh1_3_0 : 0 .. 3; 
	dsh0_0_0 : 0 .. 3; 
	gt1_0_2_1 : 0 .. 3; 
	gt1_0_2_2 : 0 .. 3; 
	dsh0_0_2 : 0 .. 3; 
	dsh0_0_1 : 0 .. 3; 
	gt1_0_2_0 : 0 .. 3; 
	deltaext4_2_1 : 0 .. 3; 
	dsh0_0_3 : 0 .. 3; 
	deltaext4_2_2 : 0 .. 3; 
	deltaext4_2_3 : 0 .. 3; 
	gt1_0_2_3 : 0 .. 3; 
	gt1_2_0_2 : 0 .. 3; 
	gt1_2_0_1 : 0 .. 3; 
	wnt3_1_3 : 0 .. 3; 
	gt1_2_0_0 : 0 .. 3; 
	gt1_4_4_0 : 0 .. 3; 
	wnt3_1_1 : 0 .. 3; 
	wnt3_1_2 : 0 .. 3; 
	gt1_2_0_3 : 0 .. 3; 
	wnt3_1_0 : 0 .. 3; 
	bcat2_2_2 : 0 .. 3; 
	bcat2_2_3 : 0 .. 3; 
	bcat2_2_0 : 0 .. 3; 
	bcat2_2_1 : 0 .. 3; 
	gt1_4_2_0 : 0 .. 3; 
	gt1_4_2_2 : 0 .. 3; 
	gt1_4_2_1 : 0 .. 3; 
	axin1_0_3 : 0 .. 3; 
	wnt0_2_3 : 0 .. 3; 
	axin1_0_1 : 0 .. 3; 
	wnt0_2_2 : 0 .. 3; 
	wnt0_2_1 : 0 .. 3; 
	axin1_0_2 : 0 .. 3; 
	dsh2_3_0 : 0 .. 3; 
	frizzled3_1_0 : 0 .. 3; 
	frizzled3_1_1 : 0 .. 3; 
	dsh2_3_1 : 0 .. 3; 
	frizzled3_1_2 : 0 .. 3; 
	frizzled3_1_3 : 0 .. 3; 
	wnt0_2_0 : 0 .. 3; 
	axin1_0_0 : 0 .. 3; 
	wnt0_0_1 : 0 .. 3; 
	wnt0_0_2 : 0 .. 3; 
	wnt0_0_0 : 0 .. 3; 
	bcat0_2_2 : 0 .. 3; 
	bcat0_2_3 : 0 .. 3; 
	wnt0_0_3 : 0 .. 3; 
	bcat0_2_0 : 0 .. 3; 
	bcat0_2_1 : 0 .. 3; 
	p21_1_3_0 : 0 .. 3; 
	deltaext0_3_1 : 0 .. 3; 
	wnt4_4_0 : 0 .. 3; 
	deltaext0_3_0 : 0 .. 3; 
	p21_1_3_1 : 0 .. 3; 
	deltaext0_3_3 : 0 .. 3; 
	wnt4_4_1 : 0 .. 3; 
	wnt4_4_2 : 0 .. 3; 
	deltaext0_3_2 : 0 .. 3; 
	dsh4_0_1 : 0 .. 3; 
	frizzled0_0_0 : 0 .. 3; 
	frizzled0_0_1 : 0 .. 3; 
	dsh4_0_2 : 0 .. 3; 
	p21_1_3_2 : 0 .. 3; 
	frizzled0_0_2 : 0 .. 3; 
	p21_1_3_3 : 0 .. 3; 
	frizzled0_0_3 : 0 .. 3; 
	dsh4_0_0 : 0 .. 3; 
	deltaext2_0_1 : 0 .. 3; 
	deltaext2_0_2 : 0 .. 3; 
	deltaext2_0_3 : 0 .. 3; 
	notchic1_1_2 : 0 .. 3; 
	notchic1_1_3 : 0 .. 3; 
	notchic1_1_0 : 0 .. 3; 
	dsh4_0_3 : 0 .. 3; 
	notchic1_1_1 : 0 .. 3; 
	deltaext2_0_0 : 0 .. 3; 
	wntext4_0_1 : 0 .. 3; 
	wntext4_0_0 : 0 .. 3; 
	wntext4_0_3 : 0 .. 3; 
	delta3_0_1 : 0 .. 3; 
	delta3_0_2 : 0 .. 3; 
	wntext4_0_2 : 0 .. 3; 
	delta3_0_0 : 0 .. 3; 
	delta3_0_3 : 0 .. 3; 
	delta4_3_3 : 0 .. 3; 
	delta4_3_2 : 0 .. 3; 
	wnt1_1_0 : 0 .. 3; 
	delta4_3_1 : 0 .. 3; 
	delta4_3_0 : 0 .. 3; 
	bcat4_2_3 : 0 .. 3; 
	wnt1_1_3 : 0 .. 3; 
	bcat4_2_2 : 0 .. 3; 
	bcat4_2_1 : 0 .. 3; 
	wnt1_1_2 : 0 .. 3; 
	wnt1_1_1 : 0 .. 3; 
	bcat4_2_0 : 0 .. 3; 
	wntext0_0_1 : 0 .. 3; 
	wntext0_0_0 : 0 .. 3; 
	p21_2_3_3 : 0 .. 3; 
	p21_2_3_2 : 0 .. 3; 
	wntext0_0_2 : 0 .. 3; 
	wntext0_0_3 : 0 .. 3; 
	p21_2_3_1 : 0 .. 3; 
	delta1_3_3 : 0 .. 3; 
	p21_2_3_0 : 0 .. 3; 
	delta1_3_2 : 0 .. 3; 
	delta1_3_0 : 0 .. 3; 
	delta1_3_1 : 0 .. 3; 
	frizzled1_3_1 : 0 .. 3; 
	frizzled1_3_0 : 0 .. 3; 
	frizzled1_3_3 : 0 .. 3; 
	frizzled1_3_2 : 0 .. 3; 
	frizzled2_0_2 : 0 .. 3; 
	frizzled2_0_3 : 0 .. 3; 
	frizzled2_0_0 : 0 .. 3; 
	wntext3_1_2 : 0 .. 3; 
	wntext3_1_3 : 0 .. 3; 
	frizzled2_0_1 : 0 .. 3; 
	wntext3_1_0 : 0 .. 3; 
	wntext3_1_1 : 0 .. 3; 
	wntext3_3_1 : 0 .. 3; 
	wntext3_3_0 : 0 .. 3; 
	wntext3_3_3 : 0 .. 3; 
	deltaext4_4_3 : 0 .. 3; 
	wntext3_3_2 : 0 .. 3; 
	deltaext4_4_2 : 0 .. 3; 
	frizzled4_0_1 : 0 .. 3; 
	frizzled4_0_0 : 0 .. 3; 
	deltaext4_4_1 : 0 .. 3; 
	frizzled4_0_3 : 0 .. 3; 
	deltaext4_4_0 : 0 .. 3; 
	frizzled4_0_2 : 0 .. 3; 
	frizzled2_2_0 : 0 .. 3; 
	frizzled2_2_1 : 0 .. 3; 
	frizzled2_2_2 : 0 .. 3; 
	frizzled2_2_3 : 0 .. 3; 
	frizzled2_4_3 : 0 .. 3; 
	frizzled2_4_2 : 0 .. 3; 
	dsh2_3_2 : 0 .. 3; 
	dsh2_3_3 : 0 .. 3; 
	frizzled2_4_1 : 0 .. 3; 
	frizzled2_4_0 : 0 .. 3; 
	notchic2_2_2 : 0 .. 3; 
	notchic2_2_3 : 0 .. 3; 
	notchic2_2_0 : 0 .. 3; 
	notchic2_2_1 : 0 .. 3; 

	init(gt2_4_3_0) := {0,1,2,3};
	init(bcat1_2_3) := {0,1,2,3};
	init(bcat1_2_2) := {0,1,2,3};
	init(bcat1_2_1) := {0,1,2,3};
	init(bcat1_2_0) := {0,1,2,3};
	init(gt1_2_2_3) := {0,1,2,3};
	init(gt1_3_1_0) := {0,1,2,3};
	init(gt1_2_2_2) := {0,1,2,3};
	init(gt1_2_2_1) := {0,1,2,3};
	init(wnt3_4_3) := {0,1,2,3};
	init(gt1_3_1_3) := {0,1,2,3};
	init(gt1_2_2_0) := {0,1,2,3};
	init(wnt3_4_2) := {0,1,2,3};
	init(gt1_3_1_1) := {0,1,2,3};
	init(wnt3_4_1) := {0,1,2,3};
	init(wnt3_4_0) := {0,1,2,3};
	init(gt1_3_1_2) := {0,1,2,3};
	init(gt1_2_4_1) := {0,1,2,3};
	init(gt1_2_4_2) := {0,1,2,3};
	init(gt1_2_4_0) := {0,1,2,3};
	init(p21_3_4_0) := {0,1,2,3};
	init(p21_3_4_2) := {0,1,2,3};
	init(p21_3_4_1) := {0,1,2,3};
	init(p21_3_4_3) := {0,1,2,3};
	init(gt2_4_1_0) := {0,1,2,3};
	init(gt2_4_1_1) := {0,1,2,3};
	init(gt2_4_1_2) := {0,1,2,3};
	init(p21_3_2_0) := {0,1,2,3};
	init(p21_3_2_1) := {0,1,2,3};
	init(p21_3_2_2) := {0,1,2,3};
	init(p21_3_2_3) := {0,1,2,3};
	init(gt2_2_0_1) := {0,1,2,3};
	init(gt1_3_3_1) := {0,1,2,3};
	init(gt1_3_3_2) := {0,1,2,3};
	init(gt2_2_0_0) := {0,1,2,3};
	init(gt2_1_1_2) := {0,1,2,3};
	init(gt2_1_1_3) := {0,1,2,3};
	init(gt1_3_3_0) := {0,1,2,3};
	init(frizzled1_1_1) := {0,1,2,3};
	init(gt2_1_1_0) := {0,1,2,3};
	init(wntext2_4_1) := {0,1,2,3};
	init(gt2_1_1_1) := {0,1,2,3};
	init(wntext2_4_0) := {0,1,2,3};
	init(frizzled1_1_0) := {0,1,2,3};
	init(wntext2_4_3) := {0,1,2,3};
	init(gt2_2_0_3) := {0,1,2,3};
	init(notchic3_4_0) := {0,1,2,3};
	init(wntext2_4_2) := {0,1,2,3};
	init(gt2_2_0_2) := {0,1,2,3};
	init(notchic3_4_2) := {0,1,2,3};
	init(gt2_3_0_2) := {0,1,2,3};
	init(gt2_3_0_1) := {0,1,2,3};
	init(notchic3_4_1) := {0,1,2,3};
	init(frizzled1_1_3) := {0,1,2,3};
	init(notchic3_4_3) := {0,1,2,3};
	init(gt2_3_0_3) := {0,1,2,3};
	init(frizzled1_1_2) := {0,1,2,3};
	init(gt2_3_0_0) := {0,1,2,3};
	init(wnt2_2_3) := {0,1,2,3};
	init(gt2_3_2_0) := {0,1,2,3};
	init(wnt2_0_0) := {0,1,2,3};
	init(gt2_3_2_1) := {0,1,2,3};
	init(gt2_4_1_3) := {0,1,2,3};
	init(gt2_3_2_2) := {0,1,2,3};
	init(axin0_0_1) := {0,1,2,3};
	init(wnt2_2_0) := {0,1,2,3};
	init(axin0_0_0) := {0,1,2,3};
	init(wnt2_2_2) := {0,1,2,3};
	init(wnt2_2_1) := {0,1,2,3};
	init(gt2_1_3_3) := {0,1,2,3};
	init(gt2_1_3_2) := {0,1,2,3};
	init(axin0_0_3) := {0,1,2,3};
	init(gt2_1_3_1) := {0,1,2,3};
	init(gt2_1_3_0) := {0,1,2,3};
	init(axin0_0_2) := {0,1,2,3};
	init(wnt2_0_2) := {0,1,2,3};
	init(wnt2_0_1) := {0,1,2,3};
	init(wnt2_0_3) := {0,1,2,3};
	init(p21_2_2_0) := {0,1,2,3};
	init(p21_2_2_1) := {0,1,2,3};
	init(p21_2_2_2) := {0,1,2,3};
	init(gt1_2_4_3) := {0,1,2,3};
	init(p21_2_2_3) := {0,1,2,3};
	init(notchic3_0_0) := {0,1,2,3};
	init(notchic3_0_3) := {0,1,2,3};
	init(notchic3_0_1) := {0,1,2,3};
	init(notchic3_0_2) := {0,1,2,3};
	init(gt2_4_3_2) := {0,1,2,3};
	init(gt2_4_3_1) := {0,1,2,3};
	init(gt2_4_3_3) := {0,1,2,3};
	init(p21_2_0_1) := {0,1,2,3};
	init(p21_2_0_0) := {0,1,2,3};
	init(p21_2_0_3) := {0,1,2,3};
	init(p21_2_0_2) := {0,1,2,3};
	init(wnt4_3_3) := {0,1,2,3};
	init(delta4_1_1) := {0,1,2,3};
	init(wnt4_3_2) := {0,1,2,3};
	init(delta4_1_2) := {0,1,2,3};
	init(delta4_1_3) := {0,1,2,3};
	init(wnt4_3_1) := {0,1,2,3};
	init(wnt4_3_0) := {0,1,2,3};
	init(gt1_1_0_0) := {0,1,2,3};
	init(p21_0_0_0) := {0,1,2,3};
	init(gt1_1_0_1) := {0,1,2,3};
	init(p21_0_0_1) := {0,1,2,3};
	init(gt2_0_1_0) := {0,1,2,3};
	init(gt2_0_1_1) := {0,1,2,3};
	init(gt1_1_0_2) := {0,1,2,3};
	init(gt1_1_0_3) := {0,1,2,3};
	init(gt2_0_1_2) := {0,1,2,3};
	init(gt2_0_1_3) := {0,1,2,3};
	init(p21_0_0_2) := {0,1,2,3};
	init(p21_0_0_3) := {0,1,2,3};
	init(gt1_1_2_1) := {0,1,2,3};
	init(gt1_1_2_0) := {0,1,2,3};
	init(gt1_1_2_3) := {0,1,2,3};
	init(p21_0_2_3) := {0,1,2,3};
	init(p21_0_2_2) := {0,1,2,3};
	init(gt1_1_2_2) := {0,1,2,3};
	init(p21_0_2_1) := {0,1,2,3};
	init(p21_0_2_0) := {0,1,2,3};
	init(delta3_4_3) := {0,1,2,3};
	init(notchic2_0_1) := {0,1,2,3};
	init(wnt4_1_2) := {0,1,2,3};
	init(wnt4_1_3) := {0,1,2,3};
	init(notchic2_0_0) := {0,1,2,3};
	init(notchic2_0_3) := {0,1,2,3};
	init(wnt4_1_0) := {0,1,2,3};
	init(delta3_4_0) := {0,1,2,3};
	init(wnt4_1_1) := {0,1,2,3};
	init(notchic2_0_2) := {0,1,2,3};
	init(delta3_4_1) := {0,1,2,3};
	init(delta3_4_2) := {0,1,2,3};
	init(gt2_0_3_0) := {0,1,2,3};
	init(gt2_3_2_3) := {0,1,2,3};
	init(gt2_0_3_3) := {0,1,2,3};
	init(gt2_0_3_1) := {0,1,2,3};
	init(gt2_0_3_2) := {0,1,2,3};
	init(axin3_4_3) := {0,1,2,3};
	init(p21_0_4_3) := {0,1,2,3};
	init(p21_0_4_2) := {0,1,2,3};
	init(notchic1_3_1) := {0,1,2,3};
	init(notchic1_3_0) := {0,1,2,3};
	init(notchic1_3_3) := {0,1,2,3};
	init(notchic1_3_2) := {0,1,2,3};
	init(delta0_0_2) := {0,1,2,3};
	init(delta0_0_3) := {0,1,2,3};
	init(gt1_1_4_3) := {0,1,2,3};
	init(delta4_1_0) := {0,1,2,3};
	init(gt1_1_4_2) := {0,1,2,3};
	init(delta0_0_0) := {0,1,2,3};
	init(p21_0_4_1) := {0,1,2,3};
	init(gt1_1_4_1) := {0,1,2,3};
	init(delta0_0_1) := {0,1,2,3};
	init(gt1_1_4_0) := {0,1,2,3};
	init(p21_0_4_0) := {0,1,2,3};
	init(delta2_3_1) := {0,1,2,3};
	init(delta2_3_2) := {0,1,2,3};
	init(delta2_3_3) := {0,1,2,3};
	init(frizzled0_2_3) := {0,1,2,3};
	init(p21_4_0_0) := {0,1,2,3};
	init(p21_4_0_1) := {0,1,2,3};
	init(frizzled0_2_2) := {0,1,2,3};
	init(deltaext3_4_2) := {0,1,2,3};
	init(frizzled0_2_1) := {0,1,2,3};
	init(p21_4_0_2) := {0,1,2,3};
	init(deltaext3_4_3) := {0,1,2,3};
	init(p21_4_0_3) := {0,1,2,3};
	init(frizzled0_2_0) := {0,1,2,3};
	init(deltaext3_4_0) := {0,1,2,3};
	init(deltaext3_4_1) := {0,1,2,3};
	init(axin3_4_0) := {0,1,2,3};
	init(p21_4_2_1) := {0,1,2,3};
	init(p21_4_2_0) := {0,1,2,3};
	init(p21_4_2_3) := {0,1,2,3};
	init(axin3_4_2) := {0,1,2,3};
	init(deltaext1_0_0) := {0,1,2,3};
	init(p21_4_2_2) := {0,1,2,3};
	init(deltaext1_0_1) := {0,1,2,3};
	init(axin3_4_1) := {0,1,2,3};
	init(notchic0_4_0) := {0,1,2,3};
	init(deltaext1_0_2) := {0,1,2,3};
	init(deltaext1_0_3) := {0,1,2,3};
	init(notchic0_4_1) := {0,1,2,3};
	init(notchic0_4_2) := {0,1,2,3};
	init(notchic0_4_3) := {0,1,2,3};
	init(frizzled0_4_2) := {0,1,2,3};
	init(frizzled0_4_3) := {0,1,2,3};
	init(frizzled0_4_0) := {0,1,2,3};
	init(frizzled0_4_1) := {0,1,2,3};
	init(notchic0_0_3) := {0,1,2,3};
	init(notchic0_0_2) := {0,1,2,3};
	init(notchic0_0_1) := {0,1,2,3};
	init(notchic0_0_0) := {0,1,2,3};
	init(wnt0_4_3) := {0,1,2,3};
	init(wnt0_4_0) := {0,1,2,3};
	init(wnt0_4_1) := {0,1,2,3};
	init(wnt0_4_2) := {0,1,2,3};
	init(frizzled4_3_3) := {0,1,2,3};
	init(p21_4_4_1) := {0,1,2,3};
	init(p21_4_4_0) := {0,1,2,3};
	init(frizzled4_3_1) := {0,1,2,3};
	init(frizzled4_3_2) := {0,1,2,3};
	init(delta2_3_0) := {0,1,2,3};
	init(frizzled4_3_0) := {0,1,2,3};
	init(p21_4_4_3) := {0,1,2,3};
	init(p21_4_4_2) := {0,1,2,3};
	init(deltaext2_4_3) := {0,1,2,3};
	init(deltaext2_4_1) := {0,1,2,3};
	init(deltaext2_4_2) := {0,1,2,3};
	init(bcat1_0_1) := {0,1,2,3};
	init(bcat1_0_2) := {0,1,2,3};
	init(bcat1_0_3) := {0,1,2,3};
	init(deltaext2_4_0) := {0,1,2,3};
	init(dsh3_4_1) := {0,1,2,3};
	init(dsh3_4_0) := {0,1,2,3};
	init(dsh3_4_3) := {0,1,2,3};
	init(dsh3_4_2) := {0,1,2,3};
	init(dsh4_3_1) := {0,1,2,3};
	init(dsh0_4_0) := {0,1,2,3};
	init(dsh4_3_0) := {0,1,2,3};
	init(dsh4_3_3) := {0,1,2,3};
	init(deltaext4_1_3) := {0,1,2,3};
	init(gt1_0_0_0) := {0,1,2,3};
	init(dsh0_4_1) := {0,1,2,3};
	init(dsh0_4_2) := {0,1,2,3};
	init(dsh4_3_2) := {0,1,2,3};
	init(deltaext4_1_2) := {0,1,2,3};
	init(gt1_0_0_2) := {0,1,2,3};
	init(gt1_0_0_1) := {0,1,2,3};
	init(gt1_0_0_3) := {0,1,2,3};
	init(bcat1_0_0) := {0,1,2,3};
	init(dsh3_2_3) := {0,1,2,3};
	init(dsh1_4_0) := {0,1,2,3};
	init(dsh1_4_1) := {0,1,2,3};
	init(dsh3_2_2) := {0,1,2,3};
	init(dsh0_2_2) := {0,1,2,3};
	init(bcat1_4_3) := {0,1,2,3};
	init(wnt1_3_3) := {0,1,2,3};
	init(dsh0_2_1) := {0,1,2,3};
	init(bcat1_4_2) := {0,1,2,3};
	init(dsh0_2_3) := {0,1,2,3};
	init(dsh1_1_0) := {0,1,2,3};
	init(bcat1_4_1) := {0,1,2,3};
	init(dsh1_1_1) := {0,1,2,3};
	init(bcat1_4_0) := {0,1,2,3};
	init(wnt1_3_0) := {0,1,2,3};
	init(deltaext4_1_0) := {0,1,2,3};
	init(deltaext4_1_1) := {0,1,2,3};
	init(dsh1_1_2) := {0,1,2,3};
	init(dsh1_1_3) := {0,1,2,3};
	init(wnt1_3_2) := {0,1,2,3};
	init(dsh0_2_0) := {0,1,2,3};
	init(wnt1_3_1) := {0,1,2,3};
	init(axin2_0_3) := {0,1,2,3};
	init(bcat2_3_3) := {0,1,2,3};
	init(axin2_0_2) := {0,1,2,3};
	init(notchic3_2_3) := {0,1,2,3};
	init(bcat2_3_2) := {0,1,2,3};
	init(axin2_0_1) := {0,1,2,3};
	init(axin2_0_0) := {0,1,2,3};
	init(bcat2_3_1) := {0,1,2,3};
	init(bcat2_3_0) := {0,1,2,3};
	init(notchic3_2_1) := {0,1,2,3};
	init(notchic3_2_2) := {0,1,2,3};
	init(dsh1_4_3) := {0,1,2,3};
	init(dsh3_2_0) := {0,1,2,3};
	init(dsh1_4_2) := {0,1,2,3};
	init(notchic3_2_0) := {0,1,2,3};
	init(dsh3_2_1) := {0,1,2,3};
	init(axin0_2_0) := {0,1,2,3};
	init(axin0_2_1) := {0,1,2,3};
	init(axin0_2_2) := {0,1,2,3};
	init(axin0_2_3) := {0,1,2,3};
	init(dsh3_0_1) := {0,1,2,3};
	init(dsh3_0_0) := {0,1,2,3};
	init(dsh3_0_3) := {0,1,2,3};
	init(dsh3_0_2) := {0,1,2,3};
	init(wnt2_4_3) := {0,1,2,3};
	init(wnt2_4_1) := {0,1,2,3};
	init(dsh0_4_3) := {0,1,2,3};
	init(wnt2_4_2) := {0,1,2,3};
	init(wnt2_4_0) := {0,1,2,3};
	init(wntext2_2_1) := {0,1,2,3};
	init(wntext2_2_0) := {0,1,2,3};
	init(wntext2_2_3) := {0,1,2,3};
	init(wntext2_2_2) := {0,1,2,3};
	init(delta0_2_0) := {0,1,2,3};
	init(delta0_2_1) := {0,1,2,3};
	init(delta0_2_2) := {0,1,2,3};
	init(delta0_2_3) := {0,1,2,3};
	init(gt2_2_3_2) := {0,1,2,3};
	init(frizzled3_4_3) := {0,1,2,3};
	init(gt2_2_3_1) := {0,1,2,3};
	init(frizzled3_4_2) := {0,1,2,3};
	init(gt2_2_3_0) := {0,1,2,3};
	init(frizzled3_4_1) := {0,1,2,3};
	init(frizzled3_4_0) := {0,1,2,3};
	init(wntext4_3_3) := {0,1,2,3};
	init(wntext4_3_0) := {0,1,2,3};
	init(wntext4_3_2) := {0,1,2,3};
	init(wntext4_3_1) := {0,1,2,3};
	init(delta1_0_0) := {0,1,2,3};
	init(delta1_0_2) := {0,1,2,3};
	init(delta1_0_1) := {0,1,2,3};
	init(delta1_0_3) := {0,1,2,3};
	init(axin1_4_2) := {0,1,2,3};
	init(bcat3_2_0) := {0,1,2,3};
	init(axin1_4_1) := {0,1,2,3};
	init(axin1_4_3) := {0,1,2,3};
	init(delta2_1_3) := {0,1,2,3};
	init(bcat3_2_3) := {0,1,2,3};
	init(axin1_4_0) := {0,1,2,3};
	init(bcat3_2_2) := {0,1,2,3};
	init(bcat3_2_1) := {0,1,2,3};
	init(wntext1_4_0) := {0,1,2,3};
	init(deltaext1_2_3) := {0,1,2,3};
	init(wntext1_4_2) := {0,1,2,3};
	init(wntext1_4_1) := {0,1,2,3};
	init(deltaext1_2_2) := {0,1,2,3};
	init(deltaext1_2_1) := {0,1,2,3};
	init(wntext1_4_3) := {0,1,2,3};
	init(deltaext1_2_0) := {0,1,2,3};
	init(notchic0_2_0) := {0,1,2,3};
	init(notchic0_2_1) := {0,1,2,3};
	init(deltaext3_2_1) := {0,1,2,3};
	init(notchic0_2_2) := {0,1,2,3};
	init(notchic0_2_3) := {0,1,2,3};
	init(deltaext3_2_0) := {0,1,2,3};
	init(gt2_2_3_3) := {0,1,2,3};
	init(deltaext3_2_2) := {0,1,2,3};
	init(deltaext3_2_3) := {0,1,2,3};
	init(delta2_1_0) := {0,1,2,3};
	init(delta2_1_1) := {0,1,2,3};
	init(delta2_1_2) := {0,1,2,3};
	init(gt1_4_3_2) := {0,1,2,3};
	init(gt1_4_3_3) := {0,1,2,3};
	init(wntext1_3_0) := {0,1,2,3};
	init(frizzled1_4_1) := {0,1,2,3};
	init(frizzled1_4_2) := {0,1,2,3};
	init(axin4_1_0) := {0,1,2,3};
	init(wntext1_3_1) := {0,1,2,3};
	init(frizzled1_4_0) := {0,1,2,3};
	init(axin4_1_3) := {0,1,2,3};
	init(frizzled1_4_3) := {0,1,2,3};
	init(wntext1_3_2) := {0,1,2,3};
	init(axin4_1_1) := {0,1,2,3};
	init(wntext1_3_3) := {0,1,2,3};
	init(axin4_1_2) := {0,1,2,3};
	init(axin0_4_0) := {0,1,2,3};
	init(axin0_4_1) := {0,1,2,3};
	init(axin0_4_2) := {0,1,2,3};
	init(axin0_4_3) := {0,1,2,3};
	init(deltaext0_2_0) := {0,1,2,3};
	init(deltaext0_2_3) := {0,1,2,3};
	init(deltaext0_2_1) := {0,1,2,3};
	init(deltaext0_2_2) := {0,1,2,3};
	init(wntext1_1_3) := {0,1,2,3};
	init(wntext1_1_2) := {0,1,2,3};
	init(wntext1_1_1) := {0,1,2,3};
	init(gt2_3_4_0) := {0,1,2,3};
	init(wntext1_1_0) := {0,1,2,3};
	init(axin4_3_2) := {0,1,2,3};
	init(axin4_3_1) := {0,1,2,3};
	init(axin4_3_0) := {0,1,2,3};
	init(wntext3_4_1) := {0,1,2,3};
	init(wntext3_4_2) := {0,1,2,3};
	init(wntext3_4_0) := {0,1,2,3};
	init(wntext3_4_3) := {0,1,2,3};
	init(delta3_1_1) := {0,1,2,3};
	init(delta3_1_0) := {0,1,2,3};
	init(wntext0_2_3) := {0,1,2,3};
	init(wntext0_2_2) := {0,1,2,3};
	init(wntext0_2_1) := {0,1,2,3};
	init(wntext0_2_0) := {0,1,2,3};
	init(delta3_1_2) := {0,1,2,3};
	init(delta3_1_3) := {0,1,2,3};
	init(deltaext2_1_0) := {0,1,2,3};
	init(frizzled2_1_0) := {0,1,2,3};
	init(deltaext2_1_1) := {0,1,2,3};
	init(deltaext2_1_2) := {0,1,2,3};
	init(deltaext2_1_3) := {0,1,2,3};
	init(wntext0_4_0) := {0,1,2,3};
	init(wnt3_0_2) := {0,1,2,3};
	init(frizzled2_1_3) := {0,1,2,3};
	init(wnt3_0_3) := {0,1,2,3};
	init(wntext0_4_1) := {0,1,2,3};
	init(wnt3_0_0) := {0,1,2,3};
	init(frizzled2_1_2) := {0,1,2,3};
	init(wnt3_0_1) := {0,1,2,3};
	init(frizzled2_1_1) := {0,1,2,3};
	init(wntext0_4_2) := {0,1,2,3};
	init(wntext0_4_3) := {0,1,2,3};
	init(wntext2_1_1) := {0,1,2,3};
	init(wntext2_1_2) := {0,1,2,3};
	init(wntext2_1_0) := {0,1,2,3};
	init(wntext2_1_3) := {0,1,2,3};
	init(bcat0_3_3) := {0,1,2,3};
	init(bcat0_3_0) := {0,1,2,3};
	init(bcat0_3_2) := {0,1,2,3};
	init(bcat0_3_1) := {0,1,2,3};
	init(delta0_4_2) := {0,1,2,3};
	init(delta1_2_1) := {0,1,2,3};
	init(notchic4_2_1) := {0,1,2,3};
	init(delta0_4_3) := {0,1,2,3};
	init(notchic4_2_0) := {0,1,2,3};
	init(delta1_2_2) := {0,1,2,3};
	init(delta1_2_0) := {0,1,2,3};
	init(bcat0_1_0) := {0,1,2,3};
	init(notchic4_2_3) := {0,1,2,3};
	init(notchic4_2_2) := {0,1,2,3};
	init(axin3_0_3) := {0,1,2,3};
	init(axin2_3_0) := {0,1,2,3};
	init(axin2_3_2) := {0,1,2,3};
	init(bcat0_1_3) := {0,1,2,3};
	init(axin3_0_0) := {0,1,2,3};
	init(axin2_3_1) := {0,1,2,3};
	init(axin3_0_1) := {0,1,2,3};
	init(deltaext1_4_1) := {0,1,2,3};
	init(bcat0_1_2) := {0,1,2,3};
	init(axin2_3_3) := {0,1,2,3};
	init(bcat0_1_1) := {0,1,2,3};
	init(deltaext1_4_0) := {0,1,2,3};
	init(axin3_0_2) := {0,1,2,3};
	init(dsh4_1_1) := {0,1,2,3};
	init(dsh4_1_0) := {0,1,2,3};
	init(delta0_4_1) := {0,1,2,3};
	init(delta1_2_3) := {0,1,2,3};
	init(delta0_4_0) := {0,1,2,3};
	init(bcat2_1_3) := {0,1,2,3};
	init(dsh1_3_3) := {0,1,2,3};
	init(bcat3_4_0) := {0,1,2,3};
	init(bcat2_1_0) := {0,1,2,3};
	init(bcat3_4_2) := {0,1,2,3};
	init(bcat2_1_1) := {0,1,2,3};
	init(bcat3_4_1) := {0,1,2,3};
	init(bcat2_1_2) := {0,1,2,3};
	init(deltaext1_4_2) := {0,1,2,3};
	init(axin3_2_2) := {0,1,2,3};
	init(bcat3_4_3) := {0,1,2,3};
	init(deltaext1_4_3) := {0,1,2,3};
	init(axin2_1_0) := {0,1,2,3};
	init(axin3_2_1) := {0,1,2,3};
	init(axin2_1_1) := {0,1,2,3};
	init(axin3_2_3) := {0,1,2,3};
	init(axin2_1_2) := {0,1,2,3};
	init(axin2_1_3) := {0,1,2,3};
	init(axin3_2_0) := {0,1,2,3};
	init(bcat4_1_0) := {0,1,2,3};
	init(bcat4_1_3) := {0,1,2,3};
	init(bcat4_1_1) := {0,1,2,3};
	init(bcat4_1_2) := {0,1,2,3};
	init(gt1_0_3_3) := {0,1,2,3};
	init(gt1_0_3_2) := {0,1,2,3};
	init(gt1_0_3_1) := {0,1,2,3};
	init(axin4_3_3) := {0,1,2,3};
	init(gt1_0_3_0) := {0,1,2,3};
	init(gt1_0_1_2) := {0,1,2,3};
	init(gt1_0_1_3) := {0,1,2,3};
	init(gt1_0_1_0) := {0,1,2,3};
	init(gt1_0_1_1) := {0,1,2,3};
	init(bcat4_3_3) := {0,1,2,3};
	init(bcat3_0_3) := {0,1,2,3};
	init(bcat3_0_0) := {0,1,2,3};
	init(bcat3_0_1) := {0,1,2,3};
	init(bcat3_0_2) := {0,1,2,3};
	init(bcat4_3_0) := {0,1,2,3};
	init(gt1_4_3_0) := {0,1,2,3};
	init(bcat4_3_1) := {0,1,2,3};
	init(bcat4_3_2) := {0,1,2,3};
	init(gt1_4_3_1) := {0,1,2,3};
	init(gt1_4_1_1) := {0,1,2,3};
	init(gt1_4_1_0) := {0,1,2,3};
	init(gt1_4_1_3) := {0,1,2,3};
	init(gt1_4_1_2) := {0,1,2,3};
	init(wnt0_3_3) := {0,1,2,3};
	init(wnt0_3_2) := {0,1,2,3};
	init(wnt0_3_1) := {0,1,2,3};
	init(wnt0_3_0) := {0,1,2,3};
	init(wnt0_1_2) := {0,1,2,3};
	init(wnt0_1_3) := {0,1,2,3};
	init(wnt0_1_0) := {0,1,2,3};
	init(wnt0_1_1) := {0,1,2,3};
	init(deltaext0_4_3) := {0,1,2,3};
	init(frizzled0_1_0) := {0,1,2,3};
	init(frizzled0_1_1) := {0,1,2,3};
	init(frizzled0_1_2) := {0,1,2,3};
	init(frizzled0_1_3) := {0,1,2,3};
	init(deltaext0_4_0) := {0,1,2,3};
	init(deltaext0_4_2) := {0,1,2,3};
	init(deltaext0_4_1) := {0,1,2,3};
	init(deltaext4_3_3) := {0,1,2,3};
	init(dsh4_1_3) := {0,1,2,3};
	init(deltaext4_3_2) := {0,1,2,3};
	init(notchic1_2_0) := {0,1,2,3};
	init(dsh4_1_2) := {0,1,2,3};
	init(wntext3_2_0) := {0,1,2,3};
	init(deltaext4_3_1) := {0,1,2,3};
	init(deltaext4_3_0) := {0,1,2,3};
	init(notchic1_2_3) := {0,1,2,3};
	init(wntext3_2_2) := {0,1,2,3};
	init(wntext3_2_1) := {0,1,2,3};
	init(notchic1_2_1) := {0,1,2,3};
	init(wntext3_2_3) := {0,1,2,3};
	init(notchic1_2_2) := {0,1,2,3};
	init(notchic2_1_0) := {0,1,2,3};
	init(notchic2_1_3) := {0,1,2,3};
	init(notchic2_1_1) := {0,1,2,3};
	init(notchic2_1_2) := {0,1,2,3};
	init(frizzled2_3_0) := {0,1,2,3};
	init(wnt3_2_1) := {0,1,2,3};
	init(frizzled2_3_1) := {0,1,2,3};
	init(notchic2_3_3) := {0,1,2,3};
	init(frizzled2_3_2) := {0,1,2,3};
	init(wnt3_2_0) := {0,1,2,3};
	init(frizzled2_3_3) := {0,1,2,3};
	init(wnt3_2_3) := {0,1,2,3};
	init(wnt3_2_2) := {0,1,2,3};
	init(wnt1_0_3) := {0,1,2,3};
	init(wnt1_0_2) := {0,1,2,3};
	init(wnt1_0_1) := {0,1,2,3};
	init(wnt1_0_0) := {0,1,2,3};
	init(notchic2_3_2) := {0,1,2,3};
	init(notchic2_3_1) := {0,1,2,3};
	init(notchic2_3_0) := {0,1,2,3};
	init(frizzled3_2_0) := {0,1,2,3};
	init(dsh2_2_2) := {0,1,2,3};
	init(dsh2_2_1) := {0,1,2,3};
	init(dsh2_2_0) := {0,1,2,3};
	init(frizzled3_2_2) := {0,1,2,3};
	init(frizzled3_2_1) := {0,1,2,3};
	init(axin1_1_3) := {0,1,2,3};
	init(wntext0_1_0) := {0,1,2,3};
	init(frizzled3_2_3) := {0,1,2,3};
	init(axin1_1_2) := {0,1,2,3};
	init(gt1_3_3_3) := {0,1,2,3};
	init(axin1_1_1) := {0,1,2,3};
	init(axin1_1_0) := {0,1,2,3};
	init(delta1_4_2) := {0,1,2,3};
	init(delta1_4_1) := {0,1,2,3};
	init(delta1_4_3) := {0,1,2,3};
	init(frizzled3_0_0) := {0,1,2,3};
	init(wntext0_1_3) := {0,1,2,3};
	init(frizzled3_0_1) := {0,1,2,3};
	init(notchic4_0_0) := {0,1,2,3};
	init(notchic4_0_1) := {0,1,2,3};
	init(dsh2_4_0) := {0,1,2,3};
	init(frizzled3_0_2) := {0,1,2,3};
	init(frizzled3_0_3) := {0,1,2,3};
	init(wntext0_1_1) := {0,1,2,3};
	init(notchic4_0_2) := {0,1,2,3};
	init(notchic4_0_3) := {0,1,2,3};
	init(wntext0_1_2) := {0,1,2,3};
	init(p21_1_2_3) := {0,1,2,3};
	init(notchic4_4_3) := {0,1,2,3};
	init(notchic4_4_2) := {0,1,2,3};
	init(notchic4_4_1) := {0,1,2,3};
	init(notchic4_4_0) := {0,1,2,3};
	init(delta1_4_0) := {0,1,2,3};
	init(p21_1_2_1) := {0,1,2,3};
	init(p21_1_2_2) := {0,1,2,3};
	init(p21_1_2_0) := {0,1,2,3};
	init(p21_1_4_0) := {0,1,2,3};
	init(p21_1_4_3) := {0,1,2,3};
	init(p21_1_4_2) := {0,1,2,3};
	init(p21_1_4_1) := {0,1,2,3};
	init(wntext4_1_2) := {0,1,2,3};
	init(wntext4_1_1) := {0,1,2,3};
	init(p21_3_1_3) := {0,1,2,3};
	init(wntext4_1_3) := {0,1,2,3};
	init(p21_3_1_2) := {0,1,2,3};
	init(wntext4_1_0) := {0,1,2,3};
	init(p21_3_1_1) := {0,1,2,3};
	init(p21_3_1_0) := {0,1,2,3};
	init(frizzled4_1_0) := {0,1,2,3};
	init(frizzled4_1_2) := {0,1,2,3};
	init(frizzled4_1_1) := {0,1,2,3};
	init(frizzled4_1_3) := {0,1,2,3};
	init(gt2_3_4_1) := {0,1,2,3};
	init(gt2_3_4_2) := {0,1,2,3};
	init(gt2_3_4_3) := {0,1,2,3};
	init(dsh2_4_2) := {0,1,2,3};
	init(dsh2_4_1) := {0,1,2,3};
	init(dsh2_4_3) := {0,1,2,3};
	init(delta4_4_1) := {0,1,2,3};
	init(delta4_4_0) := {0,1,2,3};
	init(delta4_4_3) := {0,1,2,3};
	init(delta4_4_2) := {0,1,2,3};
	init(dsh2_2_3) := {0,1,2,3};
	init(gt1_2_1_1) := {0,1,2,3};
	init(gt1_3_2_2) := {0,1,2,3};
	init(gt1_3_2_3) := {0,1,2,3};
	init(gt1_2_1_0) := {0,1,2,3};
	init(gt1_3_2_0) := {0,1,2,3};
	init(gt1_3_2_1) := {0,1,2,3};
	init(gt1_2_1_3) := {0,1,2,3};
	init(gt1_2_1_2) := {0,1,2,3};
	init(gt2_4_2_0) := {0,1,2,3};
	init(gt2_4_2_1) := {0,1,2,3};
	init(p21_0_1_3) := {0,1,2,3};
	init(p21_0_1_1) := {0,1,2,3};
	init(p21_0_1_2) := {0,1,2,3};
	init(p21_0_1_0) := {0,1,2,3};
	init(wnt4_2_0) := {0,1,2,3};
	init(gt1_3_0_3) := {0,1,2,3};
	init(gt1_3_0_2) := {0,1,2,3};
	init(gt1_2_3_2) := {0,1,2,3};
	init(gt1_3_0_1) := {0,1,2,3};
	init(gt1_2_3_3) := {0,1,2,3};
	init(wnt4_2_3) := {0,1,2,3};
	init(gt1_3_0_0) := {0,1,2,3};
	init(wnt4_2_2) := {0,1,2,3};
	init(gt1_2_3_0) := {0,1,2,3};
	init(wnt4_2_1) := {0,1,2,3};
	init(gt1_2_3_1) := {0,1,2,3};
	init(gt2_4_0_0) := {0,1,2,3};
	init(notchic1_4_3) := {0,1,2,3};
	init(gt2_4_0_1) := {0,1,2,3};
	init(gt2_3_3_3) := {0,1,2,3};
	init(gt2_4_0_2) := {0,1,2,3};
	init(gt2_4_0_3) := {0,1,2,3};
	init(gt2_3_3_2) := {0,1,2,3};
	init(notchic1_4_0) := {0,1,2,3};
	init(notchic1_4_2) := {0,1,2,3};
	init(notchic1_4_1) := {0,1,2,3};
	init(gt1_3_4_3) := {0,1,2,3};
	init(p21_3_3_0) := {0,1,2,3};
	init(gt1_3_4_2) := {0,1,2,3};
	init(p21_3_3_1) := {0,1,2,3};
	init(p21_3_3_2) := {0,1,2,3};
	init(p21_3_3_3) := {0,1,2,3};
	init(gt2_3_1_1) := {0,1,2,3};
	init(gt2_3_1_0) := {0,1,2,3};
	init(gt2_3_1_3) := {0,1,2,3};
	init(gt2_3_1_2) := {0,1,2,3};
	init(p21_1_0_3) := {0,1,2,3};
	init(gt2_1_0_1) := {0,1,2,3};
	init(gt2_2_1_3) := {0,1,2,3};
	init(gt2_1_0_2) := {0,1,2,3};
	init(p21_1_0_1) := {0,1,2,3};
	init(gt2_2_1_2) := {0,1,2,3};
	init(gt2_1_0_0) := {0,1,2,3};
	init(gt2_2_1_1) := {0,1,2,3};
	init(p21_1_0_2) := {0,1,2,3};
	init(gt1_3_4_0) := {0,1,2,3};
	init(gt2_2_1_0) := {0,1,2,3};
	init(p21_1_0_0) := {0,1,2,3};
	init(gt1_3_4_1) := {0,1,2,3};
	init(gt2_1_0_3) := {0,1,2,3};
	init(gt2_1_2_0) := {0,1,2,3};
	init(frizzled0_3_0) := {0,1,2,3};
	init(gt2_1_2_3) := {0,1,2,3};
	init(gt2_1_2_2) := {0,1,2,3};
	init(gt2_1_2_1) := {0,1,2,3};
	init(frizzled0_3_3) := {0,1,2,3};
	init(frizzled0_3_2) := {0,1,2,3};
	init(frizzled0_3_1) := {0,1,2,3};
	init(gt2_3_3_0) := {0,1,2,3};
	init(gt2_3_3_1) := {0,1,2,3};
	init(frizzled4_2_0) := {0,1,2,3};
	init(frizzled4_2_1) := {0,1,2,3};
	init(frizzled4_2_2) := {0,1,2,3};
	init(frizzled4_2_3) := {0,1,2,3};
	init(p21_2_4_0) := {0,1,2,3};
	init(p21_2_4_1) := {0,1,2,3};
	init(p21_2_4_2) := {0,1,2,3};
	init(p21_2_4_3) := {0,1,2,3};
	init(frizzled4_4_3) := {0,1,2,3};
	init(frizzled4_4_2) := {0,1,2,3};
	init(frizzled4_4_1) := {0,1,2,3};
	init(frizzled4_4_0) := {0,1,2,3};
	init(bcat1_3_0) := {0,1,2,3};
	init(wnt1_2_0) := {0,1,2,3};
	init(wnt1_2_1) := {0,1,2,3};
	init(bcat1_3_1) := {0,1,2,3};
	init(notchic2_4_0) := {0,1,2,3};
	init(wnt1_2_2) := {0,1,2,3};
	init(wnt1_2_3) := {0,1,2,3};
	init(notchic2_4_1) := {0,1,2,3};
	init(gt2_0_0_0) := {0,1,2,3};
	init(gt2_0_0_1) := {0,1,2,3};
	init(bcat1_3_2) := {0,1,2,3};
	init(gt2_0_0_2) := {0,1,2,3};
	init(bcat1_3_3) := {0,1,2,3};
	init(gt2_0_0_3) := {0,1,2,3};
	init(wnt3_3_3) := {0,1,2,3};
	init(wnt3_3_1) := {0,1,2,3};
	init(wnt3_3_2) := {0,1,2,3};
	init(notchic2_4_2) := {0,1,2,3};
	init(delta4_2_0) := {0,1,2,3};
	init(notchic2_4_3) := {0,1,2,3};
	init(wnt3_3_0) := {0,1,2,3};
	init(delta4_2_1) := {0,1,2,3};
	init(delta4_2_2) := {0,1,2,3};
	init(delta4_2_3) := {0,1,2,3};
	init(delta3_3_0) := {0,1,2,3};
	init(delta3_3_1) := {0,1,2,3};
	init(delta3_3_2) := {0,1,2,3};
	init(delta3_3_3) := {0,1,2,3};
	init(bcat1_1_3) := {0,1,2,3};
	init(gt1_1_1_3) := {0,1,2,3};
	init(bcat1_1_2) := {0,1,2,3};
	init(bcat1_1_1) := {0,1,2,3};
	init(bcat1_1_0) := {0,1,2,3};
	init(gt1_1_1_0) := {0,1,2,3};
	init(gt1_1_1_2) := {0,1,2,3};
	init(gt1_1_1_1) := {0,1,2,3};
	init(gt2_0_2_2) := {0,1,2,3};
	init(gt2_0_2_3) := {0,1,2,3};
	init(gt2_0_2_0) := {0,1,2,3};
	init(gt2_0_2_1) := {0,1,2,3};
	init(gt2_0_4_3) := {0,1,2,3};
	init(gt1_1_3_3) := {0,1,2,3};
	init(gt2_0_4_2) := {0,1,2,3};
	init(gt1_1_3_2) := {0,1,2,3};
	init(gt2_0_4_1) := {0,1,2,3};
	init(wntext3_0_3) := {0,1,2,3};
	init(gt2_0_4_0) := {0,1,2,3};
	init(gt1_1_3_1) := {0,1,2,3};
	init(gt1_1_3_0) := {0,1,2,3};
	init(wntext3_0_2) := {0,1,2,3};
	init(wntext3_0_1) := {0,1,2,3};
	init(wntext3_0_0) := {0,1,2,3};
	init(deltaext0_0_3) := {0,1,2,3};
	init(wntext2_3_1) := {0,1,2,3};
	init(wntext2_3_2) := {0,1,2,3};
	init(frizzled1_2_0) := {0,1,2,3};
	init(wntext2_3_3) := {0,1,2,3};
	init(p21_4_1_1) := {0,1,2,3};
	init(deltaext0_0_0) := {0,1,2,3};
	init(p21_4_1_2) := {0,1,2,3};
	init(p21_4_1_3) := {0,1,2,3};
	init(deltaext0_0_1) := {0,1,2,3};
	init(wntext2_3_0) := {0,1,2,3};
	init(deltaext0_0_2) := {0,1,2,3};
	init(wnt2_3_1) := {0,1,2,3};
	init(wnt2_3_0) := {0,1,2,3};
	init(p21_4_1_0) := {0,1,2,3};
	init(wnt2_3_3) := {0,1,2,3};
	init(frizzled1_2_3) := {0,1,2,3};
	init(delta2_4_0) := {0,1,2,3};
	init(wnt2_3_2) := {0,1,2,3};
	init(delta2_4_1) := {0,1,2,3};
	init(delta2_4_2) := {0,1,2,3};
	init(frizzled1_2_1) := {0,1,2,3};
	init(delta2_4_3) := {0,1,2,3};
	init(frizzled1_2_2) := {0,1,2,3};
	init(wnt2_1_0) := {0,1,2,3};
	init(wnt2_1_1) := {0,1,2,3};
	init(wnt2_1_2) := {0,1,2,3};
	init(wnt2_1_3) := {0,1,2,3};
	init(notchic3_3_3) := {0,1,2,3};
	init(notchic3_3_2) := {0,1,2,3};
	init(frizzled1_0_3) := {0,1,2,3};
	init(dsh3_3_0) := {0,1,2,3};
	init(notchic0_3_1) := {0,1,2,3};
	init(frizzled1_0_2) := {0,1,2,3};
	init(p21_4_3_3) := {0,1,2,3};
	init(notchic0_3_2) := {0,1,2,3};
	init(frizzled1_0_1) := {0,1,2,3};
	init(notchic0_3_3) := {0,1,2,3};
	init(frizzled1_0_0) := {0,1,2,3};
	init(notchic3_3_1) := {0,1,2,3};
	init(notchic3_3_0) := {0,1,2,3};
	init(p21_4_3_0) := {0,1,2,3};
	init(axin3_3_1) := {0,1,2,3};
	init(axin3_3_0) := {0,1,2,3};
	init(axin3_3_3) := {0,1,2,3};
	init(p21_4_3_2) := {0,1,2,3};
	init(axin3_3_2) := {0,1,2,3};
	init(notchic0_3_0) := {0,1,2,3};
	init(p21_4_3_1) := {0,1,2,3};
	init(p21_2_1_0) := {0,1,2,3};
	init(p21_2_1_2) := {0,1,2,3};
	init(p21_2_1_1) := {0,1,2,3};
	init(gt2_4_4_1) := {0,1,2,3};
	init(gt2_4_4_0) := {0,1,2,3};
	init(gt2_4_4_3) := {0,1,2,3};
	init(gt2_4_4_2) := {0,1,2,3};
	init(p21_2_1_3) := {0,1,2,3};
	init(notchic3_1_3) := {0,1,2,3};
	init(gt1_4_0_0) := {0,1,2,3};
	init(notchic3_1_2) := {0,1,2,3};
	init(notchic3_1_1) := {0,1,2,3};
	init(notchic3_1_0) := {0,1,2,3};
	init(wnt4_4_3) := {0,1,2,3};
	init(gt1_4_0_3) := {0,1,2,3};
	init(gt1_4_0_2) := {0,1,2,3};
	init(gt1_4_0_1) := {0,1,2,3};
	init(wntext4_4_2) := {0,1,2,3};
	init(wnt4_0_2) := {0,1,2,3};
	init(wntext4_4_3) := {0,1,2,3};
	init(wnt4_0_1) := {0,1,2,3};
	init(dsh3_1_3) := {0,1,2,3};
	init(wnt4_0_0) := {0,1,2,3};
	init(p21_0_3_3) := {0,1,2,3};
	init(wnt4_0_3) := {0,1,2,3};
	init(dsh1_0_3) := {0,1,2,3};
	init(p21_0_3_1) := {0,1,2,3};
	init(p21_0_3_2) := {0,1,2,3};
	init(dsh1_0_2) := {0,1,2,3};
	init(p21_0_3_0) := {0,1,2,3};
	init(dsh4_2_2) := {0,1,2,3};
	init(dsh0_3_0) := {0,1,2,3};
	init(dsh4_2_1) := {0,1,2,3};
	init(dsh0_3_1) := {0,1,2,3};
	init(dsh0_3_2) := {0,1,2,3};
	init(dsh1_0_1) := {0,1,2,3};
	init(wntext4_4_0) := {0,1,2,3};
	init(dsh0_3_3) := {0,1,2,3};
	init(dsh4_2_3) := {0,1,2,3};
	init(dsh1_0_0) := {0,1,2,3};
	init(wntext4_4_1) := {0,1,2,3};
	init(dsh4_4_3) := {0,1,2,3};
	init(dsh1_2_0) := {0,1,2,3};
	init(dsh1_2_1) := {0,1,2,3};
	init(dsh0_1_1) := {0,1,2,3};
	init(dsh1_2_2) := {0,1,2,3};
	init(dsh1_2_3) := {0,1,2,3};
	init(dsh0_1_0) := {0,1,2,3};
	init(dsh0_1_3) := {0,1,2,3};
	init(dsh4_4_0) := {0,1,2,3};
	init(dsh0_1_2) := {0,1,2,3};
	init(dsh4_4_1) := {0,1,2,3};
	init(dsh4_4_2) := {0,1,2,3};
	init(dsh3_3_3) := {0,1,2,3};
	init(dsh3_3_2) := {0,1,2,3};
	init(dsh3_3_1) := {0,1,2,3};
	init(bcat3_3_2) := {0,1,2,3};
	init(bcat3_3_3) := {0,1,2,3};
	init(bcat3_3_0) := {0,1,2,3};
	init(bcat3_3_1) := {0,1,2,3};
	init(bcat3_1_3) := {0,1,2,3};
	init(bcat3_1_2) := {0,1,2,3};
	init(bcat3_1_1) := {0,1,2,3};
	init(bcat3_1_0) := {0,1,2,3};
	init(dsh4_2_0) := {0,1,2,3};
	init(deltaext3_3_0) := {0,1,2,3};
	init(gt2_2_4_2) := {0,1,2,3};
	init(gt2_2_4_3) := {0,1,2,3};
	init(deltaext3_1_3) := {0,1,2,3};
	init(deltaext3_1_2) := {0,1,2,3};
	init(deltaext3_1_1) := {0,1,2,3};
	init(deltaext3_1_0) := {0,1,2,3};
	init(deltaext3_3_3) := {0,1,2,3};
	init(deltaext3_3_2) := {0,1,2,3};
	init(deltaext3_3_1) := {0,1,2,3};
	init(deltaext2_3_1) := {0,1,2,3};
	init(deltaext2_3_0) := {0,1,2,3};
	init(gt2_2_2_3) := {0,1,2,3};
	init(gt2_2_2_2) := {0,1,2,3};
	init(gt2_2_2_1) := {0,1,2,3};
	init(gt2_2_2_0) := {0,1,2,3};
	init(delta4_0_1) := {0,1,2,3};
	init(delta4_0_0) := {0,1,2,3};
	init(delta0_1_0) := {0,1,2,3};
	init(delta0_1_1) := {0,1,2,3};
	init(delta0_1_2) := {0,1,2,3};
	init(delta0_1_3) := {0,1,2,3};
	init(gt2_2_4_0) := {0,1,2,3};
	init(gt2_1_4_3) := {0,1,2,3};
	init(gt2_2_4_1) := {0,1,2,3};
	init(deltaext2_3_2) := {0,1,2,3};
	init(deltaext2_3_3) := {0,1,2,3};
	init(deltaext4_0_3) := {0,1,2,3};
	init(delta4_0_2) := {0,1,2,3};
	init(delta4_0_3) := {0,1,2,3};
	init(notchic1_0_3) := {0,1,2,3};
	init(deltaext4_0_2) := {0,1,2,3};
	init(deltaext4_0_1) := {0,1,2,3};
	init(wnt1_4_0) := {0,1,2,3};
	init(deltaext4_0_0) := {0,1,2,3};
	init(wnt1_4_1) := {0,1,2,3};
	init(wnt1_4_2) := {0,1,2,3};
	init(wnt1_4_3) := {0,1,2,3};
	init(notchic1_0_0) := {0,1,2,3};
	init(notchic1_0_1) := {0,1,2,3};
	init(notchic1_0_2) := {0,1,2,3};
	init(dsh2_0_0) := {0,1,2,3};
	init(axin1_3_1) := {0,1,2,3};
	init(axin1_3_0) := {0,1,2,3};
	init(axin0_1_0) := {0,1,2,3};
	init(axin1_3_3) := {0,1,2,3};
	init(dsh2_0_2) := {0,1,2,3};
	init(axin1_3_2) := {0,1,2,3};
	init(dsh2_0_1) := {0,1,2,3};
	init(delta2_2_3) := {0,1,2,3};
	init(dsh2_0_3) := {0,1,2,3};
	init(delta2_2_2) := {0,1,2,3};
	init(axin0_1_1) := {0,1,2,3};
	init(axin0_1_2) := {0,1,2,3};
	init(axin0_1_3) := {0,1,2,3};
	init(axin0_3_3) := {0,1,2,3};
	init(deltaext1_1_3) := {0,1,2,3};
	init(dsh3_1_0) := {0,1,2,3};
	init(dsh3_1_1) := {0,1,2,3};
	init(deltaext1_1_2) := {0,1,2,3};
	init(deltaext1_1_1) := {0,1,2,3};
	init(dsh3_1_2) := {0,1,2,3};
	init(deltaext1_1_0) := {0,1,2,3};
	init(axin0_3_0) := {0,1,2,3};
	init(axin0_3_2) := {0,1,2,3};
	init(axin0_3_1) := {0,1,2,3};
	init(bcat2_4_3) := {0,1,2,3};
	init(bcat2_4_2) := {0,1,2,3};
	init(bcat2_4_1) := {0,1,2,3};
	init(bcat2_4_0) := {0,1,2,3};
	init(notchic0_1_3) := {0,1,2,3};
	init(notchic0_1_0) := {0,1,2,3};
	init(notchic0_1_1) := {0,1,2,3};
	init(notchic0_1_2) := {0,1,2,3};
	init(gt2_4_2_2) := {0,1,2,3};
	init(gt2_4_2_3) := {0,1,2,3};
	init(delta2_2_0) := {0,1,2,3};
	init(delta2_2_1) := {0,1,2,3};
	init(axin4_0_2) := {0,1,2,3};
	init(axin4_0_3) := {0,1,2,3};
	init(notchic4_1_3) := {0,1,2,3};
	init(axin4_0_0) := {0,1,2,3};
	init(axin4_0_1) := {0,1,2,3};
	init(notchic4_1_2) := {0,1,2,3};
	init(notchic4_1_1) := {0,1,2,3};
	init(notchic4_1_0) := {0,1,2,3};
	init(bcat0_4_1) := {0,1,2,3};
	init(bcat0_4_0) := {0,1,2,3};
	init(bcat0_4_3) := {0,1,2,3};
	init(bcat0_4_2) := {0,1,2,3};
	init(notchic4_3_0) := {0,1,2,3};
	init(notchic4_3_3) := {0,1,2,3};
	init(notchic4_3_1) := {0,1,2,3};
	init(notchic4_3_2) := {0,1,2,3};
	init(bcat0_0_1) := {0,1,2,3};
	init(bcat0_0_0) := {0,1,2,3};
	init(bcat0_0_2) := {0,1,2,3};
	init(bcat0_0_3) := {0,1,2,3};
	init(axin4_2_2) := {0,1,2,3};
	init(axin4_2_3) := {0,1,2,3};
	init(wntext1_0_0) := {0,1,2,3};
	init(wntext1_2_3) := {0,1,2,3};
	init(axin4_2_0) := {0,1,2,3};
	init(axin4_2_1) := {0,1,2,3};
	init(wntext1_2_1) := {0,1,2,3};
	init(wntext1_2_2) := {0,1,2,3};
	init(wntext1_2_0) := {0,1,2,3};
	init(bcat2_0_1) := {0,1,2,3};
	init(axin4_4_1) := {0,1,2,3};
	init(axin4_4_0) := {0,1,2,3};
	init(bcat2_0_0) := {0,1,2,3};
	init(bcat2_0_3) := {0,1,2,3};
	init(bcat2_0_2) := {0,1,2,3};
	init(wntext1_0_3) := {0,1,2,3};
	init(wntext1_0_2) := {0,1,2,3};
	init(wntext1_0_1) := {0,1,2,3};
	init(frizzled3_3_2) := {0,1,2,3};
	init(p21_1_1_1) := {0,1,2,3};
	init(axin1_2_1) := {0,1,2,3};
	init(frizzled3_3_3) := {0,1,2,3};
	init(p21_1_1_0) := {0,1,2,3};
	init(axin1_2_2) := {0,1,2,3};
	init(p21_1_1_3) := {0,1,2,3};
	init(deltaext0_1_2) := {0,1,2,3};
	init(deltaext0_1_3) := {0,1,2,3};
	init(axin1_2_0) := {0,1,2,3};
	init(p21_1_1_2) := {0,1,2,3};
	init(deltaext0_1_0) := {0,1,2,3};
	init(dsh2_1_2) := {0,1,2,3};
	init(dsh2_1_3) := {0,1,2,3};
	init(deltaext0_1_1) := {0,1,2,3};
	init(axin1_2_3) := {0,1,2,3};
	init(frizzled3_3_0) := {0,1,2,3};
	init(dsh2_1_0) := {0,1,2,3};
	init(dsh2_1_1) := {0,1,2,3};
	init(frizzled3_3_1) := {0,1,2,3};
	init(bcat4_0_3) := {0,1,2,3};
	init(bcat4_0_2) := {0,1,2,3};
	init(bcat4_0_1) := {0,1,2,3};
	init(bcat4_0_0) := {0,1,2,3};
	init(axin4_4_2) := {0,1,2,3};
	init(axin4_4_3) := {0,1,2,3};
	init(wntext4_2_2) := {0,1,2,3};
	init(wntext4_2_3) := {0,1,2,3};
	init(delta3_2_0) := {0,1,2,3};
	init(wntext4_2_0) := {0,1,2,3};
	init(wntext4_2_1) := {0,1,2,3};
	init(gt2_1_4_0) := {0,1,2,3};
	init(gt2_1_4_2) := {0,1,2,3};
	init(gt2_1_4_1) := {0,1,2,3};
	init(deltaext2_2_3) := {0,1,2,3};
	init(delta3_2_3) := {0,1,2,3};
	init(delta3_2_1) := {0,1,2,3};
	init(wntext0_3_3) := {0,1,2,3};
	init(delta3_2_2) := {0,1,2,3};
	init(wntext0_3_2) := {0,1,2,3};
	init(wntext0_3_1) := {0,1,2,3};
	init(wntext0_3_0) := {0,1,2,3};
	init(p21_3_0_1) := {0,1,2,3};
	init(p21_3_0_2) := {0,1,2,3};
	init(bcat4_4_0) := {0,1,2,3};
	init(p21_3_0_0) := {0,1,2,3};
	init(bcat4_4_1) := {0,1,2,3};
	init(deltaext2_2_0) := {0,1,2,3};
	init(deltaext2_2_1) := {0,1,2,3};
	init(deltaext2_2_2) := {0,1,2,3};
	init(bcat4_4_2) := {0,1,2,3};
	init(bcat4_4_3) := {0,1,2,3};
	init(p21_3_0_3) := {0,1,2,3};
	init(delta2_0_2) := {0,1,2,3};
	init(delta2_0_3) := {0,1,2,3};
	init(gt1_4_2_3) := {0,1,2,3};
	init(delta2_0_0) := {0,1,2,3};
	init(delta2_0_1) := {0,1,2,3};
	init(deltaext3_0_0) := {0,1,2,3};
	init(deltaext3_0_1) := {0,1,2,3};
	init(deltaext3_0_2) := {0,1,2,3};
	init(deltaext3_0_3) := {0,1,2,3};
	init(wntext2_0_2) := {0,1,2,3};
	init(wntext2_0_3) := {0,1,2,3};
	init(wntext2_0_0) := {0,1,2,3};
	init(wntext2_0_1) := {0,1,2,3};
	init(gt1_4_4_3) := {0,1,2,3};
	init(gt1_4_4_2) := {0,1,2,3};
	init(gt1_4_4_1) := {0,1,2,3};
	init(delta0_3_3) := {0,1,2,3};
	init(delta1_1_2) := {0,1,2,3};
	init(delta1_1_3) := {0,1,2,3};
	init(delta1_1_0) := {0,1,2,3};
	init(delta1_1_1) := {0,1,2,3};
	init(delta0_3_2) := {0,1,2,3};
	init(delta0_3_1) := {0,1,2,3};
	init(delta0_3_0) := {0,1,2,3};
	init(deltaext1_3_0) := {0,1,2,3};
	init(axin2_4_1) := {0,1,2,3};
	init(axin2_4_0) := {0,1,2,3};
	init(axin2_4_3) := {0,1,2,3};
	init(deltaext1_3_2) := {0,1,2,3};
	init(axin2_4_2) := {0,1,2,3};
	init(deltaext1_3_1) := {0,1,2,3};
	init(axin2_2_2) := {0,1,2,3};
	init(axin2_2_3) := {0,1,2,3};
	init(axin3_1_1) := {0,1,2,3};
	init(axin3_1_0) := {0,1,2,3};
	init(deltaext1_3_3) := {0,1,2,3};
	init(axin3_1_3) := {0,1,2,3};
	init(axin3_1_2) := {0,1,2,3};
	init(axin2_2_0) := {0,1,2,3};
	init(axin2_2_1) := {0,1,2,3};
	init(gt1_0_4_0) := {0,1,2,3};
	init(deltaext4_2_0) := {0,1,2,3};
	init(gt1_0_4_3) := {0,1,2,3};
	init(gt1_0_4_2) := {0,1,2,3};
	init(gt1_0_4_1) := {0,1,2,3};
	init(dsh1_3_2) := {0,1,2,3};
	init(dsh1_3_1) := {0,1,2,3};
	init(dsh1_3_0) := {0,1,2,3};
	init(dsh0_0_0) := {0,1,2,3};
	init(gt1_0_2_1) := {0,1,2,3};
	init(gt1_0_2_2) := {0,1,2,3};
	init(dsh0_0_2) := {0,1,2,3};
	init(dsh0_0_1) := {0,1,2,3};
	init(gt1_0_2_0) := {0,1,2,3};
	init(deltaext4_2_1) := {0,1,2,3};
	init(dsh0_0_3) := {0,1,2,3};
	init(deltaext4_2_2) := {0,1,2,3};
	init(deltaext4_2_3) := {0,1,2,3};
	init(gt1_0_2_3) := {0,1,2,3};
	init(gt1_2_0_2) := {0,1,2,3};
	init(gt1_2_0_1) := {0,1,2,3};
	init(wnt3_1_3) := {0,1,2,3};
	init(gt1_2_0_0) := {0,1,2,3};
	init(gt1_4_4_0) := {0,1,2,3};
	init(wnt3_1_1) := {0,1,2,3};
	init(wnt3_1_2) := {0,1,2,3};
	init(gt1_2_0_3) := {0,1,2,3};
	init(wnt3_1_0) := {0,1,2,3};
	init(bcat2_2_2) := {0,1,2,3};
	init(bcat2_2_3) := {0,1,2,3};
	init(bcat2_2_0) := {0,1,2,3};
	init(bcat2_2_1) := {0,1,2,3};
	init(gt1_4_2_0) := {0,1,2,3};
	init(gt1_4_2_2) := {0,1,2,3};
	init(gt1_4_2_1) := {0,1,2,3};
	init(axin1_0_3) := {0,1,2,3};
	init(wnt0_2_3) := {0,1,2,3};
	init(axin1_0_1) := {0,1,2,3};
	init(wnt0_2_2) := {0,1,2,3};
	init(wnt0_2_1) := {0,1,2,3};
	init(axin1_0_2) := {0,1,2,3};
	init(dsh2_3_0) := {0,1,2,3};
	init(frizzled3_1_0) := {0,1,2,3};
	init(frizzled3_1_1) := {0,1,2,3};
	init(dsh2_3_1) := {0,1,2,3};
	init(frizzled3_1_2) := {0,1,2,3};
	init(frizzled3_1_3) := {0,1,2,3};
	init(wnt0_2_0) := {0,1,2,3};
	init(axin1_0_0) := {0,1,2,3};
	init(wnt0_0_1) := {0,1,2,3};
	init(wnt0_0_2) := {0,1,2,3};
	init(wnt0_0_0) := {0,1,2,3};
	init(bcat0_2_2) := {0,1,2,3};
	init(bcat0_2_3) := {0,1,2,3};
	init(wnt0_0_3) := {0,1,2,3};
	init(bcat0_2_0) := {0,1,2,3};
	init(bcat0_2_1) := {0,1,2,3};
	init(p21_1_3_0) := {0,1,2,3};
	init(deltaext0_3_1) := {0,1,2,3};
	init(wnt4_4_0) := {0,1,2,3};
	init(deltaext0_3_0) := {0,1,2,3};
	init(p21_1_3_1) := {0,1,2,3};
	init(deltaext0_3_3) := {0,1,2,3};
	init(wnt4_4_1) := {0,1,2,3};
	init(wnt4_4_2) := {0,1,2,3};
	init(deltaext0_3_2) := {0,1,2,3};
	init(dsh4_0_1) := {0,1,2,3};
	init(frizzled0_0_0) := {0,1,2,3};
	init(frizzled0_0_1) := {0,1,2,3};
	init(dsh4_0_2) := {0,1,2,3};
	init(p21_1_3_2) := {0,1,2,3};
	init(frizzled0_0_2) := {0,1,2,3};
	init(p21_1_3_3) := {0,1,2,3};
	init(frizzled0_0_3) := {0,1,2,3};
	init(dsh4_0_0) := {0,1,2,3};
	init(deltaext2_0_1) := {0,1,2,3};
	init(deltaext2_0_2) := {0,1,2,3};
	init(deltaext2_0_3) := {0,1,2,3};
	init(notchic1_1_2) := {0,1,2,3};
	init(notchic1_1_3) := {0,1,2,3};
	init(notchic1_1_0) := {0,1,2,3};
	init(dsh4_0_3) := {0,1,2,3};
	init(notchic1_1_1) := {0,1,2,3};
	init(deltaext2_0_0) := {0,1,2,3};
	init(wntext4_0_1) := {0,1,2,3};
	init(wntext4_0_0) := {0,1,2,3};
	init(wntext4_0_3) := {0,1,2,3};
	init(delta3_0_1) := {0,1,2,3};
	init(delta3_0_2) := {0,1,2,3};
	init(wntext4_0_2) := {0,1,2,3};
	init(delta3_0_0) := {0,1,2,3};
	init(delta3_0_3) := {0,1,2,3};
	init(delta4_3_3) := {0,1,2,3};
	init(delta4_3_2) := {0,1,2,3};
	init(wnt1_1_0) := {0,1,2,3};
	init(delta4_3_1) := {0,1,2,3};
	init(delta4_3_0) := {0,1,2,3};
	init(bcat4_2_3) := {0,1,2,3};
	init(wnt1_1_3) := {0,1,2,3};
	init(bcat4_2_2) := {0,1,2,3};
	init(bcat4_2_1) := {0,1,2,3};
	init(wnt1_1_2) := {0,1,2,3};
	init(wnt1_1_1) := {0,1,2,3};
	init(bcat4_2_0) := {0,1,2,3};
	init(wntext0_0_1) := {0,1,2,3};
	init(wntext0_0_0) := {0,1,2,3};
	init(p21_2_3_3) := {0,1,2,3};
	init(p21_2_3_2) := {0,1,2,3};
	init(wntext0_0_2) := {0,1,2,3};
	init(wntext0_0_3) := {0,1,2,3};
	init(p21_2_3_1) := {0,1,2,3};
	init(delta1_3_3) := {0,1,2,3};
	init(p21_2_3_0) := {0,1,2,3};
	init(delta1_3_2) := {0,1,2,3};
	init(delta1_3_0) := {0,1,2,3};
	init(delta1_3_1) := {0,1,2,3};
	init(frizzled1_3_1) := {0,1,2,3};
	init(frizzled1_3_0) := {0,1,2,3};
	init(frizzled1_3_3) := {0,1,2,3};
	init(frizzled1_3_2) := {0,1,2,3};
	init(frizzled2_0_2) := {0,1,2,3};
	init(frizzled2_0_3) := {0,1,2,3};
	init(frizzled2_0_0) := {0,1,2,3};
	init(wntext3_1_2) := {0,1,2,3};
	init(wntext3_1_3) := {0,1,2,3};
	init(frizzled2_0_1) := {0,1,2,3};
	init(wntext3_1_0) := {0,1,2,3};
	init(wntext3_1_1) := {0,1,2,3};
	init(wntext3_3_1) := {0,1,2,3};
	init(wntext3_3_0) := {0,1,2,3};
	init(wntext3_3_3) := {0,1,2,3};
	init(deltaext4_4_3) := {0,1,2,3};
	init(wntext3_3_2) := {0,1,2,3};
	init(deltaext4_4_2) := {0,1,2,3};
	init(frizzled4_0_1) := {0,1,2,3};
	init(frizzled4_0_0) := {0,1,2,3};
	init(deltaext4_4_1) := {0,1,2,3};
	init(frizzled4_0_3) := {0,1,2,3};
	init(deltaext4_4_0) := {0,1,2,3};
	init(frizzled4_0_2) := {0,1,2,3};
	init(frizzled2_2_0) := {0,1,2,3};
	init(frizzled2_2_1) := {0,1,2,3};
	init(frizzled2_2_2) := {0,1,2,3};
	init(frizzled2_2_3) := {0,1,2,3};
	init(frizzled2_4_3) := {0,1,2,3};
	init(frizzled2_4_2) := {0,1,2,3};
	init(dsh2_3_2) := {0,1,2,3};
	init(dsh2_3_3) := {0,1,2,3};
	init(frizzled2_4_1) := {0,1,2,3};
	init(frizzled2_4_0) := {0,1,2,3};
	init(notchic2_2_2) := {0,1,2,3};
	init(notchic2_2_3) := {0,1,2,3};
	init(notchic2_2_0) := {0,1,2,3};
	init(notchic2_2_1) := {0,1,2,3};

	if ((notchic4_3_0 > gt2_4_3_0))
		next(gt2_4_3_0) := gt2_4_3_0 + 1;
	else if ((notchic4_3_0 < gt2_4_3_0))
		next(gt2_4_3_0) := gt2_4_3_0 - 1;
	else next(gt2_4_3_0) := gt2_4_3_0;
	if (((3 - axin1_2_3) > bcat1_2_3))
		next(bcat1_2_3) := bcat1_2_3 + 1;
	else if ((((3 - axin1_2_3) < bcat1_2_3) & (bcat1_2_3 > 0)))
		next(bcat1_2_3) := bcat1_2_3 - 1;
	else next(bcat1_2_3) := bcat1_2_3;
	if (((3 - axin1_2_2) > bcat1_2_2))
		next(bcat1_2_2) := bcat1_2_2 + 1;
	else if ((((3 - axin1_2_2) < bcat1_2_2) & (bcat1_2_2 > 0)))
		next(bcat1_2_2) := bcat1_2_2 - 1;
	else next(bcat1_2_2) := bcat1_2_2;
	if (((3 - axin1_2_1) > bcat1_2_1))
		next(bcat1_2_1) := bcat1_2_1 + 1;
	else if ((((3 - axin1_2_1) < bcat1_2_1) & (bcat1_2_1 > 0)))
		next(bcat1_2_1) := bcat1_2_1 - 1;
	else next(bcat1_2_1) := bcat1_2_1;
	if (((3 - axin1_2_0) > bcat1_2_0))
		next(bcat1_2_0) := bcat1_2_0 + 1;
	else if ((((3 - axin1_2_0) < bcat1_2_0) & (bcat1_2_0 > 0)))
		next(bcat1_2_0) := bcat1_2_0 - 1;
	else next(bcat1_2_0) := bcat1_2_0;
	if ((bcat2_2_3 > gt1_2_2_3))
		next(gt1_2_2_3) := gt1_2_2_3 + 1;
	else if ((bcat2_2_3 < gt1_2_2_3))
		next(gt1_2_2_3) := gt1_2_2_3 - 1;
	else next(gt1_2_2_3) := gt1_2_2_3;
	if ((bcat3_1_0 > gt1_3_1_0))
		next(gt1_3_1_0) := gt1_3_1_0 + 1;
	else if ((bcat3_1_0 < gt1_3_1_0))
		next(gt1_3_1_0) := gt1_3_1_0 - 1;
	else next(gt1_3_1_0) := gt1_3_1_0;
	if ((bcat2_2_2 > gt1_2_2_2))
		next(gt1_2_2_2) := gt1_2_2_2 + 1;
	else if ((bcat2_2_2 < gt1_2_2_2))
		next(gt1_2_2_2) := gt1_2_2_2 - 1;
	else next(gt1_2_2_2) := gt1_2_2_2;
	if ((bcat2_2_1 > gt1_2_2_1))
		next(gt1_2_2_1) := gt1_2_2_1 + 1;
	else if ((bcat2_2_1 < gt1_2_2_1))
		next(gt1_2_2_1) := gt1_2_2_1 - 1;
	else next(gt1_2_2_1) := gt1_2_2_1;
	if (((3 - p21_3_4_3) > wnt3_4_3))
		next(wnt3_4_3) := wnt3_4_3 + 1;
	else if (((3 - p21_3_4_3) < wnt3_4_3))
		next(wnt3_4_3) := wnt3_4_3 - 1;
	else next(wnt3_4_3) := wnt3_4_3;
	if ((bcat3_1_3 > gt1_3_1_3))
		next(gt1_3_1_3) := gt1_3_1_3 + 1;
	else if ((bcat3_1_3 < gt1_3_1_3))
		next(gt1_3_1_3) := gt1_3_1_3 - 1;
	else next(gt1_3_1_3) := gt1_3_1_3;
	if ((bcat2_2_0 > gt1_2_2_0))
		next(gt1_2_2_0) := gt1_2_2_0 + 1;
	else if ((bcat2_2_0 < gt1_2_2_0))
		next(gt1_2_2_0) := gt1_2_2_0 - 1;
	else next(gt1_2_2_0) := gt1_2_2_0;
	if (((3 - p21_3_4_2) > wnt3_4_2))
		next(wnt3_4_2) := wnt3_4_2 + 1;
	else if (((3 - p21_3_4_2) < wnt3_4_2))
		next(wnt3_4_2) := wnt3_4_2 - 1;
	else next(wnt3_4_2) := wnt3_4_2;
	if ((bcat3_1_1 > gt1_3_1_1))
		next(gt1_3_1_1) := gt1_3_1_1 + 1;
	else if ((bcat3_1_1 < gt1_3_1_1))
		next(gt1_3_1_1) := gt1_3_1_1 - 1;
	else next(gt1_3_1_1) := gt1_3_1_1;
	if (((3 - p21_3_4_1) > wnt3_4_1))
		next(wnt3_4_1) := wnt3_4_1 + 1;
	else if (((3 - p21_3_4_1) < wnt3_4_1))
		next(wnt3_4_1) := wnt3_4_1 - 1;
	else next(wnt3_4_1) := wnt3_4_1;
	if (((3 - p21_3_4_0) > wnt3_4_0))
		next(wnt3_4_0) := wnt3_4_0 + 1;
	else if (((3 - p21_3_4_0) < wnt3_4_0))
		next(wnt3_4_0) := wnt3_4_0 - 1;
	else next(wnt3_4_0) := wnt3_4_0;
	if ((bcat3_1_2 > gt1_3_1_2))
		next(gt1_3_1_2) := gt1_3_1_2 + 1;
	else if ((bcat3_1_2 < gt1_3_1_2))
		next(gt1_3_1_2) := gt1_3_1_2 - 1;
	else next(gt1_3_1_2) := gt1_3_1_2;
	if ((bcat2_4_1 > gt1_2_4_1))
		next(gt1_2_4_1) := gt1_2_4_1 + 1;
	else if ((bcat2_4_1 < gt1_2_4_1))
		next(gt1_2_4_1) := gt1_2_4_1 - 1;
	else next(gt1_2_4_1) := gt1_2_4_1;
	if ((bcat2_4_2 > gt1_2_4_2))
		next(gt1_2_4_2) := gt1_2_4_2 + 1;
	else if ((bcat2_4_2 < gt1_2_4_2))
		next(gt1_2_4_2) := gt1_2_4_2 - 1;
	else next(gt1_2_4_2) := gt1_2_4_2;
	if ((bcat2_4_0 > gt1_2_4_0))
		next(gt1_2_4_0) := gt1_2_4_0 + 1;
	else if ((bcat2_4_0 < gt1_2_4_0))
		next(gt1_2_4_0) := gt1_2_4_0 - 1;
	else next(gt1_2_4_0) := gt1_2_4_0;
	if ((notchic3_4_0 > p21_3_4_0))
		next(p21_3_4_0) := p21_3_4_0 + 1;
	else if ((notchic3_4_0 < p21_3_4_0))
		next(p21_3_4_0) := p21_3_4_0 - 1;
	else next(p21_3_4_0) := p21_3_4_0;
	if ((notchic3_4_2 > p21_3_4_2))
		next(p21_3_4_2) := p21_3_4_2 + 1;
	else if ((notchic3_4_2 < p21_3_4_2))
		next(p21_3_4_2) := p21_3_4_2 - 1;
	else next(p21_3_4_2) := p21_3_4_2;
	if ((notchic3_4_1 > p21_3_4_1))
		next(p21_3_4_1) := p21_3_4_1 + 1;
	else if ((notchic3_4_1 < p21_3_4_1))
		next(p21_3_4_1) := p21_3_4_1 - 1;
	else next(p21_3_4_1) := p21_3_4_1;
	if ((notchic3_4_3 > p21_3_4_3))
		next(p21_3_4_3) := p21_3_4_3 + 1;
	else if ((notchic3_4_3 < p21_3_4_3))
		next(p21_3_4_3) := p21_3_4_3 - 1;
	else next(p21_3_4_3) := p21_3_4_3;
	if ((notchic4_1_0 > gt2_4_1_0))
		next(gt2_4_1_0) := gt2_4_1_0 + 1;
	else if ((notchic4_1_0 < gt2_4_1_0))
		next(gt2_4_1_0) := gt2_4_1_0 - 1;
	else next(gt2_4_1_0) := gt2_4_1_0;
	if ((notchic4_1_1 > gt2_4_1_1))
		next(gt2_4_1_1) := gt2_4_1_1 + 1;
	else if ((notchic4_1_1 < gt2_4_1_1))
		next(gt2_4_1_1) := gt2_4_1_1 - 1;
	else next(gt2_4_1_1) := gt2_4_1_1;
	if ((notchic4_1_2 > gt2_4_1_2))
		next(gt2_4_1_2) := gt2_4_1_2 + 1;
	else if ((notchic4_1_2 < gt2_4_1_2))
		next(gt2_4_1_2) := gt2_4_1_2 - 1;
	else next(gt2_4_1_2) := gt2_4_1_2;
	if ((notchic3_2_0 > p21_3_2_0))
		next(p21_3_2_0) := p21_3_2_0 + 1;
	else if ((notchic3_2_0 < p21_3_2_0))
		next(p21_3_2_0) := p21_3_2_0 - 1;
	else next(p21_3_2_0) := p21_3_2_0;
	if ((notchic3_2_1 > p21_3_2_1))
		next(p21_3_2_1) := p21_3_2_1 + 1;
	else if ((notchic3_2_1 < p21_3_2_1))
		next(p21_3_2_1) := p21_3_2_1 - 1;
	else next(p21_3_2_1) := p21_3_2_1;
	if ((notchic3_2_2 > p21_3_2_2))
		next(p21_3_2_2) := p21_3_2_2 + 1;
	else if ((notchic3_2_2 < p21_3_2_2))
		next(p21_3_2_2) := p21_3_2_2 - 1;
	else next(p21_3_2_2) := p21_3_2_2;
	if ((notchic3_2_3 > p21_3_2_3))
		next(p21_3_2_3) := p21_3_2_3 + 1;
	else if ((notchic3_2_3 < p21_3_2_3))
		next(p21_3_2_3) := p21_3_2_3 - 1;
	else next(p21_3_2_3) := p21_3_2_3;
	if ((notchic2_0_1 > gt2_2_0_1))
		next(gt2_2_0_1) := gt2_2_0_1 + 1;
	else if ((notchic2_0_1 < gt2_2_0_1))
		next(gt2_2_0_1) := gt2_2_0_1 - 1;
	else next(gt2_2_0_1) := gt2_2_0_1;
	if ((bcat3_3_1 > gt1_3_3_1))
		next(gt1_3_3_1) := gt1_3_3_1 + 1;
	else if ((bcat3_3_1 < gt1_3_3_1))
		next(gt1_3_3_1) := gt1_3_3_1 - 1;
	else next(gt1_3_3_1) := gt1_3_3_1;
	if ((bcat3_3_2 > gt1_3_3_2))
		next(gt1_3_3_2) := gt1_3_3_2 + 1;
	else if ((bcat3_3_2 < gt1_3_3_2))
		next(gt1_3_3_2) := gt1_3_3_2 - 1;
	else next(gt1_3_3_2) := gt1_3_3_2;
	if ((notchic2_0_0 > gt2_2_0_0))
		next(gt2_2_0_0) := gt2_2_0_0 + 1;
	else if ((notchic2_0_0 < gt2_2_0_0))
		next(gt2_2_0_0) := gt2_2_0_0 - 1;
	else next(gt2_2_0_0) := gt2_2_0_0;
	if ((notchic1_1_2 > gt2_1_1_2))
		next(gt2_1_1_2) := gt2_1_1_2 + 1;
	else if ((notchic1_1_2 < gt2_1_1_2))
		next(gt2_1_1_2) := gt2_1_1_2 - 1;
	else next(gt2_1_1_2) := gt2_1_1_2;
	if ((notchic1_1_3 > gt2_1_1_3))
		next(gt2_1_1_3) := gt2_1_1_3 + 1;
	else if ((notchic1_1_3 < gt2_1_1_3))
		next(gt2_1_1_3) := gt2_1_1_3 - 1;
	else next(gt2_1_1_3) := gt2_1_1_3;
	if ((bcat3_3_0 > gt1_3_3_0))
		next(gt1_3_3_0) := gt1_3_3_0 + 1;
	else if ((bcat3_3_0 < gt1_3_3_0))
		next(gt1_3_3_0) := gt1_3_3_0 - 1;
	else next(gt1_3_3_0) := gt1_3_3_0;
	if ((wntext1_1_1 > frizzled1_1_1))
		next(frizzled1_1_1) := frizzled1_1_1 + 1;
	else if ((wntext1_1_1 < frizzled1_1_1))
		next(frizzled1_1_1) := frizzled1_1_1 - 1;
	else next(frizzled1_1_1) := frizzled1_1_1;
	if ((notchic1_1_0 > gt2_1_1_0))
		next(gt2_1_1_0) := gt2_1_1_0 + 1;
	else if ((notchic1_1_0 < gt2_1_1_0))
		next(gt2_1_1_0) := gt2_1_1_0 - 1;
	else next(gt2_1_1_0) := gt2_1_1_0;
	if (((wnt2_3_1 + wnt3_4_1 + wnt1_4_1 + wnt2_4_0 + wnt2_4_2) > (4 + (5 * wntext2_4_1))))
		next(wntext2_4_1) := wntext2_4_1 + 1;
	else if (((wnt2_3_1 + wnt3_4_1 + wnt1_4_1 + wnt2_4_0 + wnt2_4_2) < (5 * wntext2_4_1)))
		next(wntext2_4_1) := wntext2_4_1 - 1;
	else next(wntext2_4_1) := wntext2_4_1;
	if ((notchic1_1_1 > gt2_1_1_1))
		next(gt2_1_1_1) := gt2_1_1_1 + 1;
	else if ((notchic1_1_1 < gt2_1_1_1))
		next(gt2_1_1_1) := gt2_1_1_1 - 1;
	else next(gt2_1_1_1) := gt2_1_1_1;
	if (((wnt2_3_0 + wnt3_4_0 + wnt1_4_0 + wnt2_4_1) > (3 + (4 * wntext2_4_0))))
		next(wntext2_4_0) := wntext2_4_0 + 1;
	else if (((wnt2_3_0 + wnt3_4_0 + wnt1_4_0 + wnt2_4_1) < (4 * wntext2_4_0)))
		next(wntext2_4_0) := wntext2_4_0 - 1;
	else next(wntext2_4_0) := wntext2_4_0;
	if ((wntext1_1_0 > frizzled1_1_0))
		next(frizzled1_1_0) := frizzled1_1_0 + 1;
	else if ((wntext1_1_0 < frizzled1_1_0))
		next(frizzled1_1_0) := frizzled1_1_0 - 1;
	else next(frizzled1_1_0) := frizzled1_1_0;
	if (((wnt2_3_3 + wnt3_4_3 + wnt1_4_3 + wnt2_4_2) > (3 + (4 * wntext2_4_3))))
		next(wntext2_4_3) := wntext2_4_3 + 1;
	else if (((wnt2_3_3 + wnt3_4_3 + wnt1_4_3 + wnt2_4_2) < (4 * wntext2_4_3)))
		next(wntext2_4_3) := wntext2_4_3 - 1;
	else next(wntext2_4_3) := wntext2_4_3;
	if ((notchic2_0_3 > gt2_2_0_3))
		next(gt2_2_0_3) := gt2_2_0_3 + 1;
	else if ((notchic2_0_3 < gt2_2_0_3))
		next(gt2_2_0_3) := gt2_2_0_3 - 1;
	else next(gt2_2_0_3) := gt2_2_0_3;
	if (((3 > notchic3_4_0) & (deltaext3_4_0 > notchic3_4_0)))
		next(notchic3_4_0) := notchic3_4_0 + 1;
	else if (((3 < notchic3_4_0) | (deltaext3_4_0 < notchic3_4_0)))
		next(notchic3_4_0) := notchic3_4_0 - 1;
	else next(notchic3_4_0) := notchic3_4_0;
	if (((wnt2_3_2 + wnt3_4_2 + wnt1_4_2 + wnt2_4_1 + wnt2_4_3) > (4 + (5 * wntext2_4_2))))
		next(wntext2_4_2) := wntext2_4_2 + 1;
	else if (((wnt2_3_2 + wnt3_4_2 + wnt1_4_2 + wnt2_4_1 + wnt2_4_3) < (5 * wntext2_4_2)))
		next(wntext2_4_2) := wntext2_4_2 - 1;
	else next(wntext2_4_2) := wntext2_4_2;
	if ((notchic2_0_2 > gt2_2_0_2))
		next(gt2_2_0_2) := gt2_2_0_2 + 1;
	else if ((notchic2_0_2 < gt2_2_0_2))
		next(gt2_2_0_2) := gt2_2_0_2 - 1;
	else next(gt2_2_0_2) := gt2_2_0_2;
	if (((3 > notchic3_4_2) & (deltaext3_4_2 > notchic3_4_2)))
		next(notchic3_4_2) := notchic3_4_2 + 1;
	else if (((3 < notchic3_4_2) | (deltaext3_4_2 < notchic3_4_2)))
		next(notchic3_4_2) := notchic3_4_2 - 1;
	else next(notchic3_4_2) := notchic3_4_2;
	if ((notchic3_0_2 > gt2_3_0_2))
		next(gt2_3_0_2) := gt2_3_0_2 + 1;
	else if ((notchic3_0_2 < gt2_3_0_2))
		next(gt2_3_0_2) := gt2_3_0_2 - 1;
	else next(gt2_3_0_2) := gt2_3_0_2;
	if ((notchic3_0_1 > gt2_3_0_1))
		next(gt2_3_0_1) := gt2_3_0_1 + 1;
	else if ((notchic3_0_1 < gt2_3_0_1))
		next(gt2_3_0_1) := gt2_3_0_1 - 1;
	else next(gt2_3_0_1) := gt2_3_0_1;
	if (((3 > notchic3_4_1) & (deltaext3_4_1 > notchic3_4_1)))
		next(notchic3_4_1) := notchic3_4_1 + 1;
	else if (((3 < notchic3_4_1) | (deltaext3_4_1 < notchic3_4_1)))
		next(notchic3_4_1) := notchic3_4_1 - 1;
	else next(notchic3_4_1) := notchic3_4_1;
	if ((wntext1_1_3 > frizzled1_1_3))
		next(frizzled1_1_3) := frizzled1_1_3 + 1;
	else if ((wntext1_1_3 < frizzled1_1_3))
		next(frizzled1_1_3) := frizzled1_1_3 - 1;
	else next(frizzled1_1_3) := frizzled1_1_3;
	if (((3 > notchic3_4_3) & (deltaext3_4_3 > notchic3_4_3)))
		next(notchic3_4_3) := notchic3_4_3 + 1;
	else if (((3 < notchic3_4_3) | (deltaext3_4_3 < notchic3_4_3)))
		next(notchic3_4_3) := notchic3_4_3 - 1;
	else next(notchic3_4_3) := notchic3_4_3;
	if ((notchic3_0_3 > gt2_3_0_3))
		next(gt2_3_0_3) := gt2_3_0_3 + 1;
	else if ((notchic3_0_3 < gt2_3_0_3))
		next(gt2_3_0_3) := gt2_3_0_3 - 1;
	else next(gt2_3_0_3) := gt2_3_0_3;
	if ((wntext1_1_2 > frizzled1_1_2))
		next(frizzled1_1_2) := frizzled1_1_2 + 1;
	else if ((wntext1_1_2 < frizzled1_1_2))
		next(frizzled1_1_2) := frizzled1_1_2 - 1;
	else next(frizzled1_1_2) := frizzled1_1_2;
	if ((notchic3_0_0 > gt2_3_0_0))
		next(gt2_3_0_0) := gt2_3_0_0 + 1;
	else if ((notchic3_0_0 < gt2_3_0_0))
		next(gt2_3_0_0) := gt2_3_0_0 - 1;
	else next(gt2_3_0_0) := gt2_3_0_0;
	if (((3 - p21_2_2_3) > wnt2_2_3))
		next(wnt2_2_3) := wnt2_2_3 + 1;
	else if (((3 - p21_2_2_3) < wnt2_2_3))
		next(wnt2_2_3) := wnt2_2_3 - 1;
	else next(wnt2_2_3) := wnt2_2_3;
	if ((notchic3_2_0 > gt2_3_2_0))
		next(gt2_3_2_0) := gt2_3_2_0 + 1;
	else if ((notchic3_2_0 < gt2_3_2_0))
		next(gt2_3_2_0) := gt2_3_2_0 - 1;
	else next(gt2_3_2_0) := gt2_3_2_0;
	if (((3 - p21_2_0_0) > wnt2_0_0))
		next(wnt2_0_0) := wnt2_0_0 + 1;
	else if (((3 - p21_2_0_0) < wnt2_0_0))
		next(wnt2_0_0) := wnt2_0_0 - 1;
	else next(wnt2_0_0) := wnt2_0_0;
	if ((notchic3_2_1 > gt2_3_2_1))
		next(gt2_3_2_1) := gt2_3_2_1 + 1;
	else if ((notchic3_2_1 < gt2_3_2_1))
		next(gt2_3_2_1) := gt2_3_2_1 - 1;
	else next(gt2_3_2_1) := gt2_3_2_1;
	if ((notchic4_1_3 > gt2_4_1_3))
		next(gt2_4_1_3) := gt2_4_1_3 + 1;
	else if ((notchic4_1_3 < gt2_4_1_3))
		next(gt2_4_1_3) := gt2_4_1_3 - 1;
	else next(gt2_4_1_3) := gt2_4_1_3;
	if ((notchic3_2_2 > gt2_3_2_2))
		next(gt2_3_2_2) := gt2_3_2_2 + 1;
	else if ((notchic3_2_2 < gt2_3_2_2))
		next(gt2_3_2_2) := gt2_3_2_2 - 1;
	else next(gt2_3_2_2) := gt2_3_2_2;
	if (((3 - dsh0_0_1) > axin0_0_1))
		next(axin0_0_1) := axin0_0_1 + 1;
	else if ((((3 - dsh0_0_1) < axin0_0_1) & (axin0_0_1 > 0)))
		next(axin0_0_1) := axin0_0_1 - 1;
	else next(axin0_0_1) := axin0_0_1;
	if (((3 - p21_2_2_0) > wnt2_2_0))
		next(wnt2_2_0) := wnt2_2_0 + 1;
	else if (((3 - p21_2_2_0) < wnt2_2_0))
		next(wnt2_2_0) := wnt2_2_0 - 1;
	else next(wnt2_2_0) := wnt2_2_0;
	if (((3 - dsh0_0_0) > axin0_0_0))
		next(axin0_0_0) := axin0_0_0 + 1;
	else if ((((3 - dsh0_0_0) < axin0_0_0) & (axin0_0_0 > 0)))
		next(axin0_0_0) := axin0_0_0 - 1;
	else next(axin0_0_0) := axin0_0_0;
	if (((3 - p21_2_2_2) > wnt2_2_2))
		next(wnt2_2_2) := wnt2_2_2 + 1;
	else if (((3 - p21_2_2_2) < wnt2_2_2))
		next(wnt2_2_2) := wnt2_2_2 - 1;
	else next(wnt2_2_2) := wnt2_2_2;
	if (((3 - p21_2_2_1) > wnt2_2_1))
		next(wnt2_2_1) := wnt2_2_1 + 1;
	else if (((3 - p21_2_2_1) < wnt2_2_1))
		next(wnt2_2_1) := wnt2_2_1 - 1;
	else next(wnt2_2_1) := wnt2_2_1;
	if ((notchic1_3_3 > gt2_1_3_3))
		next(gt2_1_3_3) := gt2_1_3_3 + 1;
	else if ((notchic1_3_3 < gt2_1_3_3))
		next(gt2_1_3_3) := gt2_1_3_3 - 1;
	else next(gt2_1_3_3) := gt2_1_3_3;
	if ((notchic1_3_2 > gt2_1_3_2))
		next(gt2_1_3_2) := gt2_1_3_2 + 1;
	else if ((notchic1_3_2 < gt2_1_3_2))
		next(gt2_1_3_2) := gt2_1_3_2 - 1;
	else next(gt2_1_3_2) := gt2_1_3_2;
	if (((3 - dsh0_0_3) > axin0_0_3))
		next(axin0_0_3) := axin0_0_3 + 1;
	else if ((((3 - dsh0_0_3) < axin0_0_3) & (axin0_0_3 > 0)))
		next(axin0_0_3) := axin0_0_3 - 1;
	else next(axin0_0_3) := axin0_0_3;
	if ((notchic1_3_1 > gt2_1_3_1))
		next(gt2_1_3_1) := gt2_1_3_1 + 1;
	else if ((notchic1_3_1 < gt2_1_3_1))
		next(gt2_1_3_1) := gt2_1_3_1 - 1;
	else next(gt2_1_3_1) := gt2_1_3_1;
	if ((notchic1_3_0 > gt2_1_3_0))
		next(gt2_1_3_0) := gt2_1_3_0 + 1;
	else if ((notchic1_3_0 < gt2_1_3_0))
		next(gt2_1_3_0) := gt2_1_3_0 - 1;
	else next(gt2_1_3_0) := gt2_1_3_0;
	if (((3 - dsh0_0_2) > axin0_0_2))
		next(axin0_0_2) := axin0_0_2 + 1;
	else if ((((3 - dsh0_0_2) < axin0_0_2) & (axin0_0_2 > 0)))
		next(axin0_0_2) := axin0_0_2 - 1;
	else next(axin0_0_2) := axin0_0_2;
	if (((3 - p21_2_0_2) > wnt2_0_2))
		next(wnt2_0_2) := wnt2_0_2 + 1;
	else if (((3 - p21_2_0_2) < wnt2_0_2))
		next(wnt2_0_2) := wnt2_0_2 - 1;
	else next(wnt2_0_2) := wnt2_0_2;
	if (((3 - p21_2_0_1) > wnt2_0_1))
		next(wnt2_0_1) := wnt2_0_1 + 1;
	else if (((3 - p21_2_0_1) < wnt2_0_1))
		next(wnt2_0_1) := wnt2_0_1 - 1;
	else next(wnt2_0_1) := wnt2_0_1;
	if (((3 - p21_2_0_3) > wnt2_0_3))
		next(wnt2_0_3) := wnt2_0_3 + 1;
	else if (((3 - p21_2_0_3) < wnt2_0_3))
		next(wnt2_0_3) := wnt2_0_3 - 1;
	else next(wnt2_0_3) := wnt2_0_3;
	if ((notchic2_2_0 > p21_2_2_0))
		next(p21_2_2_0) := p21_2_2_0 + 1;
	else if ((notchic2_2_0 < p21_2_2_0))
		next(p21_2_2_0) := p21_2_2_0 - 1;
	else next(p21_2_2_0) := p21_2_2_0;
	if ((notchic2_2_1 > p21_2_2_1))
		next(p21_2_2_1) := p21_2_2_1 + 1;
	else if ((notchic2_2_1 < p21_2_2_1))
		next(p21_2_2_1) := p21_2_2_1 - 1;
	else next(p21_2_2_1) := p21_2_2_1;
	if ((notchic2_2_2 > p21_2_2_2))
		next(p21_2_2_2) := p21_2_2_2 + 1;
	else if ((notchic2_2_2 < p21_2_2_2))
		next(p21_2_2_2) := p21_2_2_2 - 1;
	else next(p21_2_2_2) := p21_2_2_2;
	if ((bcat2_4_3 > gt1_2_4_3))
		next(gt1_2_4_3) := gt1_2_4_3 + 1;
	else if ((bcat2_4_3 < gt1_2_4_3))
		next(gt1_2_4_3) := gt1_2_4_3 - 1;
	else next(gt1_2_4_3) := gt1_2_4_3;
	if ((notchic2_2_3 > p21_2_2_3))
		next(p21_2_2_3) := p21_2_2_3 + 1;
	else if ((notchic2_2_3 < p21_2_2_3))
		next(p21_2_2_3) := p21_2_2_3 - 1;
	else next(p21_2_2_3) := p21_2_2_3;
	if (((3 > notchic3_0_0) & (deltaext3_0_0 > notchic3_0_0)))
		next(notchic3_0_0) := notchic3_0_0 + 1;
	else if (((3 < notchic3_0_0) | (deltaext3_0_0 < notchic3_0_0)))
		next(notchic3_0_0) := notchic3_0_0 - 1;
	else next(notchic3_0_0) := notchic3_0_0;
	if (((3 > notchic3_0_3) & (deltaext3_0_3 > notchic3_0_3)))
		next(notchic3_0_3) := notchic3_0_3 + 1;
	else if (((3 < notchic3_0_3) | (deltaext3_0_3 < notchic3_0_3)))
		next(notchic3_0_3) := notchic3_0_3 - 1;
	else next(notchic3_0_3) := notchic3_0_3;
	if (((3 > notchic3_0_1) & (deltaext3_0_1 > notchic3_0_1)))
		next(notchic3_0_1) := notchic3_0_1 + 1;
	else if (((3 < notchic3_0_1) | (deltaext3_0_1 < notchic3_0_1)))
		next(notchic3_0_1) := notchic3_0_1 - 1;
	else next(notchic3_0_1) := notchic3_0_1;
	if (((3 > notchic3_0_2) & (deltaext3_0_2 > notchic3_0_2)))
		next(notchic3_0_2) := notchic3_0_2 + 1;
	else if (((3 < notchic3_0_2) | (deltaext3_0_2 < notchic3_0_2)))
		next(notchic3_0_2) := notchic3_0_2 - 1;
	else next(notchic3_0_2) := notchic3_0_2;
	if ((notchic4_3_2 > gt2_4_3_2))
		next(gt2_4_3_2) := gt2_4_3_2 + 1;
	else if ((notchic4_3_2 < gt2_4_3_2))
		next(gt2_4_3_2) := gt2_4_3_2 - 1;
	else next(gt2_4_3_2) := gt2_4_3_2;
	if ((notchic4_3_1 > gt2_4_3_1))
		next(gt2_4_3_1) := gt2_4_3_1 + 1;
	else if ((notchic4_3_1 < gt2_4_3_1))
		next(gt2_4_3_1) := gt2_4_3_1 - 1;
	else next(gt2_4_3_1) := gt2_4_3_1;
	if ((notchic4_3_3 > gt2_4_3_3))
		next(gt2_4_3_3) := gt2_4_3_3 + 1;
	else if ((notchic4_3_3 < gt2_4_3_3))
		next(gt2_4_3_3) := gt2_4_3_3 - 1;
	else next(gt2_4_3_3) := gt2_4_3_3;
	if ((notchic2_0_1 > p21_2_0_1))
		next(p21_2_0_1) := p21_2_0_1 + 1;
	else if ((notchic2_0_1 < p21_2_0_1))
		next(p21_2_0_1) := p21_2_0_1 - 1;
	else next(p21_2_0_1) := p21_2_0_1;
	if ((notchic2_0_0 > p21_2_0_0))
		next(p21_2_0_0) := p21_2_0_0 + 1;
	else if ((notchic2_0_0 < p21_2_0_0))
		next(p21_2_0_0) := p21_2_0_0 - 1;
	else next(p21_2_0_0) := p21_2_0_0;
	if ((notchic2_0_3 > p21_2_0_3))
		next(p21_2_0_3) := p21_2_0_3 + 1;
	else if ((notchic2_0_3 < p21_2_0_3))
		next(p21_2_0_3) := p21_2_0_3 - 1;
	else next(p21_2_0_3) := p21_2_0_3;
	if ((notchic2_0_2 > p21_2_0_2))
		next(p21_2_0_2) := p21_2_0_2 + 1;
	else if ((notchic2_0_2 < p21_2_0_2))
		next(p21_2_0_2) := p21_2_0_2 - 1;
	else next(p21_2_0_2) := p21_2_0_2;
	if (((3 - p21_4_3_3) > wnt4_3_3))
		next(wnt4_3_3) := wnt4_3_3 + 1;
	else if (((3 - p21_4_3_3) < wnt4_3_3))
		next(wnt4_3_3) := wnt4_3_3 - 1;
	else next(wnt4_3_3) := wnt4_3_3;
	if (((gt1_4_1_1 + gt2_4_1_1) > (2 * delta4_1_1)))
		next(delta4_1_1) := delta4_1_1 + 1;
	else if (((gt1_4_1_1 + gt2_4_1_1) < ((2 * delta4_1_1) - 1)))
		next(delta4_1_1) := delta4_1_1 - 1;
	else next(delta4_1_1) := delta4_1_1;
	if (((3 - p21_4_3_2) > wnt4_3_2))
		next(wnt4_3_2) := wnt4_3_2 + 1;
	else if (((3 - p21_4_3_2) < wnt4_3_2))
		next(wnt4_3_2) := wnt4_3_2 - 1;
	else next(wnt4_3_2) := wnt4_3_2;
	if (((gt1_4_1_2 + gt2_4_1_2) > (2 * delta4_1_2)))
		next(delta4_1_2) := delta4_1_2 + 1;
	else if (((gt1_4_1_2 + gt2_4_1_2) < ((2 * delta4_1_2) - 1)))
		next(delta4_1_2) := delta4_1_2 - 1;
	else next(delta4_1_2) := delta4_1_2;
	if (((gt1_4_1_3 + gt2_4_1_3) > (2 * delta4_1_3)))
		next(delta4_1_3) := delta4_1_3 + 1;
	else if (((gt1_4_1_3 + gt2_4_1_3) < ((2 * delta4_1_3) - 1)))
		next(delta4_1_3) := delta4_1_3 - 1;
	else next(delta4_1_3) := delta4_1_3;
	if (((3 - p21_4_3_1) > wnt4_3_1))
		next(wnt4_3_1) := wnt4_3_1 + 1;
	else if (((3 - p21_4_3_1) < wnt4_3_1))
		next(wnt4_3_1) := wnt4_3_1 - 1;
	else next(wnt4_3_1) := wnt4_3_1;
	if (((3 - p21_4_3_0) > wnt4_3_0))
		next(wnt4_3_0) := wnt4_3_0 + 1;
	else if (((3 - p21_4_3_0) < wnt4_3_0))
		next(wnt4_3_0) := wnt4_3_0 - 1;
	else next(wnt4_3_0) := wnt4_3_0;
	if ((bcat1_0_0 > gt1_1_0_0))
		next(gt1_1_0_0) := gt1_1_0_0 + 1;
	else if ((bcat1_0_0 < gt1_1_0_0))
		next(gt1_1_0_0) := gt1_1_0_0 - 1;
	else next(gt1_1_0_0) := gt1_1_0_0;
	if ((notchic0_0_0 > p21_0_0_0))
		next(p21_0_0_0) := p21_0_0_0 + 1;
	else if ((notchic0_0_0 < p21_0_0_0))
		next(p21_0_0_0) := p21_0_0_0 - 1;
	else next(p21_0_0_0) := p21_0_0_0;
	if ((bcat1_0_1 > gt1_1_0_1))
		next(gt1_1_0_1) := gt1_1_0_1 + 1;
	else if ((bcat1_0_1 < gt1_1_0_1))
		next(gt1_1_0_1) := gt1_1_0_1 - 1;
	else next(gt1_1_0_1) := gt1_1_0_1;
	if ((notchic0_0_1 > p21_0_0_1))
		next(p21_0_0_1) := p21_0_0_1 + 1;
	else if ((notchic0_0_1 < p21_0_0_1))
		next(p21_0_0_1) := p21_0_0_1 - 1;
	else next(p21_0_0_1) := p21_0_0_1;
	if ((notchic0_1_0 > gt2_0_1_0))
		next(gt2_0_1_0) := gt2_0_1_0 + 1;
	else if ((notchic0_1_0 < gt2_0_1_0))
		next(gt2_0_1_0) := gt2_0_1_0 - 1;
	else next(gt2_0_1_0) := gt2_0_1_0;
	if ((notchic0_1_1 > gt2_0_1_1))
		next(gt2_0_1_1) := gt2_0_1_1 + 1;
	else if ((notchic0_1_1 < gt2_0_1_1))
		next(gt2_0_1_1) := gt2_0_1_1 - 1;
	else next(gt2_0_1_1) := gt2_0_1_1;
	if ((bcat1_0_2 > gt1_1_0_2))
		next(gt1_1_0_2) := gt1_1_0_2 + 1;
	else if ((bcat1_0_2 < gt1_1_0_2))
		next(gt1_1_0_2) := gt1_1_0_2 - 1;
	else next(gt1_1_0_2) := gt1_1_0_2;
	if ((bcat1_0_3 > gt1_1_0_3))
		next(gt1_1_0_3) := gt1_1_0_3 + 1;
	else if ((bcat1_0_3 < gt1_1_0_3))
		next(gt1_1_0_3) := gt1_1_0_3 - 1;
	else next(gt1_1_0_3) := gt1_1_0_3;
	if ((notchic0_1_2 > gt2_0_1_2))
		next(gt2_0_1_2) := gt2_0_1_2 + 1;
	else if ((notchic0_1_2 < gt2_0_1_2))
		next(gt2_0_1_2) := gt2_0_1_2 - 1;
	else next(gt2_0_1_2) := gt2_0_1_2;
	if ((notchic0_1_3 > gt2_0_1_3))
		next(gt2_0_1_3) := gt2_0_1_3 + 1;
	else if ((notchic0_1_3 < gt2_0_1_3))
		next(gt2_0_1_3) := gt2_0_1_3 - 1;
	else next(gt2_0_1_3) := gt2_0_1_3;
	if ((notchic0_0_2 > p21_0_0_2))
		next(p21_0_0_2) := p21_0_0_2 + 1;
	else if ((notchic0_0_2 < p21_0_0_2))
		next(p21_0_0_2) := p21_0_0_2 - 1;
	else next(p21_0_0_2) := p21_0_0_2;
	if ((notchic0_0_3 > p21_0_0_3))
		next(p21_0_0_3) := p21_0_0_3 + 1;
	else if ((notchic0_0_3 < p21_0_0_3))
		next(p21_0_0_3) := p21_0_0_3 - 1;
	else next(p21_0_0_3) := p21_0_0_3;
	if ((bcat1_2_1 > gt1_1_2_1))
		next(gt1_1_2_1) := gt1_1_2_1 + 1;
	else if ((bcat1_2_1 < gt1_1_2_1))
		next(gt1_1_2_1) := gt1_1_2_1 - 1;
	else next(gt1_1_2_1) := gt1_1_2_1;
	if ((bcat1_2_0 > gt1_1_2_0))
		next(gt1_1_2_0) := gt1_1_2_0 + 1;
	else if ((bcat1_2_0 < gt1_1_2_0))
		next(gt1_1_2_0) := gt1_1_2_0 - 1;
	else next(gt1_1_2_0) := gt1_1_2_0;
	if ((bcat1_2_3 > gt1_1_2_3))
		next(gt1_1_2_3) := gt1_1_2_3 + 1;
	else if ((bcat1_2_3 < gt1_1_2_3))
		next(gt1_1_2_3) := gt1_1_2_3 - 1;
	else next(gt1_1_2_3) := gt1_1_2_3;
	if ((notchic0_2_3 > p21_0_2_3))
		next(p21_0_2_3) := p21_0_2_3 + 1;
	else if ((notchic0_2_3 < p21_0_2_3))
		next(p21_0_2_3) := p21_0_2_3 - 1;
	else next(p21_0_2_3) := p21_0_2_3;
	if ((notchic0_2_2 > p21_0_2_2))
		next(p21_0_2_2) := p21_0_2_2 + 1;
	else if ((notchic0_2_2 < p21_0_2_2))
		next(p21_0_2_2) := p21_0_2_2 - 1;
	else next(p21_0_2_2) := p21_0_2_2;
	if ((bcat1_2_2 > gt1_1_2_2))
		next(gt1_1_2_2) := gt1_1_2_2 + 1;
	else if ((bcat1_2_2 < gt1_1_2_2))
		next(gt1_1_2_2) := gt1_1_2_2 - 1;
	else next(gt1_1_2_2) := gt1_1_2_2;
	if ((notchic0_2_1 > p21_0_2_1))
		next(p21_0_2_1) := p21_0_2_1 + 1;
	else if ((notchic0_2_1 < p21_0_2_1))
		next(p21_0_2_1) := p21_0_2_1 - 1;
	else next(p21_0_2_1) := p21_0_2_1;
	if ((notchic0_2_0 > p21_0_2_0))
		next(p21_0_2_0) := p21_0_2_0 + 1;
	else if ((notchic0_2_0 < p21_0_2_0))
		next(p21_0_2_0) := p21_0_2_0 - 1;
	else next(p21_0_2_0) := p21_0_2_0;
	if (((gt1_3_4_3 + gt2_3_4_3) > (2 * delta3_4_3)))
		next(delta3_4_3) := delta3_4_3 + 1;
	else if (((gt1_3_4_3 + gt2_3_4_3) < ((2 * delta3_4_3) - 1)))
		next(delta3_4_3) := delta3_4_3 - 1;
	else next(delta3_4_3) := delta3_4_3;
	if (((3 > notchic2_0_1) & (deltaext2_0_1 > notchic2_0_1)))
		next(notchic2_0_1) := notchic2_0_1 + 1;
	else if (((3 < notchic2_0_1) | (deltaext2_0_1 < notchic2_0_1)))
		next(notchic2_0_1) := notchic2_0_1 - 1;
	else next(notchic2_0_1) := notchic2_0_1;
	if (((3 - p21_4_1_2) > wnt4_1_2))
		next(wnt4_1_2) := wnt4_1_2 + 1;
	else if (((3 - p21_4_1_2) < wnt4_1_2))
		next(wnt4_1_2) := wnt4_1_2 - 1;
	else next(wnt4_1_2) := wnt4_1_2;
	if (((3 - p21_4_1_3) > wnt4_1_3))
		next(wnt4_1_3) := wnt4_1_3 + 1;
	else if (((3 - p21_4_1_3) < wnt4_1_3))
		next(wnt4_1_3) := wnt4_1_3 - 1;
	else next(wnt4_1_3) := wnt4_1_3;
	if (((3 > notchic2_0_0) & (deltaext2_0_0 > notchic2_0_0)))
		next(notchic2_0_0) := notchic2_0_0 + 1;
	else if (((3 < notchic2_0_0) | (deltaext2_0_0 < notchic2_0_0)))
		next(notchic2_0_0) := notchic2_0_0 - 1;
	else next(notchic2_0_0) := notchic2_0_0;
	if (((3 > notchic2_0_3) & (deltaext2_0_3 > notchic2_0_3)))
		next(notchic2_0_3) := notchic2_0_3 + 1;
	else if (((3 < notchic2_0_3) | (deltaext2_0_3 < notchic2_0_3)))
		next(notchic2_0_3) := notchic2_0_3 - 1;
	else next(notchic2_0_3) := notchic2_0_3;
	if (((3 - p21_4_1_0) > wnt4_1_0))
		next(wnt4_1_0) := wnt4_1_0 + 1;
	else if (((3 - p21_4_1_0) < wnt4_1_0))
		next(wnt4_1_0) := wnt4_1_0 - 1;
	else next(wnt4_1_0) := wnt4_1_0;
	if (((gt1_3_4_0 + gt2_3_4_0) > (2 * delta3_4_0)))
		next(delta3_4_0) := delta3_4_0 + 1;
	else if (((gt1_3_4_0 + gt2_3_4_0) < ((2 * delta3_4_0) - 1)))
		next(delta3_4_0) := delta3_4_0 - 1;
	else next(delta3_4_0) := delta3_4_0;
	if (((3 - p21_4_1_1) > wnt4_1_1))
		next(wnt4_1_1) := wnt4_1_1 + 1;
	else if (((3 - p21_4_1_1) < wnt4_1_1))
		next(wnt4_1_1) := wnt4_1_1 - 1;
	else next(wnt4_1_1) := wnt4_1_1;
	if (((3 > notchic2_0_2) & (deltaext2_0_2 > notchic2_0_2)))
		next(notchic2_0_2) := notchic2_0_2 + 1;
	else if (((3 < notchic2_0_2) | (deltaext2_0_2 < notchic2_0_2)))
		next(notchic2_0_2) := notchic2_0_2 - 1;
	else next(notchic2_0_2) := notchic2_0_2;
	if (((gt1_3_4_1 + gt2_3_4_1) > (2 * delta3_4_1)))
		next(delta3_4_1) := delta3_4_1 + 1;
	else if (((gt1_3_4_1 + gt2_3_4_1) < ((2 * delta3_4_1) - 1)))
		next(delta3_4_1) := delta3_4_1 - 1;
	else next(delta3_4_1) := delta3_4_1;
	if (((gt1_3_4_2 + gt2_3_4_2) > (2 * delta3_4_2)))
		next(delta3_4_2) := delta3_4_2 + 1;
	else if (((gt1_3_4_2 + gt2_3_4_2) < ((2 * delta3_4_2) - 1)))
		next(delta3_4_2) := delta3_4_2 - 1;
	else next(delta3_4_2) := delta3_4_2;
	if ((notchic0_3_0 > gt2_0_3_0))
		next(gt2_0_3_0) := gt2_0_3_0 + 1;
	else if ((notchic0_3_0 < gt2_0_3_0))
		next(gt2_0_3_0) := gt2_0_3_0 - 1;
	else next(gt2_0_3_0) := gt2_0_3_0;
	if ((notchic3_2_3 > gt2_3_2_3))
		next(gt2_3_2_3) := gt2_3_2_3 + 1;
	else if ((notchic3_2_3 < gt2_3_2_3))
		next(gt2_3_2_3) := gt2_3_2_3 - 1;
	else next(gt2_3_2_3) := gt2_3_2_3;
	if ((notchic0_3_3 > gt2_0_3_3))
		next(gt2_0_3_3) := gt2_0_3_3 + 1;
	else if ((notchic0_3_3 < gt2_0_3_3))
		next(gt2_0_3_3) := gt2_0_3_3 - 1;
	else next(gt2_0_3_3) := gt2_0_3_3;
	if ((notchic0_3_1 > gt2_0_3_1))
		next(gt2_0_3_1) := gt2_0_3_1 + 1;
	else if ((notchic0_3_1 < gt2_0_3_1))
		next(gt2_0_3_1) := gt2_0_3_1 - 1;
	else next(gt2_0_3_1) := gt2_0_3_1;
	if ((notchic0_3_2 > gt2_0_3_2))
		next(gt2_0_3_2) := gt2_0_3_2 + 1;
	else if ((notchic0_3_2 < gt2_0_3_2))
		next(gt2_0_3_2) := gt2_0_3_2 - 1;
	else next(gt2_0_3_2) := gt2_0_3_2;
	if (((3 - dsh3_4_3) > axin3_4_3))
		next(axin3_4_3) := axin3_4_3 + 1;
	else if ((((3 - dsh3_4_3) < axin3_4_3) & (axin3_4_3 > 0)))
		next(axin3_4_3) := axin3_4_3 - 1;
	else next(axin3_4_3) := axin3_4_3;
	if ((notchic0_4_3 > p21_0_4_3))
		next(p21_0_4_3) := p21_0_4_3 + 1;
	else if ((notchic0_4_3 < p21_0_4_3))
		next(p21_0_4_3) := p21_0_4_3 - 1;
	else next(p21_0_4_3) := p21_0_4_3;
	if ((notchic0_4_2 > p21_0_4_2))
		next(p21_0_4_2) := p21_0_4_2 + 1;
	else if ((notchic0_4_2 < p21_0_4_2))
		next(p21_0_4_2) := p21_0_4_2 - 1;
	else next(p21_0_4_2) := p21_0_4_2;
	if (((2 > notchic1_3_1) & (deltaext1_3_1 > notchic1_3_1)))
		next(notchic1_3_1) := notchic1_3_1 + 1;
	else if (((2 < notchic1_3_1) | (deltaext1_3_1 < notchic1_3_1)))
		next(notchic1_3_1) := notchic1_3_1 - 1;
	else next(notchic1_3_1) := notchic1_3_1;
	if (((2 > notchic1_3_0) & (deltaext1_3_0 > notchic1_3_0)))
		next(notchic1_3_0) := notchic1_3_0 + 1;
	else if (((2 < notchic1_3_0) | (deltaext1_3_0 < notchic1_3_0)))
		next(notchic1_3_0) := notchic1_3_0 - 1;
	else next(notchic1_3_0) := notchic1_3_0;
	if (((2 > notchic1_3_3) & (deltaext1_3_3 > notchic1_3_3)))
		next(notchic1_3_3) := notchic1_3_3 + 1;
	else if (((2 < notchic1_3_3) | (deltaext1_3_3 < notchic1_3_3)))
		next(notchic1_3_3) := notchic1_3_3 - 1;
	else next(notchic1_3_3) := notchic1_3_3;
	if (((2 > notchic1_3_2) & (deltaext1_3_2 > notchic1_3_2)))
		next(notchic1_3_2) := notchic1_3_2 + 1;
	else if (((2 < notchic1_3_2) | (deltaext1_3_2 < notchic1_3_2)))
		next(notchic1_3_2) := notchic1_3_2 - 1;
	else next(notchic1_3_2) := notchic1_3_2;
	if (((gt1_0_0_2 + gt2_0_0_2) > (2 * delta0_0_2)))
		next(delta0_0_2) := delta0_0_2 + 1;
	else if (((gt1_0_0_2 + gt2_0_0_2) < ((2 * delta0_0_2) - 1)))
		next(delta0_0_2) := delta0_0_2 - 1;
	else next(delta0_0_2) := delta0_0_2;
	if (((gt1_0_0_3 + gt2_0_0_3) > (2 * delta0_0_3)))
		next(delta0_0_3) := delta0_0_3 + 1;
	else if (((gt1_0_0_3 + gt2_0_0_3) < ((2 * delta0_0_3) - 1)))
		next(delta0_0_3) := delta0_0_3 - 1;
	else next(delta0_0_3) := delta0_0_3;
	if ((bcat1_4_3 > gt1_1_4_3))
		next(gt1_1_4_3) := gt1_1_4_3 + 1;
	else if ((bcat1_4_3 < gt1_1_4_3))
		next(gt1_1_4_3) := gt1_1_4_3 - 1;
	else next(gt1_1_4_3) := gt1_1_4_3;
	if (((gt1_4_1_0 + gt2_4_1_0) > (2 * delta4_1_0)))
		next(delta4_1_0) := delta4_1_0 + 1;
	else if (((gt1_4_1_0 + gt2_4_1_0) < ((2 * delta4_1_0) - 1)))
		next(delta4_1_0) := delta4_1_0 - 1;
	else next(delta4_1_0) := delta4_1_0;
	if ((bcat1_4_2 > gt1_1_4_2))
		next(gt1_1_4_2) := gt1_1_4_2 + 1;
	else if ((bcat1_4_2 < gt1_1_4_2))
		next(gt1_1_4_2) := gt1_1_4_2 - 1;
	else next(gt1_1_4_2) := gt1_1_4_2;
	if (((gt1_0_0_0 + gt2_0_0_0) > (2 * delta0_0_0)))
		next(delta0_0_0) := delta0_0_0 + 1;
	else if (((gt1_0_0_0 + gt2_0_0_0) < ((2 * delta0_0_0) - 1)))
		next(delta0_0_0) := delta0_0_0 - 1;
	else next(delta0_0_0) := delta0_0_0;
	if ((notchic0_4_1 > p21_0_4_1))
		next(p21_0_4_1) := p21_0_4_1 + 1;
	else if ((notchic0_4_1 < p21_0_4_1))
		next(p21_0_4_1) := p21_0_4_1 - 1;
	else next(p21_0_4_1) := p21_0_4_1;
	if ((bcat1_4_1 > gt1_1_4_1))
		next(gt1_1_4_1) := gt1_1_4_1 + 1;
	else if ((bcat1_4_1 < gt1_1_4_1))
		next(gt1_1_4_1) := gt1_1_4_1 - 1;
	else next(gt1_1_4_1) := gt1_1_4_1;
	if (((gt1_0_0_1 + gt2_0_0_1) > (2 * delta0_0_1)))
		next(delta0_0_1) := delta0_0_1 + 1;
	else if (((gt1_0_0_1 + gt2_0_0_1) < ((2 * delta0_0_1) - 1)))
		next(delta0_0_1) := delta0_0_1 - 1;
	else next(delta0_0_1) := delta0_0_1;
	if ((bcat1_4_0 > gt1_1_4_0))
		next(gt1_1_4_0) := gt1_1_4_0 + 1;
	else if ((bcat1_4_0 < gt1_1_4_0))
		next(gt1_1_4_0) := gt1_1_4_0 - 1;
	else next(gt1_1_4_0) := gt1_1_4_0;
	if ((notchic0_4_0 > p21_0_4_0))
		next(p21_0_4_0) := p21_0_4_0 + 1;
	else if ((notchic0_4_0 < p21_0_4_0))
		next(p21_0_4_0) := p21_0_4_0 - 1;
	else next(p21_0_4_0) := p21_0_4_0;
	if (((gt1_2_3_1 + gt2_2_3_1) > (2 * delta2_3_1)))
		next(delta2_3_1) := delta2_3_1 + 1;
	else if (((gt1_2_3_1 + gt2_2_3_1) < ((2 * delta2_3_1) - 1)))
		next(delta2_3_1) := delta2_3_1 - 1;
	else next(delta2_3_1) := delta2_3_1;
	if (((gt1_2_3_2 + gt2_2_3_2) > (2 * delta2_3_2)))
		next(delta2_3_2) := delta2_3_2 + 1;
	else if (((gt1_2_3_2 + gt2_2_3_2) < ((2 * delta2_3_2) - 1)))
		next(delta2_3_2) := delta2_3_2 - 1;
	else next(delta2_3_2) := delta2_3_2;
	if (((gt1_2_3_3 + gt2_2_3_3) > (2 * delta2_3_3)))
		next(delta2_3_3) := delta2_3_3 + 1;
	else if (((gt1_2_3_3 + gt2_2_3_3) < ((2 * delta2_3_3) - 1)))
		next(delta2_3_3) := delta2_3_3 - 1;
	else next(delta2_3_3) := delta2_3_3;
	if ((wntext0_2_3 > frizzled0_2_3))
		next(frizzled0_2_3) := frizzled0_2_3 + 1;
	else if ((wntext0_2_3 < frizzled0_2_3))
		next(frizzled0_2_3) := frizzled0_2_3 - 1;
	else next(frizzled0_2_3) := frizzled0_2_3;
	if ((notchic4_0_0 > p21_4_0_0))
		next(p21_4_0_0) := p21_4_0_0 + 1;
	else if ((notchic4_0_0 < p21_4_0_0))
		next(p21_4_0_0) := p21_4_0_0 - 1;
	else next(p21_4_0_0) := p21_4_0_0;
	if ((notchic4_0_1 > p21_4_0_1))
		next(p21_4_0_1) := p21_4_0_1 + 1;
	else if ((notchic4_0_1 < p21_4_0_1))
		next(p21_4_0_1) := p21_4_0_1 - 1;
	else next(p21_4_0_1) := p21_4_0_1;
	if ((wntext0_2_2 > frizzled0_2_2))
		next(frizzled0_2_2) := frizzled0_2_2 + 1;
	else if ((wntext0_2_2 < frizzled0_2_2))
		next(frizzled0_2_2) := frizzled0_2_2 - 1;
	else next(frizzled0_2_2) := frizzled0_2_2;
	if (((delta3_3_2 + delta4_4_2 + delta2_4_2 + delta3_4_1 + delta3_4_3) > (5 * deltaext3_4_2)))
		next(deltaext3_4_2) := deltaext3_4_2 + 1;
	else if (((delta3_3_2 + delta4_4_2 + delta2_4_2 + delta3_4_1 + delta3_4_3) < ((5 * deltaext3_4_2) - 4)))
		next(deltaext3_4_2) := deltaext3_4_2 - 1;
	else next(deltaext3_4_2) := deltaext3_4_2;
	if ((wntext0_2_1 > frizzled0_2_1))
		next(frizzled0_2_1) := frizzled0_2_1 + 1;
	else if ((wntext0_2_1 < frizzled0_2_1))
		next(frizzled0_2_1) := frizzled0_2_1 - 1;
	else next(frizzled0_2_1) := frizzled0_2_1;
	if ((notchic4_0_2 > p21_4_0_2))
		next(p21_4_0_2) := p21_4_0_2 + 1;
	else if ((notchic4_0_2 < p21_4_0_2))
		next(p21_4_0_2) := p21_4_0_2 - 1;
	else next(p21_4_0_2) := p21_4_0_2;
	if (((delta3_3_3 + delta4_4_3 + delta2_4_3 + delta3_4_2) > (4 * deltaext3_4_3)))
		next(deltaext3_4_3) := deltaext3_4_3 + 1;
	else if (((delta3_3_3 + delta4_4_3 + delta2_4_3 + delta3_4_2) < ((4 * deltaext3_4_3) - 3)))
		next(deltaext3_4_3) := deltaext3_4_3 - 1;
	else next(deltaext3_4_3) := deltaext3_4_3;
	if ((notchic4_0_3 > p21_4_0_3))
		next(p21_4_0_3) := p21_4_0_3 + 1;
	else if ((notchic4_0_3 < p21_4_0_3))
		next(p21_4_0_3) := p21_4_0_3 - 1;
	else next(p21_4_0_3) := p21_4_0_3;
	if ((wntext0_2_0 > frizzled0_2_0))
		next(frizzled0_2_0) := frizzled0_2_0 + 1;
	else if ((wntext0_2_0 < frizzled0_2_0))
		next(frizzled0_2_0) := frizzled0_2_0 - 1;
	else next(frizzled0_2_0) := frizzled0_2_0;
	if (((delta3_3_0 + delta4_4_0 + delta2_4_0 + delta3_4_1) > (4 * deltaext3_4_0)))
		next(deltaext3_4_0) := deltaext3_4_0 + 1;
	else if (((delta3_3_0 + delta4_4_0 + delta2_4_0 + delta3_4_1) < ((4 * deltaext3_4_0) - 3)))
		next(deltaext3_4_0) := deltaext3_4_0 - 1;
	else next(deltaext3_4_0) := deltaext3_4_0;
	if (((delta3_3_1 + delta4_4_1 + delta2_4_1 + delta3_4_0 + delta3_4_2) > (5 * deltaext3_4_1)))
		next(deltaext3_4_1) := deltaext3_4_1 + 1;
	else if (((delta3_3_1 + delta4_4_1 + delta2_4_1 + delta3_4_0 + delta3_4_2) < ((5 * deltaext3_4_1) - 4)))
		next(deltaext3_4_1) := deltaext3_4_1 - 1;
	else next(deltaext3_4_1) := deltaext3_4_1;
	if (((3 - dsh3_4_0) > axin3_4_0))
		next(axin3_4_0) := axin3_4_0 + 1;
	else if ((((3 - dsh3_4_0) < axin3_4_0) & (axin3_4_0 > 0)))
		next(axin3_4_0) := axin3_4_0 - 1;
	else next(axin3_4_0) := axin3_4_0;
	if ((notchic4_2_1 > p21_4_2_1))
		next(p21_4_2_1) := p21_4_2_1 + 1;
	else if ((notchic4_2_1 < p21_4_2_1))
		next(p21_4_2_1) := p21_4_2_1 - 1;
	else next(p21_4_2_1) := p21_4_2_1;
	if ((notchic4_2_0 > p21_4_2_0))
		next(p21_4_2_0) := p21_4_2_0 + 1;
	else if ((notchic4_2_0 < p21_4_2_0))
		next(p21_4_2_0) := p21_4_2_0 - 1;
	else next(p21_4_2_0) := p21_4_2_0;
	if ((notchic4_2_3 > p21_4_2_3))
		next(p21_4_2_3) := p21_4_2_3 + 1;
	else if ((notchic4_2_3 < p21_4_2_3))
		next(p21_4_2_3) := p21_4_2_3 - 1;
	else next(p21_4_2_3) := p21_4_2_3;
	if (((3 - dsh3_4_2) > axin3_4_2))
		next(axin3_4_2) := axin3_4_2 + 1;
	else if ((((3 - dsh3_4_2) < axin3_4_2) & (axin3_4_2 > 0)))
		next(axin3_4_2) := axin3_4_2 - 1;
	else next(axin3_4_2) := axin3_4_2;
	if (((delta2_0_0 + delta1_1_0 + delta0_0_0 + delta1_0_1) > (4 * deltaext1_0_0)))
		next(deltaext1_0_0) := deltaext1_0_0 + 1;
	else if (((delta2_0_0 + delta1_1_0 + delta0_0_0 + delta1_0_1) < ((4 * deltaext1_0_0) - 3)))
		next(deltaext1_0_0) := deltaext1_0_0 - 1;
	else next(deltaext1_0_0) := deltaext1_0_0;
	if ((notchic4_2_2 > p21_4_2_2))
		next(p21_4_2_2) := p21_4_2_2 + 1;
	else if ((notchic4_2_2 < p21_4_2_2))
		next(p21_4_2_2) := p21_4_2_2 - 1;
	else next(p21_4_2_2) := p21_4_2_2;
	if (((delta2_0_1 + delta1_1_1 + delta0_0_1 + delta1_0_0 + delta1_0_2) > (5 * deltaext1_0_1)))
		next(deltaext1_0_1) := deltaext1_0_1 + 1;
	else if (((delta2_0_1 + delta1_1_1 + delta0_0_1 + delta1_0_0 + delta1_0_2) < ((5 * deltaext1_0_1) - 4)))
		next(deltaext1_0_1) := deltaext1_0_1 - 1;
	else next(deltaext1_0_1) := deltaext1_0_1;
	if (((3 - dsh3_4_1) > axin3_4_1))
		next(axin3_4_1) := axin3_4_1 + 1;
	else if ((((3 - dsh3_4_1) < axin3_4_1) & (axin3_4_1 > 0)))
		next(axin3_4_1) := axin3_4_1 - 1;
	else next(axin3_4_1) := axin3_4_1;
	if (((1 > notchic0_4_0) & (deltaext0_4_0 > notchic0_4_0)))
		next(notchic0_4_0) := notchic0_4_0 + 1;
	else if (((1 < notchic0_4_0) | (deltaext0_4_0 < notchic0_4_0)))
		next(notchic0_4_0) := notchic0_4_0 - 1;
	else next(notchic0_4_0) := notchic0_4_0;
	if (((delta2_0_2 + delta1_1_2 + delta0_0_2 + delta1_0_1 + delta1_0_3) > (5 * deltaext1_0_2)))
		next(deltaext1_0_2) := deltaext1_0_2 + 1;
	else if (((delta2_0_2 + delta1_1_2 + delta0_0_2 + delta1_0_1 + delta1_0_3) < ((5 * deltaext1_0_2) - 4)))
		next(deltaext1_0_2) := deltaext1_0_2 - 1;
	else next(deltaext1_0_2) := deltaext1_0_2;
	if (((delta2_0_3 + delta1_1_3 + delta0_0_3 + delta1_0_2) > (4 * deltaext1_0_3)))
		next(deltaext1_0_3) := deltaext1_0_3 + 1;
	else if (((delta2_0_3 + delta1_1_3 + delta0_0_3 + delta1_0_2) < ((4 * deltaext1_0_3) - 3)))
		next(deltaext1_0_3) := deltaext1_0_3 - 1;
	else next(deltaext1_0_3) := deltaext1_0_3;
	if (((1 > notchic0_4_1) & (deltaext0_4_1 > notchic0_4_1)))
		next(notchic0_4_1) := notchic0_4_1 + 1;
	else if (((1 < notchic0_4_1) | (deltaext0_4_1 < notchic0_4_1)))
		next(notchic0_4_1) := notchic0_4_1 - 1;
	else next(notchic0_4_1) := notchic0_4_1;
	if (((1 > notchic0_4_2) & (deltaext0_4_2 > notchic0_4_2)))
		next(notchic0_4_2) := notchic0_4_2 + 1;
	else if (((1 < notchic0_4_2) | (deltaext0_4_2 < notchic0_4_2)))
		next(notchic0_4_2) := notchic0_4_2 - 1;
	else next(notchic0_4_2) := notchic0_4_2;
	if (((1 > notchic0_4_3) & (deltaext0_4_3 > notchic0_4_3)))
		next(notchic0_4_3) := notchic0_4_3 + 1;
	else if (((1 < notchic0_4_3) | (deltaext0_4_3 < notchic0_4_3)))
		next(notchic0_4_3) := notchic0_4_3 - 1;
	else next(notchic0_4_3) := notchic0_4_3;
	if ((wntext0_4_2 > frizzled0_4_2))
		next(frizzled0_4_2) := frizzled0_4_2 + 1;
	else if ((wntext0_4_2 < frizzled0_4_2))
		next(frizzled0_4_2) := frizzled0_4_2 - 1;
	else next(frizzled0_4_2) := frizzled0_4_2;
	if ((wntext0_4_3 > frizzled0_4_3))
		next(frizzled0_4_3) := frizzled0_4_3 + 1;
	else if ((wntext0_4_3 < frizzled0_4_3))
		next(frizzled0_4_3) := frizzled0_4_3 - 1;
	else next(frizzled0_4_3) := frizzled0_4_3;
	if ((wntext0_4_0 > frizzled0_4_0))
		next(frizzled0_4_0) := frizzled0_4_0 + 1;
	else if ((wntext0_4_0 < frizzled0_4_0))
		next(frizzled0_4_0) := frizzled0_4_0 - 1;
	else next(frizzled0_4_0) := frizzled0_4_0;
	if ((wntext0_4_1 > frizzled0_4_1))
		next(frizzled0_4_1) := frizzled0_4_1 + 1;
	else if ((wntext0_4_1 < frizzled0_4_1))
		next(frizzled0_4_1) := frizzled0_4_1 - 1;
	else next(frizzled0_4_1) := frizzled0_4_1;
	if (((1 > notchic0_0_3) & (deltaext0_0_3 > notchic0_0_3)))
		next(notchic0_0_3) := notchic0_0_3 + 1;
	else if (((1 < notchic0_0_3) | (deltaext0_0_3 < notchic0_0_3)))
		next(notchic0_0_3) := notchic0_0_3 - 1;
	else next(notchic0_0_3) := notchic0_0_3;
	if (((1 > notchic0_0_2) & (deltaext0_0_2 > notchic0_0_2)))
		next(notchic0_0_2) := notchic0_0_2 + 1;
	else if (((1 < notchic0_0_2) | (deltaext0_0_2 < notchic0_0_2)))
		next(notchic0_0_2) := notchic0_0_2 - 1;
	else next(notchic0_0_2) := notchic0_0_2;
	if (((1 > notchic0_0_1) & (deltaext0_0_1 > notchic0_0_1)))
		next(notchic0_0_1) := notchic0_0_1 + 1;
	else if (((1 < notchic0_0_1) | (deltaext0_0_1 < notchic0_0_1)))
		next(notchic0_0_1) := notchic0_0_1 - 1;
	else next(notchic0_0_1) := notchic0_0_1;
	if (((1 > notchic0_0_0) & (deltaext0_0_0 > notchic0_0_0)))
		next(notchic0_0_0) := notchic0_0_0 + 1;
	else if (((1 < notchic0_0_0) | (deltaext0_0_0 < notchic0_0_0)))
		next(notchic0_0_0) := notchic0_0_0 - 1;
	else next(notchic0_0_0) := notchic0_0_0;
	if (((3 - p21_0_4_3) > wnt0_4_3))
		next(wnt0_4_3) := wnt0_4_3 + 1;
	else if (((3 - p21_0_4_3) < wnt0_4_3))
		next(wnt0_4_3) := wnt0_4_3 - 1;
	else next(wnt0_4_3) := wnt0_4_3;
	if (((3 - p21_0_4_0) > wnt0_4_0))
		next(wnt0_4_0) := wnt0_4_0 + 1;
	else if (((3 - p21_0_4_0) < wnt0_4_0))
		next(wnt0_4_0) := wnt0_4_0 - 1;
	else next(wnt0_4_0) := wnt0_4_0;
	if (((3 - p21_0_4_1) > wnt0_4_1))
		next(wnt0_4_1) := wnt0_4_1 + 1;
	else if (((3 - p21_0_4_1) < wnt0_4_1))
		next(wnt0_4_1) := wnt0_4_1 - 1;
	else next(wnt0_4_1) := wnt0_4_1;
	if (((3 - p21_0_4_2) > wnt0_4_2))
		next(wnt0_4_2) := wnt0_4_2 + 1;
	else if (((3 - p21_0_4_2) < wnt0_4_2))
		next(wnt0_4_2) := wnt0_4_2 - 1;
	else next(wnt0_4_2) := wnt0_4_2;
	if ((wntext4_3_3 > frizzled4_3_3))
		next(frizzled4_3_3) := frizzled4_3_3 + 1;
	else if ((wntext4_3_3 < frizzled4_3_3))
		next(frizzled4_3_3) := frizzled4_3_3 - 1;
	else next(frizzled4_3_3) := frizzled4_3_3;
	if ((notchic4_4_1 > p21_4_4_1))
		next(p21_4_4_1) := p21_4_4_1 + 1;
	else if ((notchic4_4_1 < p21_4_4_1))
		next(p21_4_4_1) := p21_4_4_1 - 1;
	else next(p21_4_4_1) := p21_4_4_1;
	if ((notchic4_4_0 > p21_4_4_0))
		next(p21_4_4_0) := p21_4_4_0 + 1;
	else if ((notchic4_4_0 < p21_4_4_0))
		next(p21_4_4_0) := p21_4_4_0 - 1;
	else next(p21_4_4_0) := p21_4_4_0;
	if ((wntext4_3_1 > frizzled4_3_1))
		next(frizzled4_3_1) := frizzled4_3_1 + 1;
	else if ((wntext4_3_1 < frizzled4_3_1))
		next(frizzled4_3_1) := frizzled4_3_1 - 1;
	else next(frizzled4_3_1) := frizzled4_3_1;
	if ((wntext4_3_2 > frizzled4_3_2))
		next(frizzled4_3_2) := frizzled4_3_2 + 1;
	else if ((wntext4_3_2 < frizzled4_3_2))
		next(frizzled4_3_2) := frizzled4_3_2 - 1;
	else next(frizzled4_3_2) := frizzled4_3_2;
	if (((gt1_2_3_0 + gt2_2_3_0) > (2 * delta2_3_0)))
		next(delta2_3_0) := delta2_3_0 + 1;
	else if (((gt1_2_3_0 + gt2_2_3_0) < ((2 * delta2_3_0) - 1)))
		next(delta2_3_0) := delta2_3_0 - 1;
	else next(delta2_3_0) := delta2_3_0;
	if ((wntext4_3_0 > frizzled4_3_0))
		next(frizzled4_3_0) := frizzled4_3_0 + 1;
	else if ((wntext4_3_0 < frizzled4_3_0))
		next(frizzled4_3_0) := frizzled4_3_0 - 1;
	else next(frizzled4_3_0) := frizzled4_3_0;
	if ((notchic4_4_3 > p21_4_4_3))
		next(p21_4_4_3) := p21_4_4_3 + 1;
	else if ((notchic4_4_3 < p21_4_4_3))
		next(p21_4_4_3) := p21_4_4_3 - 1;
	else next(p21_4_4_3) := p21_4_4_3;
	if ((notchic4_4_2 > p21_4_4_2))
		next(p21_4_4_2) := p21_4_4_2 + 1;
	else if ((notchic4_4_2 < p21_4_4_2))
		next(p21_4_4_2) := p21_4_4_2 - 1;
	else next(p21_4_4_2) := p21_4_4_2;
	if (((delta2_3_3 + delta3_4_3 + delta1_4_3 + delta2_4_2) > (4 * deltaext2_4_3)))
		next(deltaext2_4_3) := deltaext2_4_3 + 1;
	else if (((delta2_3_3 + delta3_4_3 + delta1_4_3 + delta2_4_2) < ((4 * deltaext2_4_3) - 3)))
		next(deltaext2_4_3) := deltaext2_4_3 - 1;
	else next(deltaext2_4_3) := deltaext2_4_3;
	if (((delta2_3_1 + delta3_4_1 + delta1_4_1 + delta2_4_0 + delta2_4_2) > (5 * deltaext2_4_1)))
		next(deltaext2_4_1) := deltaext2_4_1 + 1;
	else if (((delta2_3_1 + delta3_4_1 + delta1_4_1 + delta2_4_0 + delta2_4_2) < ((5 * deltaext2_4_1) - 4)))
		next(deltaext2_4_1) := deltaext2_4_1 - 1;
	else next(deltaext2_4_1) := deltaext2_4_1;
	if (((delta2_3_2 + delta3_4_2 + delta1_4_2 + delta2_4_1 + delta2_4_3) > (5 * deltaext2_4_2)))
		next(deltaext2_4_2) := deltaext2_4_2 + 1;
	else if (((delta2_3_2 + delta3_4_2 + delta1_4_2 + delta2_4_1 + delta2_4_3) < ((5 * deltaext2_4_2) - 4)))
		next(deltaext2_4_2) := deltaext2_4_2 - 1;
	else next(deltaext2_4_2) := deltaext2_4_2;
	if (((3 - axin1_0_1) > bcat1_0_1))
		next(bcat1_0_1) := bcat1_0_1 + 1;
	else if ((((3 - axin1_0_1) < bcat1_0_1) & (bcat1_0_1 > 0)))
		next(bcat1_0_1) := bcat1_0_1 - 1;
	else next(bcat1_0_1) := bcat1_0_1;
	if (((3 - axin1_0_2) > bcat1_0_2))
		next(bcat1_0_2) := bcat1_0_2 + 1;
	else if ((((3 - axin1_0_2) < bcat1_0_2) & (bcat1_0_2 > 0)))
		next(bcat1_0_2) := bcat1_0_2 - 1;
	else next(bcat1_0_2) := bcat1_0_2;
	if (((3 - axin1_0_3) > bcat1_0_3))
		next(bcat1_0_3) := bcat1_0_3 + 1;
	else if ((((3 - axin1_0_3) < bcat1_0_3) & (bcat1_0_3 > 0)))
		next(bcat1_0_3) := bcat1_0_3 - 1;
	else next(bcat1_0_3) := bcat1_0_3;
	if (((delta2_3_0 + delta3_4_0 + delta1_4_0 + delta2_4_1) > (4 * deltaext2_4_0)))
		next(deltaext2_4_0) := deltaext2_4_0 + 1;
	else if (((delta2_3_0 + delta3_4_0 + delta1_4_0 + delta2_4_1) < ((4 * deltaext2_4_0) - 3)))
		next(deltaext2_4_0) := deltaext2_4_0 - 1;
	else next(deltaext2_4_0) := deltaext2_4_0;
	if ((frizzled3_4_1 > dsh3_4_1))
		next(dsh3_4_1) := dsh3_4_1 + 1;
	else if ((frizzled3_4_1 < dsh3_4_1))
		next(dsh3_4_1) := dsh3_4_1 - 1;
	else next(dsh3_4_1) := dsh3_4_1;
	if ((frizzled3_4_0 > dsh3_4_0))
		next(dsh3_4_0) := dsh3_4_0 + 1;
	else if ((frizzled3_4_0 < dsh3_4_0))
		next(dsh3_4_0) := dsh3_4_0 - 1;
	else next(dsh3_4_0) := dsh3_4_0;
	if ((frizzled3_4_3 > dsh3_4_3))
		next(dsh3_4_3) := dsh3_4_3 + 1;
	else if ((frizzled3_4_3 < dsh3_4_3))
		next(dsh3_4_3) := dsh3_4_3 - 1;
	else next(dsh3_4_3) := dsh3_4_3;
	if ((frizzled3_4_2 > dsh3_4_2))
		next(dsh3_4_2) := dsh3_4_2 + 1;
	else if ((frizzled3_4_2 < dsh3_4_2))
		next(dsh3_4_2) := dsh3_4_2 - 1;
	else next(dsh3_4_2) := dsh3_4_2;
	if ((frizzled4_3_1 > dsh4_3_1))
		next(dsh4_3_1) := dsh4_3_1 + 1;
	else if ((frizzled4_3_1 < dsh4_3_1))
		next(dsh4_3_1) := dsh4_3_1 - 1;
	else next(dsh4_3_1) := dsh4_3_1;
	if ((frizzled0_4_0 > dsh0_4_0))
		next(dsh0_4_0) := dsh0_4_0 + 1;
	else if ((frizzled0_4_0 < dsh0_4_0))
		next(dsh0_4_0) := dsh0_4_0 - 1;
	else next(dsh0_4_0) := dsh0_4_0;
	if ((frizzled4_3_0 > dsh4_3_0))
		next(dsh4_3_0) := dsh4_3_0 + 1;
	else if ((frizzled4_3_0 < dsh4_3_0))
		next(dsh4_3_0) := dsh4_3_0 - 1;
	else next(dsh4_3_0) := dsh4_3_0;
	if ((frizzled4_3_3 > dsh4_3_3))
		next(dsh4_3_3) := dsh4_3_3 + 1;
	else if ((frizzled4_3_3 < dsh4_3_3))
		next(dsh4_3_3) := dsh4_3_3 - 1;
	else next(dsh4_3_3) := dsh4_3_3;
	if (((delta4_0_3 + 2 + delta4_2_3 + delta3_1_3 + delta4_1_2) > (5 * deltaext4_1_3)))
		next(deltaext4_1_3) := deltaext4_1_3 + 1;
	else if (((delta4_0_3 + 2 + delta4_2_3 + delta3_1_3 + delta4_1_2) < ((5 * deltaext4_1_3) - 4)))
		next(deltaext4_1_3) := deltaext4_1_3 - 1;
	else next(deltaext4_1_3) := deltaext4_1_3;
	if ((bcat0_0_0 > gt1_0_0_0))
		next(gt1_0_0_0) := gt1_0_0_0 + 1;
	else if ((bcat0_0_0 < gt1_0_0_0))
		next(gt1_0_0_0) := gt1_0_0_0 - 1;
	else next(gt1_0_0_0) := gt1_0_0_0;
	if ((frizzled0_4_1 > dsh0_4_1))
		next(dsh0_4_1) := dsh0_4_1 + 1;
	else if ((frizzled0_4_1 < dsh0_4_1))
		next(dsh0_4_1) := dsh0_4_1 - 1;
	else next(dsh0_4_1) := dsh0_4_1;
	if ((frizzled0_4_2 > dsh0_4_2))
		next(dsh0_4_2) := dsh0_4_2 + 1;
	else if ((frizzled0_4_2 < dsh0_4_2))
		next(dsh0_4_2) := dsh0_4_2 - 1;
	else next(dsh0_4_2) := dsh0_4_2;
	if ((frizzled4_3_2 > dsh4_3_2))
		next(dsh4_3_2) := dsh4_3_2 + 1;
	else if ((frizzled4_3_2 < dsh4_3_2))
		next(dsh4_3_2) := dsh4_3_2 - 1;
	else next(dsh4_3_2) := dsh4_3_2;
	if (((delta4_0_2 + 2 + delta4_2_2 + delta3_1_2 + delta4_1_1 + delta4_1_3) > (6 * deltaext4_1_2)))
		next(deltaext4_1_2) := deltaext4_1_2 + 1;
	else if (((delta4_0_2 + 2 + delta4_2_2 + delta3_1_2 + delta4_1_1 + delta4_1_3) < ((6 * deltaext4_1_2) - 5)))
		next(deltaext4_1_2) := deltaext4_1_2 - 1;
	else next(deltaext4_1_2) := deltaext4_1_2;
	if ((bcat0_0_2 > gt1_0_0_2))
		next(gt1_0_0_2) := gt1_0_0_2 + 1;
	else if ((bcat0_0_2 < gt1_0_0_2))
		next(gt1_0_0_2) := gt1_0_0_2 - 1;
	else next(gt1_0_0_2) := gt1_0_0_2;
	if ((bcat0_0_1 > gt1_0_0_1))
		next(gt1_0_0_1) := gt1_0_0_1 + 1;
	else if ((bcat0_0_1 < gt1_0_0_1))
		next(gt1_0_0_1) := gt1_0_0_1 - 1;
	else next(gt1_0_0_1) := gt1_0_0_1;
	if ((bcat0_0_3 > gt1_0_0_3))
		next(gt1_0_0_3) := gt1_0_0_3 + 1;
	else if ((bcat0_0_3 < gt1_0_0_3))
		next(gt1_0_0_3) := gt1_0_0_3 - 1;
	else next(gt1_0_0_3) := gt1_0_0_3;
	if (((3 - axin1_0_0) > bcat1_0_0))
		next(bcat1_0_0) := bcat1_0_0 + 1;
	else if ((((3 - axin1_0_0) < bcat1_0_0) & (bcat1_0_0 > 0)))
		next(bcat1_0_0) := bcat1_0_0 - 1;
	else next(bcat1_0_0) := bcat1_0_0;
	if ((frizzled3_2_3 > dsh3_2_3))
		next(dsh3_2_3) := dsh3_2_3 + 1;
	else if ((frizzled3_2_3 < dsh3_2_3))
		next(dsh3_2_3) := dsh3_2_3 - 1;
	else next(dsh3_2_3) := dsh3_2_3;
	if ((frizzled1_4_0 > dsh1_4_0))
		next(dsh1_4_0) := dsh1_4_0 + 1;
	else if ((frizzled1_4_0 < dsh1_4_0))
		next(dsh1_4_0) := dsh1_4_0 - 1;
	else next(dsh1_4_0) := dsh1_4_0;
	if ((frizzled1_4_1 > dsh1_4_1))
		next(dsh1_4_1) := dsh1_4_1 + 1;
	else if ((frizzled1_4_1 < dsh1_4_1))
		next(dsh1_4_1) := dsh1_4_1 - 1;
	else next(dsh1_4_1) := dsh1_4_1;
	if ((frizzled3_2_2 > dsh3_2_2))
		next(dsh3_2_2) := dsh3_2_2 + 1;
	else if ((frizzled3_2_2 < dsh3_2_2))
		next(dsh3_2_2) := dsh3_2_2 - 1;
	else next(dsh3_2_2) := dsh3_2_2;
	if ((frizzled0_2_2 > dsh0_2_2))
		next(dsh0_2_2) := dsh0_2_2 + 1;
	else if ((frizzled0_2_2 < dsh0_2_2))
		next(dsh0_2_2) := dsh0_2_2 - 1;
	else next(dsh0_2_2) := dsh0_2_2;
	if (((3 - axin1_4_3) > bcat1_4_3))
		next(bcat1_4_3) := bcat1_4_3 + 1;
	else if ((((3 - axin1_4_3) < bcat1_4_3) & (bcat1_4_3 > 0)))
		next(bcat1_4_3) := bcat1_4_3 - 1;
	else next(bcat1_4_3) := bcat1_4_3;
	if (((3 - p21_1_3_3) > wnt1_3_3))
		next(wnt1_3_3) := wnt1_3_3 + 1;
	else if (((3 - p21_1_3_3) < wnt1_3_3))
		next(wnt1_3_3) := wnt1_3_3 - 1;
	else next(wnt1_3_3) := wnt1_3_3;
	if ((frizzled0_2_1 > dsh0_2_1))
		next(dsh0_2_1) := dsh0_2_1 + 1;
	else if ((frizzled0_2_1 < dsh0_2_1))
		next(dsh0_2_1) := dsh0_2_1 - 1;
	else next(dsh0_2_1) := dsh0_2_1;
	if (((3 - axin1_4_2) > bcat1_4_2))
		next(bcat1_4_2) := bcat1_4_2 + 1;
	else if ((((3 - axin1_4_2) < bcat1_4_2) & (bcat1_4_2 > 0)))
		next(bcat1_4_2) := bcat1_4_2 - 1;
	else next(bcat1_4_2) := bcat1_4_2;
	if ((frizzled0_2_3 > dsh0_2_3))
		next(dsh0_2_3) := dsh0_2_3 + 1;
	else if ((frizzled0_2_3 < dsh0_2_3))
		next(dsh0_2_3) := dsh0_2_3 - 1;
	else next(dsh0_2_3) := dsh0_2_3;
	if ((frizzled1_1_0 > dsh1_1_0))
		next(dsh1_1_0) := dsh1_1_0 + 1;
	else if ((frizzled1_1_0 < dsh1_1_0))
		next(dsh1_1_0) := dsh1_1_0 - 1;
	else next(dsh1_1_0) := dsh1_1_0;
	if (((3 - axin1_4_1) > bcat1_4_1))
		next(bcat1_4_1) := bcat1_4_1 + 1;
	else if ((((3 - axin1_4_1) < bcat1_4_1) & (bcat1_4_1 > 0)))
		next(bcat1_4_1) := bcat1_4_1 - 1;
	else next(bcat1_4_1) := bcat1_4_1;
	if ((frizzled1_1_1 > dsh1_1_1))
		next(dsh1_1_1) := dsh1_1_1 + 1;
	else if ((frizzled1_1_1 < dsh1_1_1))
		next(dsh1_1_1) := dsh1_1_1 - 1;
	else next(dsh1_1_1) := dsh1_1_1;
	if (((3 - axin1_4_0) > bcat1_4_0))
		next(bcat1_4_0) := bcat1_4_0 + 1;
	else if ((((3 - axin1_4_0) < bcat1_4_0) & (bcat1_4_0 > 0)))
		next(bcat1_4_0) := bcat1_4_0 - 1;
	else next(bcat1_4_0) := bcat1_4_0;
	if (((3 - p21_1_3_0) > wnt1_3_0))
		next(wnt1_3_0) := wnt1_3_0 + 1;
	else if (((3 - p21_1_3_0) < wnt1_3_0))
		next(wnt1_3_0) := wnt1_3_0 - 1;
	else next(wnt1_3_0) := wnt1_3_0;
	if (((delta4_0_0 + 2 + delta4_2_0 + delta3_1_0 + delta4_1_1) > (5 * deltaext4_1_0)))
		next(deltaext4_1_0) := deltaext4_1_0 + 1;
	else if (((delta4_0_0 + 2 + delta4_2_0 + delta3_1_0 + delta4_1_1) < ((5 * deltaext4_1_0) - 4)))
		next(deltaext4_1_0) := deltaext4_1_0 - 1;
	else next(deltaext4_1_0) := deltaext4_1_0;
	if (((delta4_0_1 + 2 + delta4_2_1 + delta3_1_1 + delta4_1_0 + delta4_1_2) > (6 * deltaext4_1_1)))
		next(deltaext4_1_1) := deltaext4_1_1 + 1;
	else if (((delta4_0_1 + 2 + delta4_2_1 + delta3_1_1 + delta4_1_0 + delta4_1_2) < ((6 * deltaext4_1_1) - 5)))
		next(deltaext4_1_1) := deltaext4_1_1 - 1;
	else next(deltaext4_1_1) := deltaext4_1_1;
	if ((frizzled1_1_2 > dsh1_1_2))
		next(dsh1_1_2) := dsh1_1_2 + 1;
	else if ((frizzled1_1_2 < dsh1_1_2))
		next(dsh1_1_2) := dsh1_1_2 - 1;
	else next(dsh1_1_2) := dsh1_1_2;
	if ((frizzled1_1_3 > dsh1_1_3))
		next(dsh1_1_3) := dsh1_1_3 + 1;
	else if ((frizzled1_1_3 < dsh1_1_3))
		next(dsh1_1_3) := dsh1_1_3 - 1;
	else next(dsh1_1_3) := dsh1_1_3;
	if (((3 - p21_1_3_2) > wnt1_3_2))
		next(wnt1_3_2) := wnt1_3_2 + 1;
	else if (((3 - p21_1_3_2) < wnt1_3_2))
		next(wnt1_3_2) := wnt1_3_2 - 1;
	else next(wnt1_3_2) := wnt1_3_2;
	if ((frizzled0_2_0 > dsh0_2_0))
		next(dsh0_2_0) := dsh0_2_0 + 1;
	else if ((frizzled0_2_0 < dsh0_2_0))
		next(dsh0_2_0) := dsh0_2_0 - 1;
	else next(dsh0_2_0) := dsh0_2_0;
	if (((3 - p21_1_3_1) > wnt1_3_1))
		next(wnt1_3_1) := wnt1_3_1 + 1;
	else if (((3 - p21_1_3_1) < wnt1_3_1))
		next(wnt1_3_1) := wnt1_3_1 - 1;
	else next(wnt1_3_1) := wnt1_3_1;
	if (((3 - dsh2_0_3) > axin2_0_3))
		next(axin2_0_3) := axin2_0_3 + 1;
	else if ((((3 - dsh2_0_3) < axin2_0_3) & (axin2_0_3 > 0)))
		next(axin2_0_3) := axin2_0_3 - 1;
	else next(axin2_0_3) := axin2_0_3;
	if (((3 - axin2_3_3) > bcat2_3_3))
		next(bcat2_3_3) := bcat2_3_3 + 1;
	else if ((((3 - axin2_3_3) < bcat2_3_3) & (bcat2_3_3 > 0)))
		next(bcat2_3_3) := bcat2_3_3 - 1;
	else next(bcat2_3_3) := bcat2_3_3;
	if (((3 - dsh2_0_2) > axin2_0_2))
		next(axin2_0_2) := axin2_0_2 + 1;
	else if ((((3 - dsh2_0_2) < axin2_0_2) & (axin2_0_2 > 0)))
		next(axin2_0_2) := axin2_0_2 - 1;
	else next(axin2_0_2) := axin2_0_2;
	if (((3 > notchic3_2_3) & (deltaext3_2_3 > notchic3_2_3)))
		next(notchic3_2_3) := notchic3_2_3 + 1;
	else if (((3 < notchic3_2_3) | (deltaext3_2_3 < notchic3_2_3)))
		next(notchic3_2_3) := notchic3_2_3 - 1;
	else next(notchic3_2_3) := notchic3_2_3;
	if (((3 - axin2_3_2) > bcat2_3_2))
		next(bcat2_3_2) := bcat2_3_2 + 1;
	else if ((((3 - axin2_3_2) < bcat2_3_2) & (bcat2_3_2 > 0)))
		next(bcat2_3_2) := bcat2_3_2 - 1;
	else next(bcat2_3_2) := bcat2_3_2;
	if (((3 - dsh2_0_1) > axin2_0_1))
		next(axin2_0_1) := axin2_0_1 + 1;
	else if ((((3 - dsh2_0_1) < axin2_0_1) & (axin2_0_1 > 0)))
		next(axin2_0_1) := axin2_0_1 - 1;
	else next(axin2_0_1) := axin2_0_1;
	if (((3 - dsh2_0_0) > axin2_0_0))
		next(axin2_0_0) := axin2_0_0 + 1;
	else if ((((3 - dsh2_0_0) < axin2_0_0) & (axin2_0_0 > 0)))
		next(axin2_0_0) := axin2_0_0 - 1;
	else next(axin2_0_0) := axin2_0_0;
	if (((3 - axin2_3_1) > bcat2_3_1))
		next(bcat2_3_1) := bcat2_3_1 + 1;
	else if ((((3 - axin2_3_1) < bcat2_3_1) & (bcat2_3_1 > 0)))
		next(bcat2_3_1) := bcat2_3_1 - 1;
	else next(bcat2_3_1) := bcat2_3_1;
	if (((3 - axin2_3_0) > bcat2_3_0))
		next(bcat2_3_0) := bcat2_3_0 + 1;
	else if ((((3 - axin2_3_0) < bcat2_3_0) & (bcat2_3_0 > 0)))
		next(bcat2_3_0) := bcat2_3_0 - 1;
	else next(bcat2_3_0) := bcat2_3_0;
	if (((3 > notchic3_2_1) & (deltaext3_2_1 > notchic3_2_1)))
		next(notchic3_2_1) := notchic3_2_1 + 1;
	else if (((3 < notchic3_2_1) | (deltaext3_2_1 < notchic3_2_1)))
		next(notchic3_2_1) := notchic3_2_1 - 1;
	else next(notchic3_2_1) := notchic3_2_1;
	if (((3 > notchic3_2_2) & (deltaext3_2_2 > notchic3_2_2)))
		next(notchic3_2_2) := notchic3_2_2 + 1;
	else if (((3 < notchic3_2_2) | (deltaext3_2_2 < notchic3_2_2)))
		next(notchic3_2_2) := notchic3_2_2 - 1;
	else next(notchic3_2_2) := notchic3_2_2;
	if ((frizzled1_4_3 > dsh1_4_3))
		next(dsh1_4_3) := dsh1_4_3 + 1;
	else if ((frizzled1_4_3 < dsh1_4_3))
		next(dsh1_4_3) := dsh1_4_3 - 1;
	else next(dsh1_4_3) := dsh1_4_3;
	if ((frizzled3_2_0 > dsh3_2_0))
		next(dsh3_2_0) := dsh3_2_0 + 1;
	else if ((frizzled3_2_0 < dsh3_2_0))
		next(dsh3_2_0) := dsh3_2_0 - 1;
	else next(dsh3_2_0) := dsh3_2_0;
	if ((frizzled1_4_2 > dsh1_4_2))
		next(dsh1_4_2) := dsh1_4_2 + 1;
	else if ((frizzled1_4_2 < dsh1_4_2))
		next(dsh1_4_2) := dsh1_4_2 - 1;
	else next(dsh1_4_2) := dsh1_4_2;
	if (((3 > notchic3_2_0) & (deltaext3_2_0 > notchic3_2_0)))
		next(notchic3_2_0) := notchic3_2_0 + 1;
	else if (((3 < notchic3_2_0) | (deltaext3_2_0 < notchic3_2_0)))
		next(notchic3_2_0) := notchic3_2_0 - 1;
	else next(notchic3_2_0) := notchic3_2_0;
	if ((frizzled3_2_1 > dsh3_2_1))
		next(dsh3_2_1) := dsh3_2_1 + 1;
	else if ((frizzled3_2_1 < dsh3_2_1))
		next(dsh3_2_1) := dsh3_2_1 - 1;
	else next(dsh3_2_1) := dsh3_2_1;
	if (((3 - dsh0_2_0) > axin0_2_0))
		next(axin0_2_0) := axin0_2_0 + 1;
	else if ((((3 - dsh0_2_0) < axin0_2_0) & (axin0_2_0 > 0)))
		next(axin0_2_0) := axin0_2_0 - 1;
	else next(axin0_2_0) := axin0_2_0;
	if (((3 - dsh0_2_1) > axin0_2_1))
		next(axin0_2_1) := axin0_2_1 + 1;
	else if ((((3 - dsh0_2_1) < axin0_2_1) & (axin0_2_1 > 0)))
		next(axin0_2_1) := axin0_2_1 - 1;
	else next(axin0_2_1) := axin0_2_1;
	if (((3 - dsh0_2_2) > axin0_2_2))
		next(axin0_2_2) := axin0_2_2 + 1;
	else if ((((3 - dsh0_2_2) < axin0_2_2) & (axin0_2_2 > 0)))
		next(axin0_2_2) := axin0_2_2 - 1;
	else next(axin0_2_2) := axin0_2_2;
	if (((3 - dsh0_2_3) > axin0_2_3))
		next(axin0_2_3) := axin0_2_3 + 1;
	else if ((((3 - dsh0_2_3) < axin0_2_3) & (axin0_2_3 > 0)))
		next(axin0_2_3) := axin0_2_3 - 1;
	else next(axin0_2_3) := axin0_2_3;
	if ((frizzled3_0_1 > dsh3_0_1))
		next(dsh3_0_1) := dsh3_0_1 + 1;
	else if ((frizzled3_0_1 < dsh3_0_1))
		next(dsh3_0_1) := dsh3_0_1 - 1;
	else next(dsh3_0_1) := dsh3_0_1;
	if ((frizzled3_0_0 > dsh3_0_0))
		next(dsh3_0_0) := dsh3_0_0 + 1;
	else if ((frizzled3_0_0 < dsh3_0_0))
		next(dsh3_0_0) := dsh3_0_0 - 1;
	else next(dsh3_0_0) := dsh3_0_0;
	if ((frizzled3_0_3 > dsh3_0_3))
		next(dsh3_0_3) := dsh3_0_3 + 1;
	else if ((frizzled3_0_3 < dsh3_0_3))
		next(dsh3_0_3) := dsh3_0_3 - 1;
	else next(dsh3_0_3) := dsh3_0_3;
	if ((frizzled3_0_2 > dsh3_0_2))
		next(dsh3_0_2) := dsh3_0_2 + 1;
	else if ((frizzled3_0_2 < dsh3_0_2))
		next(dsh3_0_2) := dsh3_0_2 - 1;
	else next(dsh3_0_2) := dsh3_0_2;
	if (((3 - p21_2_4_3) > wnt2_4_3))
		next(wnt2_4_3) := wnt2_4_3 + 1;
	else if (((3 - p21_2_4_3) < wnt2_4_3))
		next(wnt2_4_3) := wnt2_4_3 - 1;
	else next(wnt2_4_3) := wnt2_4_3;
	if (((3 - p21_2_4_1) > wnt2_4_1))
		next(wnt2_4_1) := wnt2_4_1 + 1;
	else if (((3 - p21_2_4_1) < wnt2_4_1))
		next(wnt2_4_1) := wnt2_4_1 - 1;
	else next(wnt2_4_1) := wnt2_4_1;
	if ((frizzled0_4_3 > dsh0_4_3))
		next(dsh0_4_3) := dsh0_4_3 + 1;
	else if ((frizzled0_4_3 < dsh0_4_3))
		next(dsh0_4_3) := dsh0_4_3 - 1;
	else next(dsh0_4_3) := dsh0_4_3;
	if (((3 - p21_2_4_2) > wnt2_4_2))
		next(wnt2_4_2) := wnt2_4_2 + 1;
	else if (((3 - p21_2_4_2) < wnt2_4_2))
		next(wnt2_4_2) := wnt2_4_2 - 1;
	else next(wnt2_4_2) := wnt2_4_2;
	if (((3 - p21_2_4_0) > wnt2_4_0))
		next(wnt2_4_0) := wnt2_4_0 + 1;
	else if (((3 - p21_2_4_0) < wnt2_4_0))
		next(wnt2_4_0) := wnt2_4_0 - 1;
	else next(wnt2_4_0) := wnt2_4_0;
	if (((wnt2_1_1 + wnt3_2_1 + wnt2_3_1 + wnt1_2_1 + wnt2_2_0 + wnt2_2_2) > (5 + (6 * wntext2_2_1))))
		next(wntext2_2_1) := wntext2_2_1 + 1;
	else if (((wnt2_1_1 + wnt3_2_1 + wnt2_3_1 + wnt1_2_1 + wnt2_2_0 + wnt2_2_2) < (6 * wntext2_2_1)))
		next(wntext2_2_1) := wntext2_2_1 - 1;
	else next(wntext2_2_1) := wntext2_2_1;
	if (((wnt2_1_0 + wnt3_2_0 + wnt2_3_0 + wnt1_2_0 + wnt2_2_1) > (4 + (5 * wntext2_2_0))))
		next(wntext2_2_0) := wntext2_2_0 + 1;
	else if (((wnt2_1_0 + wnt3_2_0 + wnt2_3_0 + wnt1_2_0 + wnt2_2_1) < (5 * wntext2_2_0)))
		next(wntext2_2_0) := wntext2_2_0 - 1;
	else next(wntext2_2_0) := wntext2_2_0;
	if (((wnt2_1_3 + wnt3_2_3 + wnt2_3_3 + wnt1_2_3 + wnt2_2_2) > (4 + (5 * wntext2_2_3))))
		next(wntext2_2_3) := wntext2_2_3 + 1;
	else if (((wnt2_1_3 + wnt3_2_3 + wnt2_3_3 + wnt1_2_3 + wnt2_2_2) < (5 * wntext2_2_3)))
		next(wntext2_2_3) := wntext2_2_3 - 1;
	else next(wntext2_2_3) := wntext2_2_3;
	if (((wnt2_1_2 + wnt3_2_2 + wnt2_3_2 + wnt1_2_2 + wnt2_2_1 + wnt2_2_3) > (5 + (6 * wntext2_2_2))))
		next(wntext2_2_2) := wntext2_2_2 + 1;
	else if (((wnt2_1_2 + wnt3_2_2 + wnt2_3_2 + wnt1_2_2 + wnt2_2_1 + wnt2_2_3) < (6 * wntext2_2_2)))
		next(wntext2_2_2) := wntext2_2_2 - 1;
	else next(wntext2_2_2) := wntext2_2_2;
	if (((gt1_0_2_0 + gt2_0_2_0) > (2 * delta0_2_0)))
		next(delta0_2_0) := delta0_2_0 + 1;
	else if (((gt1_0_2_0 + gt2_0_2_0) < ((2 * delta0_2_0) - 1)))
		next(delta0_2_0) := delta0_2_0 - 1;
	else next(delta0_2_0) := delta0_2_0;
	if (((gt1_0_2_1 + gt2_0_2_1) > (2 * delta0_2_1)))
		next(delta0_2_1) := delta0_2_1 + 1;
	else if (((gt1_0_2_1 + gt2_0_2_1) < ((2 * delta0_2_1) - 1)))
		next(delta0_2_1) := delta0_2_1 - 1;
	else next(delta0_2_1) := delta0_2_1;
	if (((gt1_0_2_2 + gt2_0_2_2) > (2 * delta0_2_2)))
		next(delta0_2_2) := delta0_2_2 + 1;
	else if (((gt1_0_2_2 + gt2_0_2_2) < ((2 * delta0_2_2) - 1)))
		next(delta0_2_2) := delta0_2_2 - 1;
	else next(delta0_2_2) := delta0_2_2;
	if (((gt1_0_2_3 + gt2_0_2_3) > (2 * delta0_2_3)))
		next(delta0_2_3) := delta0_2_3 + 1;
	else if (((gt1_0_2_3 + gt2_0_2_3) < ((2 * delta0_2_3) - 1)))
		next(delta0_2_3) := delta0_2_3 - 1;
	else next(delta0_2_3) := delta0_2_3;
	if ((notchic2_3_2 > gt2_2_3_2))
		next(gt2_2_3_2) := gt2_2_3_2 + 1;
	else if ((notchic2_3_2 < gt2_2_3_2))
		next(gt2_2_3_2) := gt2_2_3_2 - 1;
	else next(gt2_2_3_2) := gt2_2_3_2;
	if ((wntext3_4_3 > frizzled3_4_3))
		next(frizzled3_4_3) := frizzled3_4_3 + 1;
	else if ((wntext3_4_3 < frizzled3_4_3))
		next(frizzled3_4_3) := frizzled3_4_3 - 1;
	else next(frizzled3_4_3) := frizzled3_4_3;
	if ((notchic2_3_1 > gt2_2_3_1))
		next(gt2_2_3_1) := gt2_2_3_1 + 1;
	else if ((notchic2_3_1 < gt2_2_3_1))
		next(gt2_2_3_1) := gt2_2_3_1 - 1;
	else next(gt2_2_3_1) := gt2_2_3_1;
	if ((wntext3_4_2 > frizzled3_4_2))
		next(frizzled3_4_2) := frizzled3_4_2 + 1;
	else if ((wntext3_4_2 < frizzled3_4_2))
		next(frizzled3_4_2) := frizzled3_4_2 - 1;
	else next(frizzled3_4_2) := frizzled3_4_2;
	if ((notchic2_3_0 > gt2_2_3_0))
		next(gt2_2_3_0) := gt2_2_3_0 + 1;
	else if ((notchic2_3_0 < gt2_2_3_0))
		next(gt2_2_3_0) := gt2_2_3_0 - 1;
	else next(gt2_2_3_0) := gt2_2_3_0;
	if ((wntext3_4_1 > frizzled3_4_1))
		next(frizzled3_4_1) := frizzled3_4_1 + 1;
	else if ((wntext3_4_1 < frizzled3_4_1))
		next(frizzled3_4_1) := frizzled3_4_1 - 1;
	else next(frizzled3_4_1) := frizzled3_4_1;
	if ((wntext3_4_0 > frizzled3_4_0))
		next(frizzled3_4_0) := frizzled3_4_0 + 1;
	else if ((wntext3_4_0 < frizzled3_4_0))
		next(frizzled3_4_0) := frizzled3_4_0 - 1;
	else next(frizzled3_4_0) := frizzled3_4_0;
	if (((wnt4_2_3 + 0 + wnt4_4_3 + wnt3_3_3 + wnt4_3_2) > (4 + (5 * wntext4_3_3))))
		next(wntext4_3_3) := wntext4_3_3 + 1;
	else if (((wnt4_2_3 + 0 + wnt4_4_3 + wnt3_3_3 + wnt4_3_2) < (5 * wntext4_3_3)))
		next(wntext4_3_3) := wntext4_3_3 - 1;
	else next(wntext4_3_3) := wntext4_3_3;
	if (((wnt4_2_0 + 0 + wnt4_4_0 + wnt3_3_0 + wnt4_3_1) > (4 + (5 * wntext4_3_0))))
		next(wntext4_3_0) := wntext4_3_0 + 1;
	else if (((wnt4_2_0 + 0 + wnt4_4_0 + wnt3_3_0 + wnt4_3_1) < (5 * wntext4_3_0)))
		next(wntext4_3_0) := wntext4_3_0 - 1;
	else next(wntext4_3_0) := wntext4_3_0;
	if (((wnt4_2_2 + 0 + wnt4_4_2 + wnt3_3_2 + wnt4_3_1 + wnt4_3_3) > (5 + (6 * wntext4_3_2))))
		next(wntext4_3_2) := wntext4_3_2 + 1;
	else if (((wnt4_2_2 + 0 + wnt4_4_2 + wnt3_3_2 + wnt4_3_1 + wnt4_3_3) < (6 * wntext4_3_2)))
		next(wntext4_3_2) := wntext4_3_2 - 1;
	else next(wntext4_3_2) := wntext4_3_2;
	if (((wnt4_2_1 + 0 + wnt4_4_1 + wnt3_3_1 + wnt4_3_0 + wnt4_3_2) > (5 + (6 * wntext4_3_1))))
		next(wntext4_3_1) := wntext4_3_1 + 1;
	else if (((wnt4_2_1 + 0 + wnt4_4_1 + wnt3_3_1 + wnt4_3_0 + wnt4_3_2) < (6 * wntext4_3_1)))
		next(wntext4_3_1) := wntext4_3_1 - 1;
	else next(wntext4_3_1) := wntext4_3_1;
	if (((gt1_1_0_0 + gt2_1_0_0) > (2 * delta1_0_0)))
		next(delta1_0_0) := delta1_0_0 + 1;
	else if (((gt1_1_0_0 + gt2_1_0_0) < ((2 * delta1_0_0) - 1)))
		next(delta1_0_0) := delta1_0_0 - 1;
	else next(delta1_0_0) := delta1_0_0;
	if (((gt1_1_0_2 + gt2_1_0_2) > (2 * delta1_0_2)))
		next(delta1_0_2) := delta1_0_2 + 1;
	else if (((gt1_1_0_2 + gt2_1_0_2) < ((2 * delta1_0_2) - 1)))
		next(delta1_0_2) := delta1_0_2 - 1;
	else next(delta1_0_2) := delta1_0_2;
	if (((gt1_1_0_1 + gt2_1_0_1) > (2 * delta1_0_1)))
		next(delta1_0_1) := delta1_0_1 + 1;
	else if (((gt1_1_0_1 + gt2_1_0_1) < ((2 * delta1_0_1) - 1)))
		next(delta1_0_1) := delta1_0_1 - 1;
	else next(delta1_0_1) := delta1_0_1;
	if (((gt1_1_0_3 + gt2_1_0_3) > (2 * delta1_0_3)))
		next(delta1_0_3) := delta1_0_3 + 1;
	else if (((gt1_1_0_3 + gt2_1_0_3) < ((2 * delta1_0_3) - 1)))
		next(delta1_0_3) := delta1_0_3 - 1;
	else next(delta1_0_3) := delta1_0_3;
	if (((3 - dsh1_4_2) > axin1_4_2))
		next(axin1_4_2) := axin1_4_2 + 1;
	else if ((((3 - dsh1_4_2) < axin1_4_2) & (axin1_4_2 > 0)))
		next(axin1_4_2) := axin1_4_2 - 1;
	else next(axin1_4_2) := axin1_4_2;
	if (((3 - axin3_2_0) > bcat3_2_0))
		next(bcat3_2_0) := bcat3_2_0 + 1;
	else if ((((3 - axin3_2_0) < bcat3_2_0) & (bcat3_2_0 > 0)))
		next(bcat3_2_0) := bcat3_2_0 - 1;
	else next(bcat3_2_0) := bcat3_2_0;
	if (((3 - dsh1_4_1) > axin1_4_1))
		next(axin1_4_1) := axin1_4_1 + 1;
	else if ((((3 - dsh1_4_1) < axin1_4_1) & (axin1_4_1 > 0)))
		next(axin1_4_1) := axin1_4_1 - 1;
	else next(axin1_4_1) := axin1_4_1;
	if (((3 - dsh1_4_3) > axin1_4_3))
		next(axin1_4_3) := axin1_4_3 + 1;
	else if ((((3 - dsh1_4_3) < axin1_4_3) & (axin1_4_3 > 0)))
		next(axin1_4_3) := axin1_4_3 - 1;
	else next(axin1_4_3) := axin1_4_3;
	if (((gt1_2_1_3 + gt2_2_1_3) > (2 * delta2_1_3)))
		next(delta2_1_3) := delta2_1_3 + 1;
	else if (((gt1_2_1_3 + gt2_2_1_3) < ((2 * delta2_1_3) - 1)))
		next(delta2_1_3) := delta2_1_3 - 1;
	else next(delta2_1_3) := delta2_1_3;
	if (((3 - axin3_2_3) > bcat3_2_3))
		next(bcat3_2_3) := bcat3_2_3 + 1;
	else if ((((3 - axin3_2_3) < bcat3_2_3) & (bcat3_2_3 > 0)))
		next(bcat3_2_3) := bcat3_2_3 - 1;
	else next(bcat3_2_3) := bcat3_2_3;
	if (((3 - dsh1_4_0) > axin1_4_0))
		next(axin1_4_0) := axin1_4_0 + 1;
	else if ((((3 - dsh1_4_0) < axin1_4_0) & (axin1_4_0 > 0)))
		next(axin1_4_0) := axin1_4_0 - 1;
	else next(axin1_4_0) := axin1_4_0;
	if (((3 - axin3_2_2) > bcat3_2_2))
		next(bcat3_2_2) := bcat3_2_2 + 1;
	else if ((((3 - axin3_2_2) < bcat3_2_2) & (bcat3_2_2 > 0)))
		next(bcat3_2_2) := bcat3_2_2 - 1;
	else next(bcat3_2_2) := bcat3_2_2;
	if (((3 - axin3_2_1) > bcat3_2_1))
		next(bcat3_2_1) := bcat3_2_1 + 1;
	else if ((((3 - axin3_2_1) < bcat3_2_1) & (bcat3_2_1 > 0)))
		next(bcat3_2_1) := bcat3_2_1 - 1;
	else next(bcat3_2_1) := bcat3_2_1;
	if (((wnt1_3_0 + wnt2_4_0 + wnt0_4_0 + wnt1_4_1) > (3 + (4 * wntext1_4_0))))
		next(wntext1_4_0) := wntext1_4_0 + 1;
	else if (((wnt1_3_0 + wnt2_4_0 + wnt0_4_0 + wnt1_4_1) < (4 * wntext1_4_0)))
		next(wntext1_4_0) := wntext1_4_0 - 1;
	else next(wntext1_4_0) := wntext1_4_0;
	if (((delta1_1_3 + delta2_2_3 + delta1_3_3 + delta0_2_3 + delta1_2_2) > (5 * deltaext1_2_3)))
		next(deltaext1_2_3) := deltaext1_2_3 + 1;
	else if (((delta1_1_3 + delta2_2_3 + delta1_3_3 + delta0_2_3 + delta1_2_2) < ((5 * deltaext1_2_3) - 4)))
		next(deltaext1_2_3) := deltaext1_2_3 - 1;
	else next(deltaext1_2_3) := deltaext1_2_3;
	if (((wnt1_3_2 + wnt2_4_2 + wnt0_4_2 + wnt1_4_1 + wnt1_4_3) > (4 + (5 * wntext1_4_2))))
		next(wntext1_4_2) := wntext1_4_2 + 1;
	else if (((wnt1_3_2 + wnt2_4_2 + wnt0_4_2 + wnt1_4_1 + wnt1_4_3) < (5 * wntext1_4_2)))
		next(wntext1_4_2) := wntext1_4_2 - 1;
	else next(wntext1_4_2) := wntext1_4_2;
	if (((wnt1_3_1 + wnt2_4_1 + wnt0_4_1 + wnt1_4_0 + wnt1_4_2) > (4 + (5 * wntext1_4_1))))
		next(wntext1_4_1) := wntext1_4_1 + 1;
	else if (((wnt1_3_1 + wnt2_4_1 + wnt0_4_1 + wnt1_4_0 + wnt1_4_2) < (5 * wntext1_4_1)))
		next(wntext1_4_1) := wntext1_4_1 - 1;
	else next(wntext1_4_1) := wntext1_4_1;
	if (((delta1_1_2 + delta2_2_2 + delta1_3_2 + delta0_2_2 + delta1_2_1 + delta1_2_3) > (6 * deltaext1_2_2)))
		next(deltaext1_2_2) := deltaext1_2_2 + 1;
	else if (((delta1_1_2 + delta2_2_2 + delta1_3_2 + delta0_2_2 + delta1_2_1 + delta1_2_3) < ((6 * deltaext1_2_2) - 5)))
		next(deltaext1_2_2) := deltaext1_2_2 - 1;
	else next(deltaext1_2_2) := deltaext1_2_2;
	if (((delta1_1_1 + delta2_2_1 + delta1_3_1 + delta0_2_1 + delta1_2_0 + delta1_2_2) > (6 * deltaext1_2_1)))
		next(deltaext1_2_1) := deltaext1_2_1 + 1;
	else if (((delta1_1_1 + delta2_2_1 + delta1_3_1 + delta0_2_1 + delta1_2_0 + delta1_2_2) < ((6 * deltaext1_2_1) - 5)))
		next(deltaext1_2_1) := deltaext1_2_1 - 1;
	else next(deltaext1_2_1) := deltaext1_2_1;
	if (((wnt1_3_3 + wnt2_4_3 + wnt0_4_3 + wnt1_4_2) > (3 + (4 * wntext1_4_3))))
		next(wntext1_4_3) := wntext1_4_3 + 1;
	else if (((wnt1_3_3 + wnt2_4_3 + wnt0_4_3 + wnt1_4_2) < (4 * wntext1_4_3)))
		next(wntext1_4_3) := wntext1_4_3 - 1;
	else next(wntext1_4_3) := wntext1_4_3;
	if (((delta1_1_0 + delta2_2_0 + delta1_3_0 + delta0_2_0 + delta1_2_1) > (5 * deltaext1_2_0)))
		next(deltaext1_2_0) := deltaext1_2_0 + 1;
	else if (((delta1_1_0 + delta2_2_0 + delta1_3_0 + delta0_2_0 + delta1_2_1) < ((5 * deltaext1_2_0) - 4)))
		next(deltaext1_2_0) := deltaext1_2_0 - 1;
	else next(deltaext1_2_0) := deltaext1_2_0;
	if (((1 > notchic0_2_0) & (deltaext0_2_0 > notchic0_2_0)))
		next(notchic0_2_0) := notchic0_2_0 + 1;
	else if (((1 < notchic0_2_0) | (deltaext0_2_0 < notchic0_2_0)))
		next(notchic0_2_0) := notchic0_2_0 - 1;
	else next(notchic0_2_0) := notchic0_2_0;
	if (((1 > notchic0_2_1) & (deltaext0_2_1 > notchic0_2_1)))
		next(notchic0_2_1) := notchic0_2_1 + 1;
	else if (((1 < notchic0_2_1) | (deltaext0_2_1 < notchic0_2_1)))
		next(notchic0_2_1) := notchic0_2_1 - 1;
	else next(notchic0_2_1) := notchic0_2_1;
	if (((delta3_1_1 + delta4_2_1 + delta3_3_1 + delta2_2_1 + delta3_2_0 + delta3_2_2) > (6 * deltaext3_2_1)))
		next(deltaext3_2_1) := deltaext3_2_1 + 1;
	else if (((delta3_1_1 + delta4_2_1 + delta3_3_1 + delta2_2_1 + delta3_2_0 + delta3_2_2) < ((6 * deltaext3_2_1) - 5)))
		next(deltaext3_2_1) := deltaext3_2_1 - 1;
	else next(deltaext3_2_1) := deltaext3_2_1;
	if (((1 > notchic0_2_2) & (deltaext0_2_2 > notchic0_2_2)))
		next(notchic0_2_2) := notchic0_2_2 + 1;
	else if (((1 < notchic0_2_2) | (deltaext0_2_2 < notchic0_2_2)))
		next(notchic0_2_2) := notchic0_2_2 - 1;
	else next(notchic0_2_2) := notchic0_2_2;
	if (((1 > notchic0_2_3) & (deltaext0_2_3 > notchic0_2_3)))
		next(notchic0_2_3) := notchic0_2_3 + 1;
	else if (((1 < notchic0_2_3) | (deltaext0_2_3 < notchic0_2_3)))
		next(notchic0_2_3) := notchic0_2_3 - 1;
	else next(notchic0_2_3) := notchic0_2_3;
	if (((delta3_1_0 + delta4_2_0 + delta3_3_0 + delta2_2_0 + delta3_2_1) > (5 * deltaext3_2_0)))
		next(deltaext3_2_0) := deltaext3_2_0 + 1;
	else if (((delta3_1_0 + delta4_2_0 + delta3_3_0 + delta2_2_0 + delta3_2_1) < ((5 * deltaext3_2_0) - 4)))
		next(deltaext3_2_0) := deltaext3_2_0 - 1;
	else next(deltaext3_2_0) := deltaext3_2_0;
	if ((notchic2_3_3 > gt2_2_3_3))
		next(gt2_2_3_3) := gt2_2_3_3 + 1;
	else if ((notchic2_3_3 < gt2_2_3_3))
		next(gt2_2_3_3) := gt2_2_3_3 - 1;
	else next(gt2_2_3_3) := gt2_2_3_3;
	if (((delta3_1_2 + delta4_2_2 + delta3_3_2 + delta2_2_2 + delta3_2_1 + delta3_2_3) > (6 * deltaext3_2_2)))
		next(deltaext3_2_2) := deltaext3_2_2 + 1;
	else if (((delta3_1_2 + delta4_2_2 + delta3_3_2 + delta2_2_2 + delta3_2_1 + delta3_2_3) < ((6 * deltaext3_2_2) - 5)))
		next(deltaext3_2_2) := deltaext3_2_2 - 1;
	else next(deltaext3_2_2) := deltaext3_2_2;
	if (((delta3_1_3 + delta4_2_3 + delta3_3_3 + delta2_2_3 + delta3_2_2) > (5 * deltaext3_2_3)))
		next(deltaext3_2_3) := deltaext3_2_3 + 1;
	else if (((delta3_1_3 + delta4_2_3 + delta3_3_3 + delta2_2_3 + delta3_2_2) < ((5 * deltaext3_2_3) - 4)))
		next(deltaext3_2_3) := deltaext3_2_3 - 1;
	else next(deltaext3_2_3) := deltaext3_2_3;
	if (((gt1_2_1_0 + gt2_2_1_0) > (2 * delta2_1_0)))
		next(delta2_1_0) := delta2_1_0 + 1;
	else if (((gt1_2_1_0 + gt2_2_1_0) < ((2 * delta2_1_0) - 1)))
		next(delta2_1_0) := delta2_1_0 - 1;
	else next(delta2_1_0) := delta2_1_0;
	if (((gt1_2_1_1 + gt2_2_1_1) > (2 * delta2_1_1)))
		next(delta2_1_1) := delta2_1_1 + 1;
	else if (((gt1_2_1_1 + gt2_2_1_1) < ((2 * delta2_1_1) - 1)))
		next(delta2_1_1) := delta2_1_1 - 1;
	else next(delta2_1_1) := delta2_1_1;
	if (((gt1_2_1_2 + gt2_2_1_2) > (2 * delta2_1_2)))
		next(delta2_1_2) := delta2_1_2 + 1;
	else if (((gt1_2_1_2 + gt2_2_1_2) < ((2 * delta2_1_2) - 1)))
		next(delta2_1_2) := delta2_1_2 - 1;
	else next(delta2_1_2) := delta2_1_2;
	if ((bcat4_3_2 > gt1_4_3_2))
		next(gt1_4_3_2) := gt1_4_3_2 + 1;
	else if ((bcat4_3_2 < gt1_4_3_2))
		next(gt1_4_3_2) := gt1_4_3_2 - 1;
	else next(gt1_4_3_2) := gt1_4_3_2;
	if ((bcat4_3_3 > gt1_4_3_3))
		next(gt1_4_3_3) := gt1_4_3_3 + 1;
	else if ((bcat4_3_3 < gt1_4_3_3))
		next(gt1_4_3_3) := gt1_4_3_3 - 1;
	else next(gt1_4_3_3) := gt1_4_3_3;
	if (((wnt1_2_0 + wnt2_3_0 + wnt1_4_0 + wnt0_3_0 + wnt1_3_1) > (4 + (5 * wntext1_3_0))))
		next(wntext1_3_0) := wntext1_3_0 + 1;
	else if (((wnt1_2_0 + wnt2_3_0 + wnt1_4_0 + wnt0_3_0 + wnt1_3_1) < (5 * wntext1_3_0)))
		next(wntext1_3_0) := wntext1_3_0 - 1;
	else next(wntext1_3_0) := wntext1_3_0;
	if ((wntext1_4_1 > frizzled1_4_1))
		next(frizzled1_4_1) := frizzled1_4_1 + 1;
	else if ((wntext1_4_1 < frizzled1_4_1))
		next(frizzled1_4_1) := frizzled1_4_1 - 1;
	else next(frizzled1_4_1) := frizzled1_4_1;
	if ((wntext1_4_2 > frizzled1_4_2))
		next(frizzled1_4_2) := frizzled1_4_2 + 1;
	else if ((wntext1_4_2 < frizzled1_4_2))
		next(frizzled1_4_2) := frizzled1_4_2 - 1;
	else next(frizzled1_4_2) := frizzled1_4_2;
	if (((3 - dsh4_1_0) > axin4_1_0))
		next(axin4_1_0) := axin4_1_0 + 1;
	else if ((((3 - dsh4_1_0) < axin4_1_0) & (axin4_1_0 > 0)))
		next(axin4_1_0) := axin4_1_0 - 1;
	else next(axin4_1_0) := axin4_1_0;
	if (((wnt1_2_1 + wnt2_3_1 + wnt1_4_1 + wnt0_3_1 + wnt1_3_0 + wnt1_3_2) > (5 + (6 * wntext1_3_1))))
		next(wntext1_3_1) := wntext1_3_1 + 1;
	else if (((wnt1_2_1 + wnt2_3_1 + wnt1_4_1 + wnt0_3_1 + wnt1_3_0 + wnt1_3_2) < (6 * wntext1_3_1)))
		next(wntext1_3_1) := wntext1_3_1 - 1;
	else next(wntext1_3_1) := wntext1_3_1;
	if ((wntext1_4_0 > frizzled1_4_0))
		next(frizzled1_4_0) := frizzled1_4_0 + 1;
	else if ((wntext1_4_0 < frizzled1_4_0))
		next(frizzled1_4_0) := frizzled1_4_0 - 1;
	else next(frizzled1_4_0) := frizzled1_4_0;
	if (((3 - dsh4_1_3) > axin4_1_3))
		next(axin4_1_3) := axin4_1_3 + 1;
	else if ((((3 - dsh4_1_3) < axin4_1_3) & (axin4_1_3 > 0)))
		next(axin4_1_3) := axin4_1_3 - 1;
	else next(axin4_1_3) := axin4_1_3;
	if ((wntext1_4_3 > frizzled1_4_3))
		next(frizzled1_4_3) := frizzled1_4_3 + 1;
	else if ((wntext1_4_3 < frizzled1_4_3))
		next(frizzled1_4_3) := frizzled1_4_3 - 1;
	else next(frizzled1_4_3) := frizzled1_4_3;
	if (((wnt1_2_2 + wnt2_3_2 + wnt1_4_2 + wnt0_3_2 + wnt1_3_1 + wnt1_3_3) > (5 + (6 * wntext1_3_2))))
		next(wntext1_3_2) := wntext1_3_2 + 1;
	else if (((wnt1_2_2 + wnt2_3_2 + wnt1_4_2 + wnt0_3_2 + wnt1_3_1 + wnt1_3_3) < (6 * wntext1_3_2)))
		next(wntext1_3_2) := wntext1_3_2 - 1;
	else next(wntext1_3_2) := wntext1_3_2;
	if (((3 - dsh4_1_1) > axin4_1_1))
		next(axin4_1_1) := axin4_1_1 + 1;
	else if ((((3 - dsh4_1_1) < axin4_1_1) & (axin4_1_1 > 0)))
		next(axin4_1_1) := axin4_1_1 - 1;
	else next(axin4_1_1) := axin4_1_1;
	if (((wnt1_2_3 + wnt2_3_3 + wnt1_4_3 + wnt0_3_3 + wnt1_3_2) > (4 + (5 * wntext1_3_3))))
		next(wntext1_3_3) := wntext1_3_3 + 1;
	else if (((wnt1_2_3 + wnt2_3_3 + wnt1_4_3 + wnt0_3_3 + wnt1_3_2) < (5 * wntext1_3_3)))
		next(wntext1_3_3) := wntext1_3_3 - 1;
	else next(wntext1_3_3) := wntext1_3_3;
	if (((3 - dsh4_1_2) > axin4_1_2))
		next(axin4_1_2) := axin4_1_2 + 1;
	else if ((((3 - dsh4_1_2) < axin4_1_2) & (axin4_1_2 > 0)))
		next(axin4_1_2) := axin4_1_2 - 1;
	else next(axin4_1_2) := axin4_1_2;
	if (((3 - dsh0_4_0) > axin0_4_0))
		next(axin0_4_0) := axin0_4_0 + 1;
	else if ((((3 - dsh0_4_0) < axin0_4_0) & (axin0_4_0 > 0)))
		next(axin0_4_0) := axin0_4_0 - 1;
	else next(axin0_4_0) := axin0_4_0;
	if (((3 - dsh0_4_1) > axin0_4_1))
		next(axin0_4_1) := axin0_4_1 + 1;
	else if ((((3 - dsh0_4_1) < axin0_4_1) & (axin0_4_1 > 0)))
		next(axin0_4_1) := axin0_4_1 - 1;
	else next(axin0_4_1) := axin0_4_1;
	if (((3 - dsh0_4_2) > axin0_4_2))
		next(axin0_4_2) := axin0_4_2 + 1;
	else if ((((3 - dsh0_4_2) < axin0_4_2) & (axin0_4_2 > 0)))
		next(axin0_4_2) := axin0_4_2 - 1;
	else next(axin0_4_2) := axin0_4_2;
	if (((3 - dsh0_4_3) > axin0_4_3))
		next(axin0_4_3) := axin0_4_3 + 1;
	else if ((((3 - dsh0_4_3) < axin0_4_3) & (axin0_4_3 > 0)))
		next(axin0_4_3) := axin0_4_3 - 1;
	else next(axin0_4_3) := axin0_4_3;
	if (((delta0_1_0 + delta1_2_0 + delta0_3_0 + 2 + delta0_2_1) > (5 * deltaext0_2_0)))
		next(deltaext0_2_0) := deltaext0_2_0 + 1;
	else if (((delta0_1_0 + delta1_2_0 + delta0_3_0 + 2 + delta0_2_1) < ((5 * deltaext0_2_0) - 4)))
		next(deltaext0_2_0) := deltaext0_2_0 - 1;
	else next(deltaext0_2_0) := deltaext0_2_0;
	if (((delta0_1_3 + delta1_2_3 + delta0_3_3 + 2 + delta0_2_2) > (5 * deltaext0_2_3)))
		next(deltaext0_2_3) := deltaext0_2_3 + 1;
	else if (((delta0_1_3 + delta1_2_3 + delta0_3_3 + 2 + delta0_2_2) < ((5 * deltaext0_2_3) - 4)))
		next(deltaext0_2_3) := deltaext0_2_3 - 1;
	else next(deltaext0_2_3) := deltaext0_2_3;
	if (((delta0_1_1 + delta1_2_1 + delta0_3_1 + 2 + delta0_2_0 + delta0_2_2) > (6 * deltaext0_2_1)))
		next(deltaext0_2_1) := deltaext0_2_1 + 1;
	else if (((delta0_1_1 + delta1_2_1 + delta0_3_1 + 2 + delta0_2_0 + delta0_2_2) < ((6 * deltaext0_2_1) - 5)))
		next(deltaext0_2_1) := deltaext0_2_1 - 1;
	else next(deltaext0_2_1) := deltaext0_2_1;
	if (((delta0_1_2 + delta1_2_2 + delta0_3_2 + 2 + delta0_2_1 + delta0_2_3) > (6 * deltaext0_2_2)))
		next(deltaext0_2_2) := deltaext0_2_2 + 1;
	else if (((delta0_1_2 + delta1_2_2 + delta0_3_2 + 2 + delta0_2_1 + delta0_2_3) < ((6 * deltaext0_2_2) - 5)))
		next(deltaext0_2_2) := deltaext0_2_2 - 1;
	else next(deltaext0_2_2) := deltaext0_2_2;
	if (((wnt1_0_3 + wnt2_1_3 + wnt1_2_3 + wnt0_1_3 + wnt1_1_2) > (4 + (5 * wntext1_1_3))))
		next(wntext1_1_3) := wntext1_1_3 + 1;
	else if (((wnt1_0_3 + wnt2_1_3 + wnt1_2_3 + wnt0_1_3 + wnt1_1_2) < (5 * wntext1_1_3)))
		next(wntext1_1_3) := wntext1_1_3 - 1;
	else next(wntext1_1_3) := wntext1_1_3;
	if (((wnt1_0_2 + wnt2_1_2 + wnt1_2_2 + wnt0_1_2 + wnt1_1_1 + wnt1_1_3) > (5 + (6 * wntext1_1_2))))
		next(wntext1_1_2) := wntext1_1_2 + 1;
	else if (((wnt1_0_2 + wnt2_1_2 + wnt1_2_2 + wnt0_1_2 + wnt1_1_1 + wnt1_1_3) < (6 * wntext1_1_2)))
		next(wntext1_1_2) := wntext1_1_2 - 1;
	else next(wntext1_1_2) := wntext1_1_2;
	if (((wnt1_0_1 + wnt2_1_1 + wnt1_2_1 + wnt0_1_1 + wnt1_1_0 + wnt1_1_2) > (5 + (6 * wntext1_1_1))))
		next(wntext1_1_1) := wntext1_1_1 + 1;
	else if (((wnt1_0_1 + wnt2_1_1 + wnt1_2_1 + wnt0_1_1 + wnt1_1_0 + wnt1_1_2) < (6 * wntext1_1_1)))
		next(wntext1_1_1) := wntext1_1_1 - 1;
	else next(wntext1_1_1) := wntext1_1_1;
	if ((notchic3_4_0 > gt2_3_4_0))
		next(gt2_3_4_0) := gt2_3_4_0 + 1;
	else if ((notchic3_4_0 < gt2_3_4_0))
		next(gt2_3_4_0) := gt2_3_4_0 - 1;
	else next(gt2_3_4_0) := gt2_3_4_0;
	if (((wnt1_0_0 + wnt2_1_0 + wnt1_2_0 + wnt0_1_0 + wnt1_1_1) > (4 + (5 * wntext1_1_0))))
		next(wntext1_1_0) := wntext1_1_0 + 1;
	else if (((wnt1_0_0 + wnt2_1_0 + wnt1_2_0 + wnt0_1_0 + wnt1_1_1) < (5 * wntext1_1_0)))
		next(wntext1_1_0) := wntext1_1_0 - 1;
	else next(wntext1_1_0) := wntext1_1_0;
	if (((3 - dsh4_3_2) > axin4_3_2))
		next(axin4_3_2) := axin4_3_2 + 1;
	else if ((((3 - dsh4_3_2) < axin4_3_2) & (axin4_3_2 > 0)))
		next(axin4_3_2) := axin4_3_2 - 1;
	else next(axin4_3_2) := axin4_3_2;
	if (((3 - dsh4_3_1) > axin4_3_1))
		next(axin4_3_1) := axin4_3_1 + 1;
	else if ((((3 - dsh4_3_1) < axin4_3_1) & (axin4_3_1 > 0)))
		next(axin4_3_1) := axin4_3_1 - 1;
	else next(axin4_3_1) := axin4_3_1;
	if (((3 - dsh4_3_0) > axin4_3_0))
		next(axin4_3_0) := axin4_3_0 + 1;
	else if ((((3 - dsh4_3_0) < axin4_3_0) & (axin4_3_0 > 0)))
		next(axin4_3_0) := axin4_3_0 - 1;
	else next(axin4_3_0) := axin4_3_0;
	if (((wnt3_3_1 + wnt4_4_1 + wnt2_4_1 + wnt3_4_0 + wnt3_4_2) > (4 + (5 * wntext3_4_1))))
		next(wntext3_4_1) := wntext3_4_1 + 1;
	else if (((wnt3_3_1 + wnt4_4_1 + wnt2_4_1 + wnt3_4_0 + wnt3_4_2) < (5 * wntext3_4_1)))
		next(wntext3_4_1) := wntext3_4_1 - 1;
	else next(wntext3_4_1) := wntext3_4_1;
	if (((wnt3_3_2 + wnt4_4_2 + wnt2_4_2 + wnt3_4_1 + wnt3_4_3) > (4 + (5 * wntext3_4_2))))
		next(wntext3_4_2) := wntext3_4_2 + 1;
	else if (((wnt3_3_2 + wnt4_4_2 + wnt2_4_2 + wnt3_4_1 + wnt3_4_3) < (5 * wntext3_4_2)))
		next(wntext3_4_2) := wntext3_4_2 - 1;
	else next(wntext3_4_2) := wntext3_4_2;
	if (((wnt3_3_0 + wnt4_4_0 + wnt2_4_0 + wnt3_4_1) > (3 + (4 * wntext3_4_0))))
		next(wntext3_4_0) := wntext3_4_0 + 1;
	else if (((wnt3_3_0 + wnt4_4_0 + wnt2_4_0 + wnt3_4_1) < (4 * wntext3_4_0)))
		next(wntext3_4_0) := wntext3_4_0 - 1;
	else next(wntext3_4_0) := wntext3_4_0;
	if (((wnt3_3_3 + wnt4_4_3 + wnt2_4_3 + wnt3_4_2) > (3 + (4 * wntext3_4_3))))
		next(wntext3_4_3) := wntext3_4_3 + 1;
	else if (((wnt3_3_3 + wnt4_4_3 + wnt2_4_3 + wnt3_4_2) < (4 * wntext3_4_3)))
		next(wntext3_4_3) := wntext3_4_3 - 1;
	else next(wntext3_4_3) := wntext3_4_3;
	if (((gt1_3_1_1 + gt2_3_1_1) > (2 * delta3_1_1)))
		next(delta3_1_1) := delta3_1_1 + 1;
	else if (((gt1_3_1_1 + gt2_3_1_1) < ((2 * delta3_1_1) - 1)))
		next(delta3_1_1) := delta3_1_1 - 1;
	else next(delta3_1_1) := delta3_1_1;
	if (((gt1_3_1_0 + gt2_3_1_0) > (2 * delta3_1_0)))
		next(delta3_1_0) := delta3_1_0 + 1;
	else if (((gt1_3_1_0 + gt2_3_1_0) < ((2 * delta3_1_0) - 1)))
		next(delta3_1_0) := delta3_1_0 - 1;
	else next(delta3_1_0) := delta3_1_0;
	if (((wnt0_1_3 + wnt1_2_3 + wnt0_3_3 + 3 + wnt0_2_2) > (4 + (5 * wntext0_2_3))))
		next(wntext0_2_3) := wntext0_2_3 + 1;
	else if (((wnt0_1_3 + wnt1_2_3 + wnt0_3_3 + 3 + wnt0_2_2) < (5 * wntext0_2_3)))
		next(wntext0_2_3) := wntext0_2_3 - 1;
	else next(wntext0_2_3) := wntext0_2_3;
	if (((wnt0_1_2 + wnt1_2_2 + wnt0_3_2 + 3 + wnt0_2_1 + wnt0_2_3) > (5 + (6 * wntext0_2_2))))
		next(wntext0_2_2) := wntext0_2_2 + 1;
	else if (((wnt0_1_2 + wnt1_2_2 + wnt0_3_2 + 3 + wnt0_2_1 + wnt0_2_3) < (6 * wntext0_2_2)))
		next(wntext0_2_2) := wntext0_2_2 - 1;
	else next(wntext0_2_2) := wntext0_2_2;
	if (((wnt0_1_1 + wnt1_2_1 + wnt0_3_1 + 3 + wnt0_2_0 + wnt0_2_2) > (5 + (6 * wntext0_2_1))))
		next(wntext0_2_1) := wntext0_2_1 + 1;
	else if (((wnt0_1_1 + wnt1_2_1 + wnt0_3_1 + 3 + wnt0_2_0 + wnt0_2_2) < (6 * wntext0_2_1)))
		next(wntext0_2_1) := wntext0_2_1 - 1;
	else next(wntext0_2_1) := wntext0_2_1;
	if (((wnt0_1_0 + wnt1_2_0 + wnt0_3_0 + 3 + wnt0_2_1) > (4 + (5 * wntext0_2_0))))
		next(wntext0_2_0) := wntext0_2_0 + 1;
	else if (((wnt0_1_0 + wnt1_2_0 + wnt0_3_0 + 3 + wnt0_2_1) < (5 * wntext0_2_0)))
		next(wntext0_2_0) := wntext0_2_0 - 1;
	else next(wntext0_2_0) := wntext0_2_0;
	if (((gt1_3_1_2 + gt2_3_1_2) > (2 * delta3_1_2)))
		next(delta3_1_2) := delta3_1_2 + 1;
	else if (((gt1_3_1_2 + gt2_3_1_2) < ((2 * delta3_1_2) - 1)))
		next(delta3_1_2) := delta3_1_2 - 1;
	else next(delta3_1_2) := delta3_1_2;
	if (((gt1_3_1_3 + gt2_3_1_3) > (2 * delta3_1_3)))
		next(delta3_1_3) := delta3_1_3 + 1;
	else if (((gt1_3_1_3 + gt2_3_1_3) < ((2 * delta3_1_3) - 1)))
		next(delta3_1_3) := delta3_1_3 - 1;
	else next(delta3_1_3) := delta3_1_3;
	if (((delta2_0_0 + delta3_1_0 + delta2_2_0 + delta1_1_0 + delta2_1_1) > (5 * deltaext2_1_0)))
		next(deltaext2_1_0) := deltaext2_1_0 + 1;
	else if (((delta2_0_0 + delta3_1_0 + delta2_2_0 + delta1_1_0 + delta2_1_1) < ((5 * deltaext2_1_0) - 4)))
		next(deltaext2_1_0) := deltaext2_1_0 - 1;
	else next(deltaext2_1_0) := deltaext2_1_0;
	if ((wntext2_1_0 > frizzled2_1_0))
		next(frizzled2_1_0) := frizzled2_1_0 + 1;
	else if ((wntext2_1_0 < frizzled2_1_0))
		next(frizzled2_1_0) := frizzled2_1_0 - 1;
	else next(frizzled2_1_0) := frizzled2_1_0;
	if (((delta2_0_1 + delta3_1_1 + delta2_2_1 + delta1_1_1 + delta2_1_0 + delta2_1_2) > (6 * deltaext2_1_1)))
		next(deltaext2_1_1) := deltaext2_1_1 + 1;
	else if (((delta2_0_1 + delta3_1_1 + delta2_2_1 + delta1_1_1 + delta2_1_0 + delta2_1_2) < ((6 * deltaext2_1_1) - 5)))
		next(deltaext2_1_1) := deltaext2_1_1 - 1;
	else next(deltaext2_1_1) := deltaext2_1_1;
	if (((delta2_0_2 + delta3_1_2 + delta2_2_2 + delta1_1_2 + delta2_1_1 + delta2_1_3) > (6 * deltaext2_1_2)))
		next(deltaext2_1_2) := deltaext2_1_2 + 1;
	else if (((delta2_0_2 + delta3_1_2 + delta2_2_2 + delta1_1_2 + delta2_1_1 + delta2_1_3) < ((6 * deltaext2_1_2) - 5)))
		next(deltaext2_1_2) := deltaext2_1_2 - 1;
	else next(deltaext2_1_2) := deltaext2_1_2;
	if (((delta2_0_3 + delta3_1_3 + delta2_2_3 + delta1_1_3 + delta2_1_2) > (5 * deltaext2_1_3)))
		next(deltaext2_1_3) := deltaext2_1_3 + 1;
	else if (((delta2_0_3 + delta3_1_3 + delta2_2_3 + delta1_1_3 + delta2_1_2) < ((5 * deltaext2_1_3) - 4)))
		next(deltaext2_1_3) := deltaext2_1_3 - 1;
	else next(deltaext2_1_3) := deltaext2_1_3;
	if (((wnt0_3_0 + wnt1_4_0 + 3 + wnt0_4_1) > (3 + (4 * wntext0_4_0))))
		next(wntext0_4_0) := wntext0_4_0 + 1;
	else if (((wnt0_3_0 + wnt1_4_0 + 3 + wnt0_4_1) < (4 * wntext0_4_0)))
		next(wntext0_4_0) := wntext0_4_0 - 1;
	else next(wntext0_4_0) := wntext0_4_0;
	if (((3 - p21_3_0_2) > wnt3_0_2))
		next(wnt3_0_2) := wnt3_0_2 + 1;
	else if (((3 - p21_3_0_2) < wnt3_0_2))
		next(wnt3_0_2) := wnt3_0_2 - 1;
	else next(wnt3_0_2) := wnt3_0_2;
	if ((wntext2_1_3 > frizzled2_1_3))
		next(frizzled2_1_3) := frizzled2_1_3 + 1;
	else if ((wntext2_1_3 < frizzled2_1_3))
		next(frizzled2_1_3) := frizzled2_1_3 - 1;
	else next(frizzled2_1_3) := frizzled2_1_3;
	if (((3 - p21_3_0_3) > wnt3_0_3))
		next(wnt3_0_3) := wnt3_0_3 + 1;
	else if (((3 - p21_3_0_3) < wnt3_0_3))
		next(wnt3_0_3) := wnt3_0_3 - 1;
	else next(wnt3_0_3) := wnt3_0_3;
	if (((wnt0_3_1 + wnt1_4_1 + 3 + wnt0_4_0 + wnt0_4_2) > (4 + (5 * wntext0_4_1))))
		next(wntext0_4_1) := wntext0_4_1 + 1;
	else if (((wnt0_3_1 + wnt1_4_1 + 3 + wnt0_4_0 + wnt0_4_2) < (5 * wntext0_4_1)))
		next(wntext0_4_1) := wntext0_4_1 - 1;
	else next(wntext0_4_1) := wntext0_4_1;
	if (((3 - p21_3_0_0) > wnt3_0_0))
		next(wnt3_0_0) := wnt3_0_0 + 1;
	else if (((3 - p21_3_0_0) < wnt3_0_0))
		next(wnt3_0_0) := wnt3_0_0 - 1;
	else next(wnt3_0_0) := wnt3_0_0;
	if ((wntext2_1_2 > frizzled2_1_2))
		next(frizzled2_1_2) := frizzled2_1_2 + 1;
	else if ((wntext2_1_2 < frizzled2_1_2))
		next(frizzled2_1_2) := frizzled2_1_2 - 1;
	else next(frizzled2_1_2) := frizzled2_1_2;
	if (((3 - p21_3_0_1) > wnt3_0_1))
		next(wnt3_0_1) := wnt3_0_1 + 1;
	else if (((3 - p21_3_0_1) < wnt3_0_1))
		next(wnt3_0_1) := wnt3_0_1 - 1;
	else next(wnt3_0_1) := wnt3_0_1;
	if ((wntext2_1_1 > frizzled2_1_1))
		next(frizzled2_1_1) := frizzled2_1_1 + 1;
	else if ((wntext2_1_1 < frizzled2_1_1))
		next(frizzled2_1_1) := frizzled2_1_1 - 1;
	else next(frizzled2_1_1) := frizzled2_1_1;
	if (((wnt0_3_2 + wnt1_4_2 + 3 + wnt0_4_1 + wnt0_4_3) > (4 + (5 * wntext0_4_2))))
		next(wntext0_4_2) := wntext0_4_2 + 1;
	else if (((wnt0_3_2 + wnt1_4_2 + 3 + wnt0_4_1 + wnt0_4_3) < (5 * wntext0_4_2)))
		next(wntext0_4_2) := wntext0_4_2 - 1;
	else next(wntext0_4_2) := wntext0_4_2;
	if (((wnt0_3_3 + wnt1_4_3 + 3 + wnt0_4_2) > (3 + (4 * wntext0_4_3))))
		next(wntext0_4_3) := wntext0_4_3 + 1;
	else if (((wnt0_3_3 + wnt1_4_3 + 3 + wnt0_4_2) < (4 * wntext0_4_3)))
		next(wntext0_4_3) := wntext0_4_3 - 1;
	else next(wntext0_4_3) := wntext0_4_3;
	if (((wnt2_0_1 + wnt3_1_1 + wnt2_2_1 + wnt1_1_1 + wnt2_1_0 + wnt2_1_2) > (5 + (6 * wntext2_1_1))))
		next(wntext2_1_1) := wntext2_1_1 + 1;
	else if (((wnt2_0_1 + wnt3_1_1 + wnt2_2_1 + wnt1_1_1 + wnt2_1_0 + wnt2_1_2) < (6 * wntext2_1_1)))
		next(wntext2_1_1) := wntext2_1_1 - 1;
	else next(wntext2_1_1) := wntext2_1_1;
	if (((wnt2_0_2 + wnt3_1_2 + wnt2_2_2 + wnt1_1_2 + wnt2_1_1 + wnt2_1_3) > (5 + (6 * wntext2_1_2))))
		next(wntext2_1_2) := wntext2_1_2 + 1;
	else if (((wnt2_0_2 + wnt3_1_2 + wnt2_2_2 + wnt1_1_2 + wnt2_1_1 + wnt2_1_3) < (6 * wntext2_1_2)))
		next(wntext2_1_2) := wntext2_1_2 - 1;
	else next(wntext2_1_2) := wntext2_1_2;
	if (((wnt2_0_0 + wnt3_1_0 + wnt2_2_0 + wnt1_1_0 + wnt2_1_1) > (4 + (5 * wntext2_1_0))))
		next(wntext2_1_0) := wntext2_1_0 + 1;
	else if (((wnt2_0_0 + wnt3_1_0 + wnt2_2_0 + wnt1_1_0 + wnt2_1_1) < (5 * wntext2_1_0)))
		next(wntext2_1_0) := wntext2_1_0 - 1;
	else next(wntext2_1_0) := wntext2_1_0;
	if (((wnt2_0_3 + wnt3_1_3 + wnt2_2_3 + wnt1_1_3 + wnt2_1_2) > (4 + (5 * wntext2_1_3))))
		next(wntext2_1_3) := wntext2_1_3 + 1;
	else if (((wnt2_0_3 + wnt3_1_3 + wnt2_2_3 + wnt1_1_3 + wnt2_1_2) < (5 * wntext2_1_3)))
		next(wntext2_1_3) := wntext2_1_3 - 1;
	else next(wntext2_1_3) := wntext2_1_3;
	if (((3 - axin0_3_3) > bcat0_3_3))
		next(bcat0_3_3) := bcat0_3_3 + 1;
	else if ((((3 - axin0_3_3) < bcat0_3_3) & (bcat0_3_3 > 0)))
		next(bcat0_3_3) := bcat0_3_3 - 1;
	else next(bcat0_3_3) := bcat0_3_3;
	if (((3 - axin0_3_0) > bcat0_3_0))
		next(bcat0_3_0) := bcat0_3_0 + 1;
	else if ((((3 - axin0_3_0) < bcat0_3_0) & (bcat0_3_0 > 0)))
		next(bcat0_3_0) := bcat0_3_0 - 1;
	else next(bcat0_3_0) := bcat0_3_0;
	if (((3 - axin0_3_2) > bcat0_3_2))
		next(bcat0_3_2) := bcat0_3_2 + 1;
	else if ((((3 - axin0_3_2) < bcat0_3_2) & (bcat0_3_2 > 0)))
		next(bcat0_3_2) := bcat0_3_2 - 1;
	else next(bcat0_3_2) := bcat0_3_2;
	if (((3 - axin0_3_1) > bcat0_3_1))
		next(bcat0_3_1) := bcat0_3_1 + 1;
	else if ((((3 - axin0_3_1) < bcat0_3_1) & (bcat0_3_1 > 0)))
		next(bcat0_3_1) := bcat0_3_1 - 1;
	else next(bcat0_3_1) := bcat0_3_1;
	if (((gt1_0_4_2 + gt2_0_4_2) > (2 * delta0_4_2)))
		next(delta0_4_2) := delta0_4_2 + 1;
	else if (((gt1_0_4_2 + gt2_0_4_2) < ((2 * delta0_4_2) - 1)))
		next(delta0_4_2) := delta0_4_2 - 1;
	else next(delta0_4_2) := delta0_4_2;
	if (((gt1_1_2_1 + gt2_1_2_1) > (2 * delta1_2_1)))
		next(delta1_2_1) := delta1_2_1 + 1;
	else if (((gt1_1_2_1 + gt2_1_2_1) < ((2 * delta1_2_1) - 1)))
		next(delta1_2_1) := delta1_2_1 - 1;
	else next(delta1_2_1) := delta1_2_1;
	if (((3 > notchic4_2_1) & (deltaext4_2_1 > notchic4_2_1)))
		next(notchic4_2_1) := notchic4_2_1 + 1;
	else if (((3 < notchic4_2_1) | (deltaext4_2_1 < notchic4_2_1)))
		next(notchic4_2_1) := notchic4_2_1 - 1;
	else next(notchic4_2_1) := notchic4_2_1;
	if (((gt1_0_4_3 + gt2_0_4_3) > (2 * delta0_4_3)))
		next(delta0_4_3) := delta0_4_3 + 1;
	else if (((gt1_0_4_3 + gt2_0_4_3) < ((2 * delta0_4_3) - 1)))
		next(delta0_4_3) := delta0_4_3 - 1;
	else next(delta0_4_3) := delta0_4_3;
	if (((3 > notchic4_2_0) & (deltaext4_2_0 > notchic4_2_0)))
		next(notchic4_2_0) := notchic4_2_0 + 1;
	else if (((3 < notchic4_2_0) | (deltaext4_2_0 < notchic4_2_0)))
		next(notchic4_2_0) := notchic4_2_0 - 1;
	else next(notchic4_2_0) := notchic4_2_0;
	if (((gt1_1_2_2 + gt2_1_2_2) > (2 * delta1_2_2)))
		next(delta1_2_2) := delta1_2_2 + 1;
	else if (((gt1_1_2_2 + gt2_1_2_2) < ((2 * delta1_2_2) - 1)))
		next(delta1_2_2) := delta1_2_2 - 1;
	else next(delta1_2_2) := delta1_2_2;
	if (((gt1_1_2_0 + gt2_1_2_0) > (2 * delta1_2_0)))
		next(delta1_2_0) := delta1_2_0 + 1;
	else if (((gt1_1_2_0 + gt2_1_2_0) < ((2 * delta1_2_0) - 1)))
		next(delta1_2_0) := delta1_2_0 - 1;
	else next(delta1_2_0) := delta1_2_0;
	if (((3 - axin0_1_0) > bcat0_1_0))
		next(bcat0_1_0) := bcat0_1_0 + 1;
	else if ((((3 - axin0_1_0) < bcat0_1_0) & (bcat0_1_0 > 0)))
		next(bcat0_1_0) := bcat0_1_0 - 1;
	else next(bcat0_1_0) := bcat0_1_0;
	if (((3 > notchic4_2_3) & (deltaext4_2_3 > notchic4_2_3)))
		next(notchic4_2_3) := notchic4_2_3 + 1;
	else if (((3 < notchic4_2_3) | (deltaext4_2_3 < notchic4_2_3)))
		next(notchic4_2_3) := notchic4_2_3 - 1;
	else next(notchic4_2_3) := notchic4_2_3;
	if (((3 > notchic4_2_2) & (deltaext4_2_2 > notchic4_2_2)))
		next(notchic4_2_2) := notchic4_2_2 + 1;
	else if (((3 < notchic4_2_2) | (deltaext4_2_2 < notchic4_2_2)))
		next(notchic4_2_2) := notchic4_2_2 - 1;
	else next(notchic4_2_2) := notchic4_2_2;
	if (((3 - dsh3_0_3) > axin3_0_3))
		next(axin3_0_3) := axin3_0_3 + 1;
	else if ((((3 - dsh3_0_3) < axin3_0_3) & (axin3_0_3 > 0)))
		next(axin3_0_3) := axin3_0_3 - 1;
	else next(axin3_0_3) := axin3_0_3;
	if (((3 - dsh2_3_0) > axin2_3_0))
		next(axin2_3_0) := axin2_3_0 + 1;
	else if ((((3 - dsh2_3_0) < axin2_3_0) & (axin2_3_0 > 0)))
		next(axin2_3_0) := axin2_3_0 - 1;
	else next(axin2_3_0) := axin2_3_0;
	if (((3 - dsh2_3_2) > axin2_3_2))
		next(axin2_3_2) := axin2_3_2 + 1;
	else if ((((3 - dsh2_3_2) < axin2_3_2) & (axin2_3_2 > 0)))
		next(axin2_3_2) := axin2_3_2 - 1;
	else next(axin2_3_2) := axin2_3_2;
	if (((3 - axin0_1_3) > bcat0_1_3))
		next(bcat0_1_3) := bcat0_1_3 + 1;
	else if ((((3 - axin0_1_3) < bcat0_1_3) & (bcat0_1_3 > 0)))
		next(bcat0_1_3) := bcat0_1_3 - 1;
	else next(bcat0_1_3) := bcat0_1_3;
	if (((3 - dsh3_0_0) > axin3_0_0))
		next(axin3_0_0) := axin3_0_0 + 1;
	else if ((((3 - dsh3_0_0) < axin3_0_0) & (axin3_0_0 > 0)))
		next(axin3_0_0) := axin3_0_0 - 1;
	else next(axin3_0_0) := axin3_0_0;
	if (((3 - dsh2_3_1) > axin2_3_1))
		next(axin2_3_1) := axin2_3_1 + 1;
	else if ((((3 - dsh2_3_1) < axin2_3_1) & (axin2_3_1 > 0)))
		next(axin2_3_1) := axin2_3_1 - 1;
	else next(axin2_3_1) := axin2_3_1;
	if (((3 - dsh3_0_1) > axin3_0_1))
		next(axin3_0_1) := axin3_0_1 + 1;
	else if ((((3 - dsh3_0_1) < axin3_0_1) & (axin3_0_1 > 0)))
		next(axin3_0_1) := axin3_0_1 - 1;
	else next(axin3_0_1) := axin3_0_1;
	if (((delta1_3_1 + delta2_4_1 + delta0_4_1 + delta1_4_0 + delta1_4_2) > (5 * deltaext1_4_1)))
		next(deltaext1_4_1) := deltaext1_4_1 + 1;
	else if (((delta1_3_1 + delta2_4_1 + delta0_4_1 + delta1_4_0 + delta1_4_2) < ((5 * deltaext1_4_1) - 4)))
		next(deltaext1_4_1) := deltaext1_4_1 - 1;
	else next(deltaext1_4_1) := deltaext1_4_1;
	if (((3 - axin0_1_2) > bcat0_1_2))
		next(bcat0_1_2) := bcat0_1_2 + 1;
	else if ((((3 - axin0_1_2) < bcat0_1_2) & (bcat0_1_2 > 0)))
		next(bcat0_1_2) := bcat0_1_2 - 1;
	else next(bcat0_1_2) := bcat0_1_2;
	if (((3 - dsh2_3_3) > axin2_3_3))
		next(axin2_3_3) := axin2_3_3 + 1;
	else if ((((3 - dsh2_3_3) < axin2_3_3) & (axin2_3_3 > 0)))
		next(axin2_3_3) := axin2_3_3 - 1;
	else next(axin2_3_3) := axin2_3_3;
	if (((3 - axin0_1_1) > bcat0_1_1))
		next(bcat0_1_1) := bcat0_1_1 + 1;
	else if ((((3 - axin0_1_1) < bcat0_1_1) & (bcat0_1_1 > 0)))
		next(bcat0_1_1) := bcat0_1_1 - 1;
	else next(bcat0_1_1) := bcat0_1_1;
	if (((delta1_3_0 + delta2_4_0 + delta0_4_0 + delta1_4_1) > (4 * deltaext1_4_0)))
		next(deltaext1_4_0) := deltaext1_4_0 + 1;
	else if (((delta1_3_0 + delta2_4_0 + delta0_4_0 + delta1_4_1) < ((4 * deltaext1_4_0) - 3)))
		next(deltaext1_4_0) := deltaext1_4_0 - 1;
	else next(deltaext1_4_0) := deltaext1_4_0;
	if (((3 - dsh3_0_2) > axin3_0_2))
		next(axin3_0_2) := axin3_0_2 + 1;
	else if ((((3 - dsh3_0_2) < axin3_0_2) & (axin3_0_2 > 0)))
		next(axin3_0_2) := axin3_0_2 - 1;
	else next(axin3_0_2) := axin3_0_2;
	if ((frizzled4_1_1 > dsh4_1_1))
		next(dsh4_1_1) := dsh4_1_1 + 1;
	else if ((frizzled4_1_1 < dsh4_1_1))
		next(dsh4_1_1) := dsh4_1_1 - 1;
	else next(dsh4_1_1) := dsh4_1_1;
	if ((frizzled4_1_0 > dsh4_1_0))
		next(dsh4_1_0) := dsh4_1_0 + 1;
	else if ((frizzled4_1_0 < dsh4_1_0))
		next(dsh4_1_0) := dsh4_1_0 - 1;
	else next(dsh4_1_0) := dsh4_1_0;
	if (((gt1_0_4_1 + gt2_0_4_1) > (2 * delta0_4_1)))
		next(delta0_4_1) := delta0_4_1 + 1;
	else if (((gt1_0_4_1 + gt2_0_4_1) < ((2 * delta0_4_1) - 1)))
		next(delta0_4_1) := delta0_4_1 - 1;
	else next(delta0_4_1) := delta0_4_1;
	if (((gt1_1_2_3 + gt2_1_2_3) > (2 * delta1_2_3)))
		next(delta1_2_3) := delta1_2_3 + 1;
	else if (((gt1_1_2_3 + gt2_1_2_3) < ((2 * delta1_2_3) - 1)))
		next(delta1_2_3) := delta1_2_3 - 1;
	else next(delta1_2_3) := delta1_2_3;
	if (((gt1_0_4_0 + gt2_0_4_0) > (2 * delta0_4_0)))
		next(delta0_4_0) := delta0_4_0 + 1;
	else if (((gt1_0_4_0 + gt2_0_4_0) < ((2 * delta0_4_0) - 1)))
		next(delta0_4_0) := delta0_4_0 - 1;
	else next(delta0_4_0) := delta0_4_0;
	if (((3 - axin2_1_3) > bcat2_1_3))
		next(bcat2_1_3) := bcat2_1_3 + 1;
	else if ((((3 - axin2_1_3) < bcat2_1_3) & (bcat2_1_3 > 0)))
		next(bcat2_1_3) := bcat2_1_3 - 1;
	else next(bcat2_1_3) := bcat2_1_3;
	if ((frizzled1_3_3 > dsh1_3_3))
		next(dsh1_3_3) := dsh1_3_3 + 1;
	else if ((frizzled1_3_3 < dsh1_3_3))
		next(dsh1_3_3) := dsh1_3_3 - 1;
	else next(dsh1_3_3) := dsh1_3_3;
	if (((3 - axin3_4_0) > bcat3_4_0))
		next(bcat3_4_0) := bcat3_4_0 + 1;
	else if ((((3 - axin3_4_0) < bcat3_4_0) & (bcat3_4_0 > 0)))
		next(bcat3_4_0) := bcat3_4_0 - 1;
	else next(bcat3_4_0) := bcat3_4_0;
	if (((3 - axin2_1_0) > bcat2_1_0))
		next(bcat2_1_0) := bcat2_1_0 + 1;
	else if ((((3 - axin2_1_0) < bcat2_1_0) & (bcat2_1_0 > 0)))
		next(bcat2_1_0) := bcat2_1_0 - 1;
	else next(bcat2_1_0) := bcat2_1_0;
	if (((3 - axin3_4_2) > bcat3_4_2))
		next(bcat3_4_2) := bcat3_4_2 + 1;
	else if ((((3 - axin3_4_2) < bcat3_4_2) & (bcat3_4_2 > 0)))
		next(bcat3_4_2) := bcat3_4_2 - 1;
	else next(bcat3_4_2) := bcat3_4_2;
	if (((3 - axin2_1_1) > bcat2_1_1))
		next(bcat2_1_1) := bcat2_1_1 + 1;
	else if ((((3 - axin2_1_1) < bcat2_1_1) & (bcat2_1_1 > 0)))
		next(bcat2_1_1) := bcat2_1_1 - 1;
	else next(bcat2_1_1) := bcat2_1_1;
	if (((3 - axin3_4_1) > bcat3_4_1))
		next(bcat3_4_1) := bcat3_4_1 + 1;
	else if ((((3 - axin3_4_1) < bcat3_4_1) & (bcat3_4_1 > 0)))
		next(bcat3_4_1) := bcat3_4_1 - 1;
	else next(bcat3_4_1) := bcat3_4_1;
	if (((3 - axin2_1_2) > bcat2_1_2))
		next(bcat2_1_2) := bcat2_1_2 + 1;
	else if ((((3 - axin2_1_2) < bcat2_1_2) & (bcat2_1_2 > 0)))
		next(bcat2_1_2) := bcat2_1_2 - 1;
	else next(bcat2_1_2) := bcat2_1_2;
	if (((delta1_3_2 + delta2_4_2 + delta0_4_2 + delta1_4_1 + delta1_4_3) > (5 * deltaext1_4_2)))
		next(deltaext1_4_2) := deltaext1_4_2 + 1;
	else if (((delta1_3_2 + delta2_4_2 + delta0_4_2 + delta1_4_1 + delta1_4_3) < ((5 * deltaext1_4_2) - 4)))
		next(deltaext1_4_2) := deltaext1_4_2 - 1;
	else next(deltaext1_4_2) := deltaext1_4_2;
	if (((3 - dsh3_2_2) > axin3_2_2))
		next(axin3_2_2) := axin3_2_2 + 1;
	else if ((((3 - dsh3_2_2) < axin3_2_2) & (axin3_2_2 > 0)))
		next(axin3_2_2) := axin3_2_2 - 1;
	else next(axin3_2_2) := axin3_2_2;
	if (((3 - axin3_4_3) > bcat3_4_3))
		next(bcat3_4_3) := bcat3_4_3 + 1;
	else if ((((3 - axin3_4_3) < bcat3_4_3) & (bcat3_4_3 > 0)))
		next(bcat3_4_3) := bcat3_4_3 - 1;
	else next(bcat3_4_3) := bcat3_4_3;
	if (((delta1_3_3 + delta2_4_3 + delta0_4_3 + delta1_4_2) > (4 * deltaext1_4_3)))
		next(deltaext1_4_3) := deltaext1_4_3 + 1;
	else if (((delta1_3_3 + delta2_4_3 + delta0_4_3 + delta1_4_2) < ((4 * deltaext1_4_3) - 3)))
		next(deltaext1_4_3) := deltaext1_4_3 - 1;
	else next(deltaext1_4_3) := deltaext1_4_3;
	if (((3 - dsh2_1_0) > axin2_1_0))
		next(axin2_1_0) := axin2_1_0 + 1;
	else if ((((3 - dsh2_1_0) < axin2_1_0) & (axin2_1_0 > 0)))
		next(axin2_1_0) := axin2_1_0 - 1;
	else next(axin2_1_0) := axin2_1_0;
	if (((3 - dsh3_2_1) > axin3_2_1))
		next(axin3_2_1) := axin3_2_1 + 1;
	else if ((((3 - dsh3_2_1) < axin3_2_1) & (axin3_2_1 > 0)))
		next(axin3_2_1) := axin3_2_1 - 1;
	else next(axin3_2_1) := axin3_2_1;
	if (((3 - dsh2_1_1) > axin2_1_1))
		next(axin2_1_1) := axin2_1_1 + 1;
	else if ((((3 - dsh2_1_1) < axin2_1_1) & (axin2_1_1 > 0)))
		next(axin2_1_1) := axin2_1_1 - 1;
	else next(axin2_1_1) := axin2_1_1;
	if (((3 - dsh3_2_3) > axin3_2_3))
		next(axin3_2_3) := axin3_2_3 + 1;
	else if ((((3 - dsh3_2_3) < axin3_2_3) & (axin3_2_3 > 0)))
		next(axin3_2_3) := axin3_2_3 - 1;
	else next(axin3_2_3) := axin3_2_3;
	if (((3 - dsh2_1_2) > axin2_1_2))
		next(axin2_1_2) := axin2_1_2 + 1;
	else if ((((3 - dsh2_1_2) < axin2_1_2) & (axin2_1_2 > 0)))
		next(axin2_1_2) := axin2_1_2 - 1;
	else next(axin2_1_2) := axin2_1_2;
	if (((3 - dsh2_1_3) > axin2_1_3))
		next(axin2_1_3) := axin2_1_3 + 1;
	else if ((((3 - dsh2_1_3) < axin2_1_3) & (axin2_1_3 > 0)))
		next(axin2_1_3) := axin2_1_3 - 1;
	else next(axin2_1_3) := axin2_1_3;
	if (((3 - dsh3_2_0) > axin3_2_0))
		next(axin3_2_0) := axin3_2_0 + 1;
	else if ((((3 - dsh3_2_0) < axin3_2_0) & (axin3_2_0 > 0)))
		next(axin3_2_0) := axin3_2_0 - 1;
	else next(axin3_2_0) := axin3_2_0;
	if (((3 - axin4_1_0) > bcat4_1_0))
		next(bcat4_1_0) := bcat4_1_0 + 1;
	else if ((((3 - axin4_1_0) < bcat4_1_0) & (bcat4_1_0 > 0)))
		next(bcat4_1_0) := bcat4_1_0 - 1;
	else next(bcat4_1_0) := bcat4_1_0;
	if (((3 - axin4_1_3) > bcat4_1_3))
		next(bcat4_1_3) := bcat4_1_3 + 1;
	else if ((((3 - axin4_1_3) < bcat4_1_3) & (bcat4_1_3 > 0)))
		next(bcat4_1_3) := bcat4_1_3 - 1;
	else next(bcat4_1_3) := bcat4_1_3;
	if (((3 - axin4_1_1) > bcat4_1_1))
		next(bcat4_1_1) := bcat4_1_1 + 1;
	else if ((((3 - axin4_1_1) < bcat4_1_1) & (bcat4_1_1 > 0)))
		next(bcat4_1_1) := bcat4_1_1 - 1;
	else next(bcat4_1_1) := bcat4_1_1;
	if (((3 - axin4_1_2) > bcat4_1_2))
		next(bcat4_1_2) := bcat4_1_2 + 1;
	else if ((((3 - axin4_1_2) < bcat4_1_2) & (bcat4_1_2 > 0)))
		next(bcat4_1_2) := bcat4_1_2 - 1;
	else next(bcat4_1_2) := bcat4_1_2;
	if ((bcat0_3_3 > gt1_0_3_3))
		next(gt1_0_3_3) := gt1_0_3_3 + 1;
	else if ((bcat0_3_3 < gt1_0_3_3))
		next(gt1_0_3_3) := gt1_0_3_3 - 1;
	else next(gt1_0_3_3) := gt1_0_3_3;
	if ((bcat0_3_2 > gt1_0_3_2))
		next(gt1_0_3_2) := gt1_0_3_2 + 1;
	else if ((bcat0_3_2 < gt1_0_3_2))
		next(gt1_0_3_2) := gt1_0_3_2 - 1;
	else next(gt1_0_3_2) := gt1_0_3_2;
	if ((bcat0_3_1 > gt1_0_3_1))
		next(gt1_0_3_1) := gt1_0_3_1 + 1;
	else if ((bcat0_3_1 < gt1_0_3_1))
		next(gt1_0_3_1) := gt1_0_3_1 - 1;
	else next(gt1_0_3_1) := gt1_0_3_1;
	if (((3 - dsh4_3_3) > axin4_3_3))
		next(axin4_3_3) := axin4_3_3 + 1;
	else if ((((3 - dsh4_3_3) < axin4_3_3) & (axin4_3_3 > 0)))
		next(axin4_3_3) := axin4_3_3 - 1;
	else next(axin4_3_3) := axin4_3_3;
	if ((bcat0_3_0 > gt1_0_3_0))
		next(gt1_0_3_0) := gt1_0_3_0 + 1;
	else if ((bcat0_3_0 < gt1_0_3_0))
		next(gt1_0_3_0) := gt1_0_3_0 - 1;
	else next(gt1_0_3_0) := gt1_0_3_0;
	if ((bcat0_1_2 > gt1_0_1_2))
		next(gt1_0_1_2) := gt1_0_1_2 + 1;
	else if ((bcat0_1_2 < gt1_0_1_2))
		next(gt1_0_1_2) := gt1_0_1_2 - 1;
	else next(gt1_0_1_2) := gt1_0_1_2;
	if ((bcat0_1_3 > gt1_0_1_3))
		next(gt1_0_1_3) := gt1_0_1_3 + 1;
	else if ((bcat0_1_3 < gt1_0_1_3))
		next(gt1_0_1_3) := gt1_0_1_3 - 1;
	else next(gt1_0_1_3) := gt1_0_1_3;
	if ((bcat0_1_0 > gt1_0_1_0))
		next(gt1_0_1_0) := gt1_0_1_0 + 1;
	else if ((bcat0_1_0 < gt1_0_1_0))
		next(gt1_0_1_0) := gt1_0_1_0 - 1;
	else next(gt1_0_1_0) := gt1_0_1_0;
	if ((bcat0_1_1 > gt1_0_1_1))
		next(gt1_0_1_1) := gt1_0_1_1 + 1;
	else if ((bcat0_1_1 < gt1_0_1_1))
		next(gt1_0_1_1) := gt1_0_1_1 - 1;
	else next(gt1_0_1_1) := gt1_0_1_1;
	if (((3 - axin4_3_3) > bcat4_3_3))
		next(bcat4_3_3) := bcat4_3_3 + 1;
	else if ((((3 - axin4_3_3) < bcat4_3_3) & (bcat4_3_3 > 0)))
		next(bcat4_3_3) := bcat4_3_3 - 1;
	else next(bcat4_3_3) := bcat4_3_3;
	if (((3 - axin3_0_3) > bcat3_0_3))
		next(bcat3_0_3) := bcat3_0_3 + 1;
	else if ((((3 - axin3_0_3) < bcat3_0_3) & (bcat3_0_3 > 0)))
		next(bcat3_0_3) := bcat3_0_3 - 1;
	else next(bcat3_0_3) := bcat3_0_3;
	if (((3 - axin3_0_0) > bcat3_0_0))
		next(bcat3_0_0) := bcat3_0_0 + 1;
	else if ((((3 - axin3_0_0) < bcat3_0_0) & (bcat3_0_0 > 0)))
		next(bcat3_0_0) := bcat3_0_0 - 1;
	else next(bcat3_0_0) := bcat3_0_0;
	if (((3 - axin3_0_1) > bcat3_0_1))
		next(bcat3_0_1) := bcat3_0_1 + 1;
	else if ((((3 - axin3_0_1) < bcat3_0_1) & (bcat3_0_1 > 0)))
		next(bcat3_0_1) := bcat3_0_1 - 1;
	else next(bcat3_0_1) := bcat3_0_1;
	if (((3 - axin3_0_2) > bcat3_0_2))
		next(bcat3_0_2) := bcat3_0_2 + 1;
	else if ((((3 - axin3_0_2) < bcat3_0_2) & (bcat3_0_2 > 0)))
		next(bcat3_0_2) := bcat3_0_2 - 1;
	else next(bcat3_0_2) := bcat3_0_2;
	if (((3 - axin4_3_0) > bcat4_3_0))
		next(bcat4_3_0) := bcat4_3_0 + 1;
	else if ((((3 - axin4_3_0) < bcat4_3_0) & (bcat4_3_0 > 0)))
		next(bcat4_3_0) := bcat4_3_0 - 1;
	else next(bcat4_3_0) := bcat4_3_0;
	if ((bcat4_3_0 > gt1_4_3_0))
		next(gt1_4_3_0) := gt1_4_3_0 + 1;
	else if ((bcat4_3_0 < gt1_4_3_0))
		next(gt1_4_3_0) := gt1_4_3_0 - 1;
	else next(gt1_4_3_0) := gt1_4_3_0;
	if (((3 - axin4_3_1) > bcat4_3_1))
		next(bcat4_3_1) := bcat4_3_1 + 1;
	else if ((((3 - axin4_3_1) < bcat4_3_1) & (bcat4_3_1 > 0)))
		next(bcat4_3_1) := bcat4_3_1 - 1;
	else next(bcat4_3_1) := bcat4_3_1;
	if (((3 - axin4_3_2) > bcat4_3_2))
		next(bcat4_3_2) := bcat4_3_2 + 1;
	else if ((((3 - axin4_3_2) < bcat4_3_2) & (bcat4_3_2 > 0)))
		next(bcat4_3_2) := bcat4_3_2 - 1;
	else next(bcat4_3_2) := bcat4_3_2;
	if ((bcat4_3_1 > gt1_4_3_1))
		next(gt1_4_3_1) := gt1_4_3_1 + 1;
	else if ((bcat4_3_1 < gt1_4_3_1))
		next(gt1_4_3_1) := gt1_4_3_1 - 1;
	else next(gt1_4_3_1) := gt1_4_3_1;
	if ((bcat4_1_1 > gt1_4_1_1))
		next(gt1_4_1_1) := gt1_4_1_1 + 1;
	else if ((bcat4_1_1 < gt1_4_1_1))
		next(gt1_4_1_1) := gt1_4_1_1 - 1;
	else next(gt1_4_1_1) := gt1_4_1_1;
	if ((bcat4_1_0 > gt1_4_1_0))
		next(gt1_4_1_0) := gt1_4_1_0 + 1;
	else if ((bcat4_1_0 < gt1_4_1_0))
		next(gt1_4_1_0) := gt1_4_1_0 - 1;
	else next(gt1_4_1_0) := gt1_4_1_0;
	if ((bcat4_1_3 > gt1_4_1_3))
		next(gt1_4_1_3) := gt1_4_1_3 + 1;
	else if ((bcat4_1_3 < gt1_4_1_3))
		next(gt1_4_1_3) := gt1_4_1_3 - 1;
	else next(gt1_4_1_3) := gt1_4_1_3;
	if ((bcat4_1_2 > gt1_4_1_2))
		next(gt1_4_1_2) := gt1_4_1_2 + 1;
	else if ((bcat4_1_2 < gt1_4_1_2))
		next(gt1_4_1_2) := gt1_4_1_2 - 1;
	else next(gt1_4_1_2) := gt1_4_1_2;
	if (((3 - p21_0_3_3) > wnt0_3_3))
		next(wnt0_3_3) := wnt0_3_3 + 1;
	else if (((3 - p21_0_3_3) < wnt0_3_3))
		next(wnt0_3_3) := wnt0_3_3 - 1;
	else next(wnt0_3_3) := wnt0_3_3;
	if (((3 - p21_0_3_2) > wnt0_3_2))
		next(wnt0_3_2) := wnt0_3_2 + 1;
	else if (((3 - p21_0_3_2) < wnt0_3_2))
		next(wnt0_3_2) := wnt0_3_2 - 1;
	else next(wnt0_3_2) := wnt0_3_2;
	if (((3 - p21_0_3_1) > wnt0_3_1))
		next(wnt0_3_1) := wnt0_3_1 + 1;
	else if (((3 - p21_0_3_1) < wnt0_3_1))
		next(wnt0_3_1) := wnt0_3_1 - 1;
	else next(wnt0_3_1) := wnt0_3_1;
	if (((3 - p21_0_3_0) > wnt0_3_0))
		next(wnt0_3_0) := wnt0_3_0 + 1;
	else if (((3 - p21_0_3_0) < wnt0_3_0))
		next(wnt0_3_0) := wnt0_3_0 - 1;
	else next(wnt0_3_0) := wnt0_3_0;
	if (((3 - p21_0_1_2) > wnt0_1_2))
		next(wnt0_1_2) := wnt0_1_2 + 1;
	else if (((3 - p21_0_1_2) < wnt0_1_2))
		next(wnt0_1_2) := wnt0_1_2 - 1;
	else next(wnt0_1_2) := wnt0_1_2;
	if (((3 - p21_0_1_3) > wnt0_1_3))
		next(wnt0_1_3) := wnt0_1_3 + 1;
	else if (((3 - p21_0_1_3) < wnt0_1_3))
		next(wnt0_1_3) := wnt0_1_3 - 1;
	else next(wnt0_1_3) := wnt0_1_3;
	if (((3 - p21_0_1_0) > wnt0_1_0))
		next(wnt0_1_0) := wnt0_1_0 + 1;
	else if (((3 - p21_0_1_0) < wnt0_1_0))
		next(wnt0_1_0) := wnt0_1_0 - 1;
	else next(wnt0_1_0) := wnt0_1_0;
	if (((3 - p21_0_1_1) > wnt0_1_1))
		next(wnt0_1_1) := wnt0_1_1 + 1;
	else if (((3 - p21_0_1_1) < wnt0_1_1))
		next(wnt0_1_1) := wnt0_1_1 - 1;
	else next(wnt0_1_1) := wnt0_1_1;
	if (((delta0_3_3 + delta1_4_3 + 2 + delta0_4_2) > (4 * deltaext0_4_3)))
		next(deltaext0_4_3) := deltaext0_4_3 + 1;
	else if (((delta0_3_3 + delta1_4_3 + 2 + delta0_4_2) < ((4 * deltaext0_4_3) - 3)))
		next(deltaext0_4_3) := deltaext0_4_3 - 1;
	else next(deltaext0_4_3) := deltaext0_4_3;
	if ((wntext0_1_0 > frizzled0_1_0))
		next(frizzled0_1_0) := frizzled0_1_0 + 1;
	else if ((wntext0_1_0 < frizzled0_1_0))
		next(frizzled0_1_0) := frizzled0_1_0 - 1;
	else next(frizzled0_1_0) := frizzled0_1_0;
	if ((wntext0_1_1 > frizzled0_1_1))
		next(frizzled0_1_1) := frizzled0_1_1 + 1;
	else if ((wntext0_1_1 < frizzled0_1_1))
		next(frizzled0_1_1) := frizzled0_1_1 - 1;
	else next(frizzled0_1_1) := frizzled0_1_1;
	if ((wntext0_1_2 > frizzled0_1_2))
		next(frizzled0_1_2) := frizzled0_1_2 + 1;
	else if ((wntext0_1_2 < frizzled0_1_2))
		next(frizzled0_1_2) := frizzled0_1_2 - 1;
	else next(frizzled0_1_2) := frizzled0_1_2;
	if ((wntext0_1_3 > frizzled0_1_3))
		next(frizzled0_1_3) := frizzled0_1_3 + 1;
	else if ((wntext0_1_3 < frizzled0_1_3))
		next(frizzled0_1_3) := frizzled0_1_3 - 1;
	else next(frizzled0_1_3) := frizzled0_1_3;
	if (((delta0_3_0 + delta1_4_0 + 2 + delta0_4_1) > (4 * deltaext0_4_0)))
		next(deltaext0_4_0) := deltaext0_4_0 + 1;
	else if (((delta0_3_0 + delta1_4_0 + 2 + delta0_4_1) < ((4 * deltaext0_4_0) - 3)))
		next(deltaext0_4_0) := deltaext0_4_0 - 1;
	else next(deltaext0_4_0) := deltaext0_4_0;
	if (((delta0_3_2 + delta1_4_2 + 2 + delta0_4_1 + delta0_4_3) > (5 * deltaext0_4_2)))
		next(deltaext0_4_2) := deltaext0_4_2 + 1;
	else if (((delta0_3_2 + delta1_4_2 + 2 + delta0_4_1 + delta0_4_3) < ((5 * deltaext0_4_2) - 4)))
		next(deltaext0_4_2) := deltaext0_4_2 - 1;
	else next(deltaext0_4_2) := deltaext0_4_2;
	if (((delta0_3_1 + delta1_4_1 + 2 + delta0_4_0 + delta0_4_2) > (5 * deltaext0_4_1)))
		next(deltaext0_4_1) := deltaext0_4_1 + 1;
	else if (((delta0_3_1 + delta1_4_1 + 2 + delta0_4_0 + delta0_4_2) < ((5 * deltaext0_4_1) - 4)))
		next(deltaext0_4_1) := deltaext0_4_1 - 1;
	else next(deltaext0_4_1) := deltaext0_4_1;
	if (((delta4_2_3 + 2 + delta4_4_3 + delta3_3_3 + delta4_3_2) > (5 * deltaext4_3_3)))
		next(deltaext4_3_3) := deltaext4_3_3 + 1;
	else if (((delta4_2_3 + 2 + delta4_4_3 + delta3_3_3 + delta4_3_2) < ((5 * deltaext4_3_3) - 4)))
		next(deltaext4_3_3) := deltaext4_3_3 - 1;
	else next(deltaext4_3_3) := deltaext4_3_3;
	if ((frizzled4_1_3 > dsh4_1_3))
		next(dsh4_1_3) := dsh4_1_3 + 1;
	else if ((frizzled4_1_3 < dsh4_1_3))
		next(dsh4_1_3) := dsh4_1_3 - 1;
	else next(dsh4_1_3) := dsh4_1_3;
	if (((delta4_2_2 + 2 + delta4_4_2 + delta3_3_2 + delta4_3_1 + delta4_3_3) > (6 * deltaext4_3_2)))
		next(deltaext4_3_2) := deltaext4_3_2 + 1;
	else if (((delta4_2_2 + 2 + delta4_4_2 + delta3_3_2 + delta4_3_1 + delta4_3_3) < ((6 * deltaext4_3_2) - 5)))
		next(deltaext4_3_2) := deltaext4_3_2 - 1;
	else next(deltaext4_3_2) := deltaext4_3_2;
	if (((2 > notchic1_2_0) & (deltaext1_2_0 > notchic1_2_0)))
		next(notchic1_2_0) := notchic1_2_0 + 1;
	else if (((2 < notchic1_2_0) | (deltaext1_2_0 < notchic1_2_0)))
		next(notchic1_2_0) := notchic1_2_0 - 1;
	else next(notchic1_2_0) := notchic1_2_0;
	if ((frizzled4_1_2 > dsh4_1_2))
		next(dsh4_1_2) := dsh4_1_2 + 1;
	else if ((frizzled4_1_2 < dsh4_1_2))
		next(dsh4_1_2) := dsh4_1_2 - 1;
	else next(dsh4_1_2) := dsh4_1_2;
	if (((wnt3_1_0 + wnt4_2_0 + wnt3_3_0 + wnt2_2_0 + wnt3_2_1) > (4 + (5 * wntext3_2_0))))
		next(wntext3_2_0) := wntext3_2_0 + 1;
	else if (((wnt3_1_0 + wnt4_2_0 + wnt3_3_0 + wnt2_2_0 + wnt3_2_1) < (5 * wntext3_2_0)))
		next(wntext3_2_0) := wntext3_2_0 - 1;
	else next(wntext3_2_0) := wntext3_2_0;
	if (((delta4_2_1 + 2 + delta4_4_1 + delta3_3_1 + delta4_3_0 + delta4_3_2) > (6 * deltaext4_3_1)))
		next(deltaext4_3_1) := deltaext4_3_1 + 1;
	else if (((delta4_2_1 + 2 + delta4_4_1 + delta3_3_1 + delta4_3_0 + delta4_3_2) < ((6 * deltaext4_3_1) - 5)))
		next(deltaext4_3_1) := deltaext4_3_1 - 1;
	else next(deltaext4_3_1) := deltaext4_3_1;
	if (((delta4_2_0 + 2 + delta4_4_0 + delta3_3_0 + delta4_3_1) > (5 * deltaext4_3_0)))
		next(deltaext4_3_0) := deltaext4_3_0 + 1;
	else if (((delta4_2_0 + 2 + delta4_4_0 + delta3_3_0 + delta4_3_1) < ((5 * deltaext4_3_0) - 4)))
		next(deltaext4_3_0) := deltaext4_3_0 - 1;
	else next(deltaext4_3_0) := deltaext4_3_0;
	if (((2 > notchic1_2_3) & (deltaext1_2_3 > notchic1_2_3)))
		next(notchic1_2_3) := notchic1_2_3 + 1;
	else if (((2 < notchic1_2_3) | (deltaext1_2_3 < notchic1_2_3)))
		next(notchic1_2_3) := notchic1_2_3 - 1;
	else next(notchic1_2_3) := notchic1_2_3;
	if (((wnt3_1_2 + wnt4_2_2 + wnt3_3_2 + wnt2_2_2 + wnt3_2_1 + wnt3_2_3) > (5 + (6 * wntext3_2_2))))
		next(wntext3_2_2) := wntext3_2_2 + 1;
	else if (((wnt3_1_2 + wnt4_2_2 + wnt3_3_2 + wnt2_2_2 + wnt3_2_1 + wnt3_2_3) < (6 * wntext3_2_2)))
		next(wntext3_2_2) := wntext3_2_2 - 1;
	else next(wntext3_2_2) := wntext3_2_2;
	if (((wnt3_1_1 + wnt4_2_1 + wnt3_3_1 + wnt2_2_1 + wnt3_2_0 + wnt3_2_2) > (5 + (6 * wntext3_2_1))))
		next(wntext3_2_1) := wntext3_2_1 + 1;
	else if (((wnt3_1_1 + wnt4_2_1 + wnt3_3_1 + wnt2_2_1 + wnt3_2_0 + wnt3_2_2) < (6 * wntext3_2_1)))
		next(wntext3_2_1) := wntext3_2_1 - 1;
	else next(wntext3_2_1) := wntext3_2_1;
	if (((2 > notchic1_2_1) & (deltaext1_2_1 > notchic1_2_1)))
		next(notchic1_2_1) := notchic1_2_1 + 1;
	else if (((2 < notchic1_2_1) | (deltaext1_2_1 < notchic1_2_1)))
		next(notchic1_2_1) := notchic1_2_1 - 1;
	else next(notchic1_2_1) := notchic1_2_1;
	if (((wnt3_1_3 + wnt4_2_3 + wnt3_3_3 + wnt2_2_3 + wnt3_2_2) > (4 + (5 * wntext3_2_3))))
		next(wntext3_2_3) := wntext3_2_3 + 1;
	else if (((wnt3_1_3 + wnt4_2_3 + wnt3_3_3 + wnt2_2_3 + wnt3_2_2) < (5 * wntext3_2_3)))
		next(wntext3_2_3) := wntext3_2_3 - 1;
	else next(wntext3_2_3) := wntext3_2_3;
	if (((2 > notchic1_2_2) & (deltaext1_2_2 > notchic1_2_2)))
		next(notchic1_2_2) := notchic1_2_2 + 1;
	else if (((2 < notchic1_2_2) | (deltaext1_2_2 < notchic1_2_2)))
		next(notchic1_2_2) := notchic1_2_2 - 1;
	else next(notchic1_2_2) := notchic1_2_2;
	if (((3 > notchic2_1_0) & (deltaext2_1_0 > notchic2_1_0)))
		next(notchic2_1_0) := notchic2_1_0 + 1;
	else if (((3 < notchic2_1_0) | (deltaext2_1_0 < notchic2_1_0)))
		next(notchic2_1_0) := notchic2_1_0 - 1;
	else next(notchic2_1_0) := notchic2_1_0;
	if (((3 > notchic2_1_3) & (deltaext2_1_3 > notchic2_1_3)))
		next(notchic2_1_3) := notchic2_1_3 + 1;
	else if (((3 < notchic2_1_3) | (deltaext2_1_3 < notchic2_1_3)))
		next(notchic2_1_3) := notchic2_1_3 - 1;
	else next(notchic2_1_3) := notchic2_1_3;
	if (((3 > notchic2_1_1) & (deltaext2_1_1 > notchic2_1_1)))
		next(notchic2_1_1) := notchic2_1_1 + 1;
	else if (((3 < notchic2_1_1) | (deltaext2_1_1 < notchic2_1_1)))
		next(notchic2_1_1) := notchic2_1_1 - 1;
	else next(notchic2_1_1) := notchic2_1_1;
	if (((3 > notchic2_1_2) & (deltaext2_1_2 > notchic2_1_2)))
		next(notchic2_1_2) := notchic2_1_2 + 1;
	else if (((3 < notchic2_1_2) | (deltaext2_1_2 < notchic2_1_2)))
		next(notchic2_1_2) := notchic2_1_2 - 1;
	else next(notchic2_1_2) := notchic2_1_2;
	if ((wntext2_3_0 > frizzled2_3_0))
		next(frizzled2_3_0) := frizzled2_3_0 + 1;
	else if ((wntext2_3_0 < frizzled2_3_0))
		next(frizzled2_3_0) := frizzled2_3_0 - 1;
	else next(frizzled2_3_0) := frizzled2_3_0;
	if (((3 - p21_3_2_1) > wnt3_2_1))
		next(wnt3_2_1) := wnt3_2_1 + 1;
	else if (((3 - p21_3_2_1) < wnt3_2_1))
		next(wnt3_2_1) := wnt3_2_1 - 1;
	else next(wnt3_2_1) := wnt3_2_1;
	if ((wntext2_3_1 > frizzled2_3_1))
		next(frizzled2_3_1) := frizzled2_3_1 + 1;
	else if ((wntext2_3_1 < frizzled2_3_1))
		next(frizzled2_3_1) := frizzled2_3_1 - 1;
	else next(frizzled2_3_1) := frizzled2_3_1;
	if (((3 > notchic2_3_3) & (deltaext2_3_3 > notchic2_3_3)))
		next(notchic2_3_3) := notchic2_3_3 + 1;
	else if (((3 < notchic2_3_3) | (deltaext2_3_3 < notchic2_3_3)))
		next(notchic2_3_3) := notchic2_3_3 - 1;
	else next(notchic2_3_3) := notchic2_3_3;
	if ((wntext2_3_2 > frizzled2_3_2))
		next(frizzled2_3_2) := frizzled2_3_2 + 1;
	else if ((wntext2_3_2 < frizzled2_3_2))
		next(frizzled2_3_2) := frizzled2_3_2 - 1;
	else next(frizzled2_3_2) := frizzled2_3_2;
	if (((3 - p21_3_2_0) > wnt3_2_0))
		next(wnt3_2_0) := wnt3_2_0 + 1;
	else if (((3 - p21_3_2_0) < wnt3_2_0))
		next(wnt3_2_0) := wnt3_2_0 - 1;
	else next(wnt3_2_0) := wnt3_2_0;
	if ((wntext2_3_3 > frizzled2_3_3))
		next(frizzled2_3_3) := frizzled2_3_3 + 1;
	else if ((wntext2_3_3 < frizzled2_3_3))
		next(frizzled2_3_3) := frizzled2_3_3 - 1;
	else next(frizzled2_3_3) := frizzled2_3_3;
	if (((3 - p21_3_2_3) > wnt3_2_3))
		next(wnt3_2_3) := wnt3_2_3 + 1;
	else if (((3 - p21_3_2_3) < wnt3_2_3))
		next(wnt3_2_3) := wnt3_2_3 - 1;
	else next(wnt3_2_3) := wnt3_2_3;
	if (((3 - p21_3_2_2) > wnt3_2_2))
		next(wnt3_2_2) := wnt3_2_2 + 1;
	else if (((3 - p21_3_2_2) < wnt3_2_2))
		next(wnt3_2_2) := wnt3_2_2 - 1;
	else next(wnt3_2_2) := wnt3_2_2;
	if (((3 - p21_1_0_3) > wnt1_0_3))
		next(wnt1_0_3) := wnt1_0_3 + 1;
	else if (((3 - p21_1_0_3) < wnt1_0_3))
		next(wnt1_0_3) := wnt1_0_3 - 1;
	else next(wnt1_0_3) := wnt1_0_3;
	if (((3 - p21_1_0_2) > wnt1_0_2))
		next(wnt1_0_2) := wnt1_0_2 + 1;
	else if (((3 - p21_1_0_2) < wnt1_0_2))
		next(wnt1_0_2) := wnt1_0_2 - 1;
	else next(wnt1_0_2) := wnt1_0_2;
	if (((3 - p21_1_0_1) > wnt1_0_1))
		next(wnt1_0_1) := wnt1_0_1 + 1;
	else if (((3 - p21_1_0_1) < wnt1_0_1))
		next(wnt1_0_1) := wnt1_0_1 - 1;
	else next(wnt1_0_1) := wnt1_0_1;
	if (((3 - p21_1_0_0) > wnt1_0_0))
		next(wnt1_0_0) := wnt1_0_0 + 1;
	else if (((3 - p21_1_0_0) < wnt1_0_0))
		next(wnt1_0_0) := wnt1_0_0 - 1;
	else next(wnt1_0_0) := wnt1_0_0;
	if (((3 > notchic2_3_2) & (deltaext2_3_2 > notchic2_3_2)))
		next(notchic2_3_2) := notchic2_3_2 + 1;
	else if (((3 < notchic2_3_2) | (deltaext2_3_2 < notchic2_3_2)))
		next(notchic2_3_2) := notchic2_3_2 - 1;
	else next(notchic2_3_2) := notchic2_3_2;
	if (((3 > notchic2_3_1) & (deltaext2_3_1 > notchic2_3_1)))
		next(notchic2_3_1) := notchic2_3_1 + 1;
	else if (((3 < notchic2_3_1) | (deltaext2_3_1 < notchic2_3_1)))
		next(notchic2_3_1) := notchic2_3_1 - 1;
	else next(notchic2_3_1) := notchic2_3_1;
	if (((3 > notchic2_3_0) & (deltaext2_3_0 > notchic2_3_0)))
		next(notchic2_3_0) := notchic2_3_0 + 1;
	else if (((3 < notchic2_3_0) | (deltaext2_3_0 < notchic2_3_0)))
		next(notchic2_3_0) := notchic2_3_0 - 1;
	else next(notchic2_3_0) := notchic2_3_0;
	if ((wntext3_2_0 > frizzled3_2_0))
		next(frizzled3_2_0) := frizzled3_2_0 + 1;
	else if ((wntext3_2_0 < frizzled3_2_0))
		next(frizzled3_2_0) := frizzled3_2_0 - 1;
	else next(frizzled3_2_0) := frizzled3_2_0;
	if ((frizzled2_2_2 > dsh2_2_2))
		next(dsh2_2_2) := dsh2_2_2 + 1;
	else if ((frizzled2_2_2 < dsh2_2_2))
		next(dsh2_2_2) := dsh2_2_2 - 1;
	else next(dsh2_2_2) := dsh2_2_2;
	if ((frizzled2_2_1 > dsh2_2_1))
		next(dsh2_2_1) := dsh2_2_1 + 1;
	else if ((frizzled2_2_1 < dsh2_2_1))
		next(dsh2_2_1) := dsh2_2_1 - 1;
	else next(dsh2_2_1) := dsh2_2_1;
	if ((frizzled2_2_0 > dsh2_2_0))
		next(dsh2_2_0) := dsh2_2_0 + 1;
	else if ((frizzled2_2_0 < dsh2_2_0))
		next(dsh2_2_0) := dsh2_2_0 - 1;
	else next(dsh2_2_0) := dsh2_2_0;
	if ((wntext3_2_2 > frizzled3_2_2))
		next(frizzled3_2_2) := frizzled3_2_2 + 1;
	else if ((wntext3_2_2 < frizzled3_2_2))
		next(frizzled3_2_2) := frizzled3_2_2 - 1;
	else next(frizzled3_2_2) := frizzled3_2_2;
	if ((wntext3_2_1 > frizzled3_2_1))
		next(frizzled3_2_1) := frizzled3_2_1 + 1;
	else if ((wntext3_2_1 < frizzled3_2_1))
		next(frizzled3_2_1) := frizzled3_2_1 - 1;
	else next(frizzled3_2_1) := frizzled3_2_1;
	if (((3 - dsh1_1_3) > axin1_1_3))
		next(axin1_1_3) := axin1_1_3 + 1;
	else if ((((3 - dsh1_1_3) < axin1_1_3) & (axin1_1_3 > 0)))
		next(axin1_1_3) := axin1_1_3 - 1;
	else next(axin1_1_3) := axin1_1_3;
	if (((wnt0_0_0 + wnt1_1_0 + wnt0_2_0 + 3 + wnt0_1_1) > (4 + (5 * wntext0_1_0))))
		next(wntext0_1_0) := wntext0_1_0 + 1;
	else if (((wnt0_0_0 + wnt1_1_0 + wnt0_2_0 + 3 + wnt0_1_1) < (5 * wntext0_1_0)))
		next(wntext0_1_0) := wntext0_1_0 - 1;
	else next(wntext0_1_0) := wntext0_1_0;
	if ((wntext3_2_3 > frizzled3_2_3))
		next(frizzled3_2_3) := frizzled3_2_3 + 1;
	else if ((wntext3_2_3 < frizzled3_2_3))
		next(frizzled3_2_3) := frizzled3_2_3 - 1;
	else next(frizzled3_2_3) := frizzled3_2_3;
	if (((3 - dsh1_1_2) > axin1_1_2))
		next(axin1_1_2) := axin1_1_2 + 1;
	else if ((((3 - dsh1_1_2) < axin1_1_2) & (axin1_1_2 > 0)))
		next(axin1_1_2) := axin1_1_2 - 1;
	else next(axin1_1_2) := axin1_1_2;
	if ((bcat3_3_3 > gt1_3_3_3))
		next(gt1_3_3_3) := gt1_3_3_3 + 1;
	else if ((bcat3_3_3 < gt1_3_3_3))
		next(gt1_3_3_3) := gt1_3_3_3 - 1;
	else next(gt1_3_3_3) := gt1_3_3_3;
	if (((3 - dsh1_1_1) > axin1_1_1))
		next(axin1_1_1) := axin1_1_1 + 1;
	else if ((((3 - dsh1_1_1) < axin1_1_1) & (axin1_1_1 > 0)))
		next(axin1_1_1) := axin1_1_1 - 1;
	else next(axin1_1_1) := axin1_1_1;
	if (((3 - dsh1_1_0) > axin1_1_0))
		next(axin1_1_0) := axin1_1_0 + 1;
	else if ((((3 - dsh1_1_0) < axin1_1_0) & (axin1_1_0 > 0)))
		next(axin1_1_0) := axin1_1_0 - 1;
	else next(axin1_1_0) := axin1_1_0;
	if (((gt1_1_4_2 + gt2_1_4_2) > (2 * delta1_4_2)))
		next(delta1_4_2) := delta1_4_2 + 1;
	else if (((gt1_1_4_2 + gt2_1_4_2) < ((2 * delta1_4_2) - 1)))
		next(delta1_4_2) := delta1_4_2 - 1;
	else next(delta1_4_2) := delta1_4_2;
	if (((gt1_1_4_1 + gt2_1_4_1) > (2 * delta1_4_1)))
		next(delta1_4_1) := delta1_4_1 + 1;
	else if (((gt1_1_4_1 + gt2_1_4_1) < ((2 * delta1_4_1) - 1)))
		next(delta1_4_1) := delta1_4_1 - 1;
	else next(delta1_4_1) := delta1_4_1;
	if (((gt1_1_4_3 + gt2_1_4_3) > (2 * delta1_4_3)))
		next(delta1_4_3) := delta1_4_3 + 1;
	else if (((gt1_1_4_3 + gt2_1_4_3) < ((2 * delta1_4_3) - 1)))
		next(delta1_4_3) := delta1_4_3 - 1;
	else next(delta1_4_3) := delta1_4_3;
	if ((wntext3_0_0 > frizzled3_0_0))
		next(frizzled3_0_0) := frizzled3_0_0 + 1;
	else if ((wntext3_0_0 < frizzled3_0_0))
		next(frizzled3_0_0) := frizzled3_0_0 - 1;
	else next(frizzled3_0_0) := frizzled3_0_0;
	if (((wnt0_0_3 + wnt1_1_3 + wnt0_2_3 + 3 + wnt0_1_2) > (4 + (5 * wntext0_1_3))))
		next(wntext0_1_3) := wntext0_1_3 + 1;
	else if (((wnt0_0_3 + wnt1_1_3 + wnt0_2_3 + 3 + wnt0_1_2) < (5 * wntext0_1_3)))
		next(wntext0_1_3) := wntext0_1_3 - 1;
	else next(wntext0_1_3) := wntext0_1_3;
	if ((wntext3_0_1 > frizzled3_0_1))
		next(frizzled3_0_1) := frizzled3_0_1 + 1;
	else if ((wntext3_0_1 < frizzled3_0_1))
		next(frizzled3_0_1) := frizzled3_0_1 - 1;
	else next(frizzled3_0_1) := frizzled3_0_1;
	if (((3 > notchic4_0_0) & (deltaext4_0_0 > notchic4_0_0)))
		next(notchic4_0_0) := notchic4_0_0 + 1;
	else if (((3 < notchic4_0_0) | (deltaext4_0_0 < notchic4_0_0)))
		next(notchic4_0_0) := notchic4_0_0 - 1;
	else next(notchic4_0_0) := notchic4_0_0;
	if (((3 > notchic4_0_1) & (deltaext4_0_1 > notchic4_0_1)))
		next(notchic4_0_1) := notchic4_0_1 + 1;
	else if (((3 < notchic4_0_1) | (deltaext4_0_1 < notchic4_0_1)))
		next(notchic4_0_1) := notchic4_0_1 - 1;
	else next(notchic4_0_1) := notchic4_0_1;
	if ((frizzled2_4_0 > dsh2_4_0))
		next(dsh2_4_0) := dsh2_4_0 + 1;
	else if ((frizzled2_4_0 < dsh2_4_0))
		next(dsh2_4_0) := dsh2_4_0 - 1;
	else next(dsh2_4_0) := dsh2_4_0;
	if ((wntext3_0_2 > frizzled3_0_2))
		next(frizzled3_0_2) := frizzled3_0_2 + 1;
	else if ((wntext3_0_2 < frizzled3_0_2))
		next(frizzled3_0_2) := frizzled3_0_2 - 1;
	else next(frizzled3_0_2) := frizzled3_0_2;
	if ((wntext3_0_3 > frizzled3_0_3))
		next(frizzled3_0_3) := frizzled3_0_3 + 1;
	else if ((wntext3_0_3 < frizzled3_0_3))
		next(frizzled3_0_3) := frizzled3_0_3 - 1;
	else next(frizzled3_0_3) := frizzled3_0_3;
	if (((wnt0_0_1 + wnt1_1_1 + wnt0_2_1 + 3 + wnt0_1_0 + wnt0_1_2) > (5 + (6 * wntext0_1_1))))
		next(wntext0_1_1) := wntext0_1_1 + 1;
	else if (((wnt0_0_1 + wnt1_1_1 + wnt0_2_1 + 3 + wnt0_1_0 + wnt0_1_2) < (6 * wntext0_1_1)))
		next(wntext0_1_1) := wntext0_1_1 - 1;
	else next(wntext0_1_1) := wntext0_1_1;
	if (((3 > notchic4_0_2) & (deltaext4_0_2 > notchic4_0_2)))
		next(notchic4_0_2) := notchic4_0_2 + 1;
	else if (((3 < notchic4_0_2) | (deltaext4_0_2 < notchic4_0_2)))
		next(notchic4_0_2) := notchic4_0_2 - 1;
	else next(notchic4_0_2) := notchic4_0_2;
	if (((3 > notchic4_0_3) & (deltaext4_0_3 > notchic4_0_3)))
		next(notchic4_0_3) := notchic4_0_3 + 1;
	else if (((3 < notchic4_0_3) | (deltaext4_0_3 < notchic4_0_3)))
		next(notchic4_0_3) := notchic4_0_3 - 1;
	else next(notchic4_0_3) := notchic4_0_3;
	if (((wnt0_0_2 + wnt1_1_2 + wnt0_2_2 + 3 + wnt0_1_1 + wnt0_1_3) > (5 + (6 * wntext0_1_2))))
		next(wntext0_1_2) := wntext0_1_2 + 1;
	else if (((wnt0_0_2 + wnt1_1_2 + wnt0_2_2 + 3 + wnt0_1_1 + wnt0_1_3) < (6 * wntext0_1_2)))
		next(wntext0_1_2) := wntext0_1_2 - 1;
	else next(wntext0_1_2) := wntext0_1_2;
	if ((notchic1_2_3 > p21_1_2_3))
		next(p21_1_2_3) := p21_1_2_3 + 1;
	else if ((notchic1_2_3 < p21_1_2_3))
		next(p21_1_2_3) := p21_1_2_3 - 1;
	else next(p21_1_2_3) := p21_1_2_3;
	if (((3 > notchic4_4_3) & (deltaext4_4_3 > notchic4_4_3)))
		next(notchic4_4_3) := notchic4_4_3 + 1;
	else if (((3 < notchic4_4_3) | (deltaext4_4_3 < notchic4_4_3)))
		next(notchic4_4_3) := notchic4_4_3 - 1;
	else next(notchic4_4_3) := notchic4_4_3;
	if (((3 > notchic4_4_2) & (deltaext4_4_2 > notchic4_4_2)))
		next(notchic4_4_2) := notchic4_4_2 + 1;
	else if (((3 < notchic4_4_2) | (deltaext4_4_2 < notchic4_4_2)))
		next(notchic4_4_2) := notchic4_4_2 - 1;
	else next(notchic4_4_2) := notchic4_4_2;
	if (((3 > notchic4_4_1) & (deltaext4_4_1 > notchic4_4_1)))
		next(notchic4_4_1) := notchic4_4_1 + 1;
	else if (((3 < notchic4_4_1) | (deltaext4_4_1 < notchic4_4_1)))
		next(notchic4_4_1) := notchic4_4_1 - 1;
	else next(notchic4_4_1) := notchic4_4_1;
	if (((3 > notchic4_4_0) & (deltaext4_4_0 > notchic4_4_0)))
		next(notchic4_4_0) := notchic4_4_0 + 1;
	else if (((3 < notchic4_4_0) | (deltaext4_4_0 < notchic4_4_0)))
		next(notchic4_4_0) := notchic4_4_0 - 1;
	else next(notchic4_4_0) := notchic4_4_0;
	if (((gt1_1_4_0 + gt2_1_4_0) > (2 * delta1_4_0)))
		next(delta1_4_0) := delta1_4_0 + 1;
	else if (((gt1_1_4_0 + gt2_1_4_0) < ((2 * delta1_4_0) - 1)))
		next(delta1_4_0) := delta1_4_0 - 1;
	else next(delta1_4_0) := delta1_4_0;
	if ((notchic1_2_1 > p21_1_2_1))
		next(p21_1_2_1) := p21_1_2_1 + 1;
	else if ((notchic1_2_1 < p21_1_2_1))
		next(p21_1_2_1) := p21_1_2_1 - 1;
	else next(p21_1_2_1) := p21_1_2_1;
	if ((notchic1_2_2 > p21_1_2_2))
		next(p21_1_2_2) := p21_1_2_2 + 1;
	else if ((notchic1_2_2 < p21_1_2_2))
		next(p21_1_2_2) := p21_1_2_2 - 1;
	else next(p21_1_2_2) := p21_1_2_2;
	if ((notchic1_2_0 > p21_1_2_0))
		next(p21_1_2_0) := p21_1_2_0 + 1;
	else if ((notchic1_2_0 < p21_1_2_0))
		next(p21_1_2_0) := p21_1_2_0 - 1;
	else next(p21_1_2_0) := p21_1_2_0;
	if ((notchic1_4_0 > p21_1_4_0))
		next(p21_1_4_0) := p21_1_4_0 + 1;
	else if ((notchic1_4_0 < p21_1_4_0))
		next(p21_1_4_0) := p21_1_4_0 - 1;
	else next(p21_1_4_0) := p21_1_4_0;
	if ((notchic1_4_3 > p21_1_4_3))
		next(p21_1_4_3) := p21_1_4_3 + 1;
	else if ((notchic1_4_3 < p21_1_4_3))
		next(p21_1_4_3) := p21_1_4_3 - 1;
	else next(p21_1_4_3) := p21_1_4_3;
	if ((notchic1_4_2 > p21_1_4_2))
		next(p21_1_4_2) := p21_1_4_2 + 1;
	else if ((notchic1_4_2 < p21_1_4_2))
		next(p21_1_4_2) := p21_1_4_2 - 1;
	else next(p21_1_4_2) := p21_1_4_2;
	if ((notchic1_4_1 > p21_1_4_1))
		next(p21_1_4_1) := p21_1_4_1 + 1;
	else if ((notchic1_4_1 < p21_1_4_1))
		next(p21_1_4_1) := p21_1_4_1 - 1;
	else next(p21_1_4_1) := p21_1_4_1;
	if (((wnt4_0_2 + 0 + wnt4_2_2 + wnt3_1_2 + wnt4_1_1 + wnt4_1_3) > (5 + (6 * wntext4_1_2))))
		next(wntext4_1_2) := wntext4_1_2 + 1;
	else if (((wnt4_0_2 + 0 + wnt4_2_2 + wnt3_1_2 + wnt4_1_1 + wnt4_1_3) < (6 * wntext4_1_2)))
		next(wntext4_1_2) := wntext4_1_2 - 1;
	else next(wntext4_1_2) := wntext4_1_2;
	if (((wnt4_0_1 + 0 + wnt4_2_1 + wnt3_1_1 + wnt4_1_0 + wnt4_1_2) > (5 + (6 * wntext4_1_1))))
		next(wntext4_1_1) := wntext4_1_1 + 1;
	else if (((wnt4_0_1 + 0 + wnt4_2_1 + wnt3_1_1 + wnt4_1_0 + wnt4_1_2) < (6 * wntext4_1_1)))
		next(wntext4_1_1) := wntext4_1_1 - 1;
	else next(wntext4_1_1) := wntext4_1_1;
	if ((notchic3_1_3 > p21_3_1_3))
		next(p21_3_1_3) := p21_3_1_3 + 1;
	else if ((notchic3_1_3 < p21_3_1_3))
		next(p21_3_1_3) := p21_3_1_3 - 1;
	else next(p21_3_1_3) := p21_3_1_3;
	if (((wnt4_0_3 + 0 + wnt4_2_3 + wnt3_1_3 + wnt4_1_2) > (4 + (5 * wntext4_1_3))))
		next(wntext4_1_3) := wntext4_1_3 + 1;
	else if (((wnt4_0_3 + 0 + wnt4_2_3 + wnt3_1_3 + wnt4_1_2) < (5 * wntext4_1_3)))
		next(wntext4_1_3) := wntext4_1_3 - 1;
	else next(wntext4_1_3) := wntext4_1_3;
	if ((notchic3_1_2 > p21_3_1_2))
		next(p21_3_1_2) := p21_3_1_2 + 1;
	else if ((notchic3_1_2 < p21_3_1_2))
		next(p21_3_1_2) := p21_3_1_2 - 1;
	else next(p21_3_1_2) := p21_3_1_2;
	if (((wnt4_0_0 + 0 + wnt4_2_0 + wnt3_1_0 + wnt4_1_1) > (4 + (5 * wntext4_1_0))))
		next(wntext4_1_0) := wntext4_1_0 + 1;
	else if (((wnt4_0_0 + 0 + wnt4_2_0 + wnt3_1_0 + wnt4_1_1) < (5 * wntext4_1_0)))
		next(wntext4_1_0) := wntext4_1_0 - 1;
	else next(wntext4_1_0) := wntext4_1_0;
	if ((notchic3_1_1 > p21_3_1_1))
		next(p21_3_1_1) := p21_3_1_1 + 1;
	else if ((notchic3_1_1 < p21_3_1_1))
		next(p21_3_1_1) := p21_3_1_1 - 1;
	else next(p21_3_1_1) := p21_3_1_1;
	if ((notchic3_1_0 > p21_3_1_0))
		next(p21_3_1_0) := p21_3_1_0 + 1;
	else if ((notchic3_1_0 < p21_3_1_0))
		next(p21_3_1_0) := p21_3_1_0 - 1;
	else next(p21_3_1_0) := p21_3_1_0;
	if ((wntext4_1_0 > frizzled4_1_0))
		next(frizzled4_1_0) := frizzled4_1_0 + 1;
	else if ((wntext4_1_0 < frizzled4_1_0))
		next(frizzled4_1_0) := frizzled4_1_0 - 1;
	else next(frizzled4_1_0) := frizzled4_1_0;
	if ((wntext4_1_2 > frizzled4_1_2))
		next(frizzled4_1_2) := frizzled4_1_2 + 1;
	else if ((wntext4_1_2 < frizzled4_1_2))
		next(frizzled4_1_2) := frizzled4_1_2 - 1;
	else next(frizzled4_1_2) := frizzled4_1_2;
	if ((wntext4_1_1 > frizzled4_1_1))
		next(frizzled4_1_1) := frizzled4_1_1 + 1;
	else if ((wntext4_1_1 < frizzled4_1_1))
		next(frizzled4_1_1) := frizzled4_1_1 - 1;
	else next(frizzled4_1_1) := frizzled4_1_1;
	if ((wntext4_1_3 > frizzled4_1_3))
		next(frizzled4_1_3) := frizzled4_1_3 + 1;
	else if ((wntext4_1_3 < frizzled4_1_3))
		next(frizzled4_1_3) := frizzled4_1_3 - 1;
	else next(frizzled4_1_3) := frizzled4_1_3;
	if ((notchic3_4_1 > gt2_3_4_1))
		next(gt2_3_4_1) := gt2_3_4_1 + 1;
	else if ((notchic3_4_1 < gt2_3_4_1))
		next(gt2_3_4_1) := gt2_3_4_1 - 1;
	else next(gt2_3_4_1) := gt2_3_4_1;
	if ((notchic3_4_2 > gt2_3_4_2))
		next(gt2_3_4_2) := gt2_3_4_2 + 1;
	else if ((notchic3_4_2 < gt2_3_4_2))
		next(gt2_3_4_2) := gt2_3_4_2 - 1;
	else next(gt2_3_4_2) := gt2_3_4_2;
	if ((notchic3_4_3 > gt2_3_4_3))
		next(gt2_3_4_3) := gt2_3_4_3 + 1;
	else if ((notchic3_4_3 < gt2_3_4_3))
		next(gt2_3_4_3) := gt2_3_4_3 - 1;
	else next(gt2_3_4_3) := gt2_3_4_3;
	if ((frizzled2_4_2 > dsh2_4_2))
		next(dsh2_4_2) := dsh2_4_2 + 1;
	else if ((frizzled2_4_2 < dsh2_4_2))
		next(dsh2_4_2) := dsh2_4_2 - 1;
	else next(dsh2_4_2) := dsh2_4_2;
	if ((frizzled2_4_1 > dsh2_4_1))
		next(dsh2_4_1) := dsh2_4_1 + 1;
	else if ((frizzled2_4_1 < dsh2_4_1))
		next(dsh2_4_1) := dsh2_4_1 - 1;
	else next(dsh2_4_1) := dsh2_4_1;
	if ((frizzled2_4_3 > dsh2_4_3))
		next(dsh2_4_3) := dsh2_4_3 + 1;
	else if ((frizzled2_4_3 < dsh2_4_3))
		next(dsh2_4_3) := dsh2_4_3 - 1;
	else next(dsh2_4_3) := dsh2_4_3;
	if (((gt1_4_4_1 + gt2_4_4_1) > (2 * delta4_4_1)))
		next(delta4_4_1) := delta4_4_1 + 1;
	else if (((gt1_4_4_1 + gt2_4_4_1) < ((2 * delta4_4_1) - 1)))
		next(delta4_4_1) := delta4_4_1 - 1;
	else next(delta4_4_1) := delta4_4_1;
	if (((gt1_4_4_0 + gt2_4_4_0) > (2 * delta4_4_0)))
		next(delta4_4_0) := delta4_4_0 + 1;
	else if (((gt1_4_4_0 + gt2_4_4_0) < ((2 * delta4_4_0) - 1)))
		next(delta4_4_0) := delta4_4_0 - 1;
	else next(delta4_4_0) := delta4_4_0;
	if (((gt1_4_4_3 + gt2_4_4_3) > (2 * delta4_4_3)))
		next(delta4_4_3) := delta4_4_3 + 1;
	else if (((gt1_4_4_3 + gt2_4_4_3) < ((2 * delta4_4_3) - 1)))
		next(delta4_4_3) := delta4_4_3 - 1;
	else next(delta4_4_3) := delta4_4_3;
	if (((gt1_4_4_2 + gt2_4_4_2) > (2 * delta4_4_2)))
		next(delta4_4_2) := delta4_4_2 + 1;
	else if (((gt1_4_4_2 + gt2_4_4_2) < ((2 * delta4_4_2) - 1)))
		next(delta4_4_2) := delta4_4_2 - 1;
	else next(delta4_4_2) := delta4_4_2;
	if ((frizzled2_2_3 > dsh2_2_3))
		next(dsh2_2_3) := dsh2_2_3 + 1;
	else if ((frizzled2_2_3 < dsh2_2_3))
		next(dsh2_2_3) := dsh2_2_3 - 1;
	else next(dsh2_2_3) := dsh2_2_3;
	if ((bcat2_1_1 > gt1_2_1_1))
		next(gt1_2_1_1) := gt1_2_1_1 + 1;
	else if ((bcat2_1_1 < gt1_2_1_1))
		next(gt1_2_1_1) := gt1_2_1_1 - 1;
	else next(gt1_2_1_1) := gt1_2_1_1;
	if ((bcat3_2_2 > gt1_3_2_2))
		next(gt1_3_2_2) := gt1_3_2_2 + 1;
	else if ((bcat3_2_2 < gt1_3_2_2))
		next(gt1_3_2_2) := gt1_3_2_2 - 1;
	else next(gt1_3_2_2) := gt1_3_2_2;
	if ((bcat3_2_3 > gt1_3_2_3))
		next(gt1_3_2_3) := gt1_3_2_3 + 1;
	else if ((bcat3_2_3 < gt1_3_2_3))
		next(gt1_3_2_3) := gt1_3_2_3 - 1;
	else next(gt1_3_2_3) := gt1_3_2_3;
	if ((bcat2_1_0 > gt1_2_1_0))
		next(gt1_2_1_0) := gt1_2_1_0 + 1;
	else if ((bcat2_1_0 < gt1_2_1_0))
		next(gt1_2_1_0) := gt1_2_1_0 - 1;
	else next(gt1_2_1_0) := gt1_2_1_0;
	if ((bcat3_2_0 > gt1_3_2_0))
		next(gt1_3_2_0) := gt1_3_2_0 + 1;
	else if ((bcat3_2_0 < gt1_3_2_0))
		next(gt1_3_2_0) := gt1_3_2_0 - 1;
	else next(gt1_3_2_0) := gt1_3_2_0;
	if ((bcat3_2_1 > gt1_3_2_1))
		next(gt1_3_2_1) := gt1_3_2_1 + 1;
	else if ((bcat3_2_1 < gt1_3_2_1))
		next(gt1_3_2_1) := gt1_3_2_1 - 1;
	else next(gt1_3_2_1) := gt1_3_2_1;
	if ((bcat2_1_3 > gt1_2_1_3))
		next(gt1_2_1_3) := gt1_2_1_3 + 1;
	else if ((bcat2_1_3 < gt1_2_1_3))
		next(gt1_2_1_3) := gt1_2_1_3 - 1;
	else next(gt1_2_1_3) := gt1_2_1_3;
	if ((bcat2_1_2 > gt1_2_1_2))
		next(gt1_2_1_2) := gt1_2_1_2 + 1;
	else if ((bcat2_1_2 < gt1_2_1_2))
		next(gt1_2_1_2) := gt1_2_1_2 - 1;
	else next(gt1_2_1_2) := gt1_2_1_2;
	if ((notchic4_2_0 > gt2_4_2_0))
		next(gt2_4_2_0) := gt2_4_2_0 + 1;
	else if ((notchic4_2_0 < gt2_4_2_0))
		next(gt2_4_2_0) := gt2_4_2_0 - 1;
	else next(gt2_4_2_0) := gt2_4_2_0;
	if ((notchic4_2_1 > gt2_4_2_1))
		next(gt2_4_2_1) := gt2_4_2_1 + 1;
	else if ((notchic4_2_1 < gt2_4_2_1))
		next(gt2_4_2_1) := gt2_4_2_1 - 1;
	else next(gt2_4_2_1) := gt2_4_2_1;
	if ((notchic0_1_3 > p21_0_1_3))
		next(p21_0_1_3) := p21_0_1_3 + 1;
	else if ((notchic0_1_3 < p21_0_1_3))
		next(p21_0_1_3) := p21_0_1_3 - 1;
	else next(p21_0_1_3) := p21_0_1_3;
	if ((notchic0_1_1 > p21_0_1_1))
		next(p21_0_1_1) := p21_0_1_1 + 1;
	else if ((notchic0_1_1 < p21_0_1_1))
		next(p21_0_1_1) := p21_0_1_1 - 1;
	else next(p21_0_1_1) := p21_0_1_1;
	if ((notchic0_1_2 > p21_0_1_2))
		next(p21_0_1_2) := p21_0_1_2 + 1;
	else if ((notchic0_1_2 < p21_0_1_2))
		next(p21_0_1_2) := p21_0_1_2 - 1;
	else next(p21_0_1_2) := p21_0_1_2;
	if ((notchic0_1_0 > p21_0_1_0))
		next(p21_0_1_0) := p21_0_1_0 + 1;
	else if ((notchic0_1_0 < p21_0_1_0))
		next(p21_0_1_0) := p21_0_1_0 - 1;
	else next(p21_0_1_0) := p21_0_1_0;
	if (((3 - p21_4_2_0) > wnt4_2_0))
		next(wnt4_2_0) := wnt4_2_0 + 1;
	else if (((3 - p21_4_2_0) < wnt4_2_0))
		next(wnt4_2_0) := wnt4_2_0 - 1;
	else next(wnt4_2_0) := wnt4_2_0;
	if ((bcat3_0_3 > gt1_3_0_3))
		next(gt1_3_0_3) := gt1_3_0_3 + 1;
	else if ((bcat3_0_3 < gt1_3_0_3))
		next(gt1_3_0_3) := gt1_3_0_3 - 1;
	else next(gt1_3_0_3) := gt1_3_0_3;
	if ((bcat3_0_2 > gt1_3_0_2))
		next(gt1_3_0_2) := gt1_3_0_2 + 1;
	else if ((bcat3_0_2 < gt1_3_0_2))
		next(gt1_3_0_2) := gt1_3_0_2 - 1;
	else next(gt1_3_0_2) := gt1_3_0_2;
	if ((bcat2_3_2 > gt1_2_3_2))
		next(gt1_2_3_2) := gt1_2_3_2 + 1;
	else if ((bcat2_3_2 < gt1_2_3_2))
		next(gt1_2_3_2) := gt1_2_3_2 - 1;
	else next(gt1_2_3_2) := gt1_2_3_2;
	if ((bcat3_0_1 > gt1_3_0_1))
		next(gt1_3_0_1) := gt1_3_0_1 + 1;
	else if ((bcat3_0_1 < gt1_3_0_1))
		next(gt1_3_0_1) := gt1_3_0_1 - 1;
	else next(gt1_3_0_1) := gt1_3_0_1;
	if ((bcat2_3_3 > gt1_2_3_3))
		next(gt1_2_3_3) := gt1_2_3_3 + 1;
	else if ((bcat2_3_3 < gt1_2_3_3))
		next(gt1_2_3_3) := gt1_2_3_3 - 1;
	else next(gt1_2_3_3) := gt1_2_3_3;
	if (((3 - p21_4_2_3) > wnt4_2_3))
		next(wnt4_2_3) := wnt4_2_3 + 1;
	else if (((3 - p21_4_2_3) < wnt4_2_3))
		next(wnt4_2_3) := wnt4_2_3 - 1;
	else next(wnt4_2_3) := wnt4_2_3;
	if ((bcat3_0_0 > gt1_3_0_0))
		next(gt1_3_0_0) := gt1_3_0_0 + 1;
	else if ((bcat3_0_0 < gt1_3_0_0))
		next(gt1_3_0_0) := gt1_3_0_0 - 1;
	else next(gt1_3_0_0) := gt1_3_0_0;
	if (((3 - p21_4_2_2) > wnt4_2_2))
		next(wnt4_2_2) := wnt4_2_2 + 1;
	else if (((3 - p21_4_2_2) < wnt4_2_2))
		next(wnt4_2_2) := wnt4_2_2 - 1;
	else next(wnt4_2_2) := wnt4_2_2;
	if ((bcat2_3_0 > gt1_2_3_0))
		next(gt1_2_3_0) := gt1_2_3_0 + 1;
	else if ((bcat2_3_0 < gt1_2_3_0))
		next(gt1_2_3_0) := gt1_2_3_0 - 1;
	else next(gt1_2_3_0) := gt1_2_3_0;
	if (((3 - p21_4_2_1) > wnt4_2_1))
		next(wnt4_2_1) := wnt4_2_1 + 1;
	else if (((3 - p21_4_2_1) < wnt4_2_1))
		next(wnt4_2_1) := wnt4_2_1 - 1;
	else next(wnt4_2_1) := wnt4_2_1;
	if ((bcat2_3_1 > gt1_2_3_1))
		next(gt1_2_3_1) := gt1_2_3_1 + 1;
	else if ((bcat2_3_1 < gt1_2_3_1))
		next(gt1_2_3_1) := gt1_2_3_1 - 1;
	else next(gt1_2_3_1) := gt1_2_3_1;
	if ((notchic4_0_0 > gt2_4_0_0))
		next(gt2_4_0_0) := gt2_4_0_0 + 1;
	else if ((notchic4_0_0 < gt2_4_0_0))
		next(gt2_4_0_0) := gt2_4_0_0 - 1;
	else next(gt2_4_0_0) := gt2_4_0_0;
	if (((2 > notchic1_4_3) & (deltaext1_4_3 > notchic1_4_3)))
		next(notchic1_4_3) := notchic1_4_3 + 1;
	else if (((2 < notchic1_4_3) | (deltaext1_4_3 < notchic1_4_3)))
		next(notchic1_4_3) := notchic1_4_3 - 1;
	else next(notchic1_4_3) := notchic1_4_3;
	if ((notchic4_0_1 > gt2_4_0_1))
		next(gt2_4_0_1) := gt2_4_0_1 + 1;
	else if ((notchic4_0_1 < gt2_4_0_1))
		next(gt2_4_0_1) := gt2_4_0_1 - 1;
	else next(gt2_4_0_1) := gt2_4_0_1;
	if ((notchic3_3_3 > gt2_3_3_3))
		next(gt2_3_3_3) := gt2_3_3_3 + 1;
	else if ((notchic3_3_3 < gt2_3_3_3))
		next(gt2_3_3_3) := gt2_3_3_3 - 1;
	else next(gt2_3_3_3) := gt2_3_3_3;
	if ((notchic4_0_2 > gt2_4_0_2))
		next(gt2_4_0_2) := gt2_4_0_2 + 1;
	else if ((notchic4_0_2 < gt2_4_0_2))
		next(gt2_4_0_2) := gt2_4_0_2 - 1;
	else next(gt2_4_0_2) := gt2_4_0_2;
	if ((notchic4_0_3 > gt2_4_0_3))
		next(gt2_4_0_3) := gt2_4_0_3 + 1;
	else if ((notchic4_0_3 < gt2_4_0_3))
		next(gt2_4_0_3) := gt2_4_0_3 - 1;
	else next(gt2_4_0_3) := gt2_4_0_3;
	if ((notchic3_3_2 > gt2_3_3_2))
		next(gt2_3_3_2) := gt2_3_3_2 + 1;
	else if ((notchic3_3_2 < gt2_3_3_2))
		next(gt2_3_3_2) := gt2_3_3_2 - 1;
	else next(gt2_3_3_2) := gt2_3_3_2;
	if (((2 > notchic1_4_0) & (deltaext1_4_0 > notchic1_4_0)))
		next(notchic1_4_0) := notchic1_4_0 + 1;
	else if (((2 < notchic1_4_0) | (deltaext1_4_0 < notchic1_4_0)))
		next(notchic1_4_0) := notchic1_4_0 - 1;
	else next(notchic1_4_0) := notchic1_4_0;
	if (((2 > notchic1_4_2) & (deltaext1_4_2 > notchic1_4_2)))
		next(notchic1_4_2) := notchic1_4_2 + 1;
	else if (((2 < notchic1_4_2) | (deltaext1_4_2 < notchic1_4_2)))
		next(notchic1_4_2) := notchic1_4_2 - 1;
	else next(notchic1_4_2) := notchic1_4_2;
	if (((2 > notchic1_4_1) & (deltaext1_4_1 > notchic1_4_1)))
		next(notchic1_4_1) := notchic1_4_1 + 1;
	else if (((2 < notchic1_4_1) | (deltaext1_4_1 < notchic1_4_1)))
		next(notchic1_4_1) := notchic1_4_1 - 1;
	else next(notchic1_4_1) := notchic1_4_1;
	if ((bcat3_4_3 > gt1_3_4_3))
		next(gt1_3_4_3) := gt1_3_4_3 + 1;
	else if ((bcat3_4_3 < gt1_3_4_3))
		next(gt1_3_4_3) := gt1_3_4_3 - 1;
	else next(gt1_3_4_3) := gt1_3_4_3;
	if ((notchic3_3_0 > p21_3_3_0))
		next(p21_3_3_0) := p21_3_3_0 + 1;
	else if ((notchic3_3_0 < p21_3_3_0))
		next(p21_3_3_0) := p21_3_3_0 - 1;
	else next(p21_3_3_0) := p21_3_3_0;
	if ((bcat3_4_2 > gt1_3_4_2))
		next(gt1_3_4_2) := gt1_3_4_2 + 1;
	else if ((bcat3_4_2 < gt1_3_4_2))
		next(gt1_3_4_2) := gt1_3_4_2 - 1;
	else next(gt1_3_4_2) := gt1_3_4_2;
	if ((notchic3_3_1 > p21_3_3_1))
		next(p21_3_3_1) := p21_3_3_1 + 1;
	else if ((notchic3_3_1 < p21_3_3_1))
		next(p21_3_3_1) := p21_3_3_1 - 1;
	else next(p21_3_3_1) := p21_3_3_1;
	if ((notchic3_3_2 > p21_3_3_2))
		next(p21_3_3_2) := p21_3_3_2 + 1;
	else if ((notchic3_3_2 < p21_3_3_2))
		next(p21_3_3_2) := p21_3_3_2 - 1;
	else next(p21_3_3_2) := p21_3_3_2;
	if ((notchic3_3_3 > p21_3_3_3))
		next(p21_3_3_3) := p21_3_3_3 + 1;
	else if ((notchic3_3_3 < p21_3_3_3))
		next(p21_3_3_3) := p21_3_3_3 - 1;
	else next(p21_3_3_3) := p21_3_3_3;
	if ((notchic3_1_1 > gt2_3_1_1))
		next(gt2_3_1_1) := gt2_3_1_1 + 1;
	else if ((notchic3_1_1 < gt2_3_1_1))
		next(gt2_3_1_1) := gt2_3_1_1 - 1;
	else next(gt2_3_1_1) := gt2_3_1_1;
	if ((notchic3_1_0 > gt2_3_1_0))
		next(gt2_3_1_0) := gt2_3_1_0 + 1;
	else if ((notchic3_1_0 < gt2_3_1_0))
		next(gt2_3_1_0) := gt2_3_1_0 - 1;
	else next(gt2_3_1_0) := gt2_3_1_0;
	if ((notchic3_1_3 > gt2_3_1_3))
		next(gt2_3_1_3) := gt2_3_1_3 + 1;
	else if ((notchic3_1_3 < gt2_3_1_3))
		next(gt2_3_1_3) := gt2_3_1_3 - 1;
	else next(gt2_3_1_3) := gt2_3_1_3;
	if ((notchic3_1_2 > gt2_3_1_2))
		next(gt2_3_1_2) := gt2_3_1_2 + 1;
	else if ((notchic3_1_2 < gt2_3_1_2))
		next(gt2_3_1_2) := gt2_3_1_2 - 1;
	else next(gt2_3_1_2) := gt2_3_1_2;
	if ((notchic1_0_3 > p21_1_0_3))
		next(p21_1_0_3) := p21_1_0_3 + 1;
	else if ((notchic1_0_3 < p21_1_0_3))
		next(p21_1_0_3) := p21_1_0_3 - 1;
	else next(p21_1_0_3) := p21_1_0_3;
	if ((notchic1_0_1 > gt2_1_0_1))
		next(gt2_1_0_1) := gt2_1_0_1 + 1;
	else if ((notchic1_0_1 < gt2_1_0_1))
		next(gt2_1_0_1) := gt2_1_0_1 - 1;
	else next(gt2_1_0_1) := gt2_1_0_1;
	if ((notchic2_1_3 > gt2_2_1_3))
		next(gt2_2_1_3) := gt2_2_1_3 + 1;
	else if ((notchic2_1_3 < gt2_2_1_3))
		next(gt2_2_1_3) := gt2_2_1_3 - 1;
	else next(gt2_2_1_3) := gt2_2_1_3;
	if ((notchic1_0_2 > gt2_1_0_2))
		next(gt2_1_0_2) := gt2_1_0_2 + 1;
	else if ((notchic1_0_2 < gt2_1_0_2))
		next(gt2_1_0_2) := gt2_1_0_2 - 1;
	else next(gt2_1_0_2) := gt2_1_0_2;
	if ((notchic1_0_1 > p21_1_0_1))
		next(p21_1_0_1) := p21_1_0_1 + 1;
	else if ((notchic1_0_1 < p21_1_0_1))
		next(p21_1_0_1) := p21_1_0_1 - 1;
	else next(p21_1_0_1) := p21_1_0_1;
	if ((notchic2_1_2 > gt2_2_1_2))
		next(gt2_2_1_2) := gt2_2_1_2 + 1;
	else if ((notchic2_1_2 < gt2_2_1_2))
		next(gt2_2_1_2) := gt2_2_1_2 - 1;
	else next(gt2_2_1_2) := gt2_2_1_2;
	if ((notchic1_0_0 > gt2_1_0_0))
		next(gt2_1_0_0) := gt2_1_0_0 + 1;
	else if ((notchic1_0_0 < gt2_1_0_0))
		next(gt2_1_0_0) := gt2_1_0_0 - 1;
	else next(gt2_1_0_0) := gt2_1_0_0;
	if ((notchic2_1_1 > gt2_2_1_1))
		next(gt2_2_1_1) := gt2_2_1_1 + 1;
	else if ((notchic2_1_1 < gt2_2_1_1))
		next(gt2_2_1_1) := gt2_2_1_1 - 1;
	else next(gt2_2_1_1) := gt2_2_1_1;
	if ((notchic1_0_2 > p21_1_0_2))
		next(p21_1_0_2) := p21_1_0_2 + 1;
	else if ((notchic1_0_2 < p21_1_0_2))
		next(p21_1_0_2) := p21_1_0_2 - 1;
	else next(p21_1_0_2) := p21_1_0_2;
	if ((bcat3_4_0 > gt1_3_4_0))
		next(gt1_3_4_0) := gt1_3_4_0 + 1;
	else if ((bcat3_4_0 < gt1_3_4_0))
		next(gt1_3_4_0) := gt1_3_4_0 - 1;
	else next(gt1_3_4_0) := gt1_3_4_0;
	if ((notchic2_1_0 > gt2_2_1_0))
		next(gt2_2_1_0) := gt2_2_1_0 + 1;
	else if ((notchic2_1_0 < gt2_2_1_0))
		next(gt2_2_1_0) := gt2_2_1_0 - 1;
	else next(gt2_2_1_0) := gt2_2_1_0;
	if ((notchic1_0_0 > p21_1_0_0))
		next(p21_1_0_0) := p21_1_0_0 + 1;
	else if ((notchic1_0_0 < p21_1_0_0))
		next(p21_1_0_0) := p21_1_0_0 - 1;
	else next(p21_1_0_0) := p21_1_0_0;
	if ((bcat3_4_1 > gt1_3_4_1))
		next(gt1_3_4_1) := gt1_3_4_1 + 1;
	else if ((bcat3_4_1 < gt1_3_4_1))
		next(gt1_3_4_1) := gt1_3_4_1 - 1;
	else next(gt1_3_4_1) := gt1_3_4_1;
	if ((notchic1_0_3 > gt2_1_0_3))
		next(gt2_1_0_3) := gt2_1_0_3 + 1;
	else if ((notchic1_0_3 < gt2_1_0_3))
		next(gt2_1_0_3) := gt2_1_0_3 - 1;
	else next(gt2_1_0_3) := gt2_1_0_3;
	if ((notchic1_2_0 > gt2_1_2_0))
		next(gt2_1_2_0) := gt2_1_2_0 + 1;
	else if ((notchic1_2_0 < gt2_1_2_0))
		next(gt2_1_2_0) := gt2_1_2_0 - 1;
	else next(gt2_1_2_0) := gt2_1_2_0;
	if ((wntext0_3_0 > frizzled0_3_0))
		next(frizzled0_3_0) := frizzled0_3_0 + 1;
	else if ((wntext0_3_0 < frizzled0_3_0))
		next(frizzled0_3_0) := frizzled0_3_0 - 1;
	else next(frizzled0_3_0) := frizzled0_3_0;
	if ((notchic1_2_3 > gt2_1_2_3))
		next(gt2_1_2_3) := gt2_1_2_3 + 1;
	else if ((notchic1_2_3 < gt2_1_2_3))
		next(gt2_1_2_3) := gt2_1_2_3 - 1;
	else next(gt2_1_2_3) := gt2_1_2_3;
	if ((notchic1_2_2 > gt2_1_2_2))
		next(gt2_1_2_2) := gt2_1_2_2 + 1;
	else if ((notchic1_2_2 < gt2_1_2_2))
		next(gt2_1_2_2) := gt2_1_2_2 - 1;
	else next(gt2_1_2_2) := gt2_1_2_2;
	if ((notchic1_2_1 > gt2_1_2_1))
		next(gt2_1_2_1) := gt2_1_2_1 + 1;
	else if ((notchic1_2_1 < gt2_1_2_1))
		next(gt2_1_2_1) := gt2_1_2_1 - 1;
	else next(gt2_1_2_1) := gt2_1_2_1;
	if ((wntext0_3_3 > frizzled0_3_3))
		next(frizzled0_3_3) := frizzled0_3_3 + 1;
	else if ((wntext0_3_3 < frizzled0_3_3))
		next(frizzled0_3_3) := frizzled0_3_3 - 1;
	else next(frizzled0_3_3) := frizzled0_3_3;
	if ((wntext0_3_2 > frizzled0_3_2))
		next(frizzled0_3_2) := frizzled0_3_2 + 1;
	else if ((wntext0_3_2 < frizzled0_3_2))
		next(frizzled0_3_2) := frizzled0_3_2 - 1;
	else next(frizzled0_3_2) := frizzled0_3_2;
	if ((wntext0_3_1 > frizzled0_3_1))
		next(frizzled0_3_1) := frizzled0_3_1 + 1;
	else if ((wntext0_3_1 < frizzled0_3_1))
		next(frizzled0_3_1) := frizzled0_3_1 - 1;
	else next(frizzled0_3_1) := frizzled0_3_1;
	if ((notchic3_3_0 > gt2_3_3_0))
		next(gt2_3_3_0) := gt2_3_3_0 + 1;
	else if ((notchic3_3_0 < gt2_3_3_0))
		next(gt2_3_3_0) := gt2_3_3_0 - 1;
	else next(gt2_3_3_0) := gt2_3_3_0;
	if ((notchic3_3_1 > gt2_3_3_1))
		next(gt2_3_3_1) := gt2_3_3_1 + 1;
	else if ((notchic3_3_1 < gt2_3_3_1))
		next(gt2_3_3_1) := gt2_3_3_1 - 1;
	else next(gt2_3_3_1) := gt2_3_3_1;
	if ((wntext4_2_0 > frizzled4_2_0))
		next(frizzled4_2_0) := frizzled4_2_0 + 1;
	else if ((wntext4_2_0 < frizzled4_2_0))
		next(frizzled4_2_0) := frizzled4_2_0 - 1;
	else next(frizzled4_2_0) := frizzled4_2_0;
	if ((wntext4_2_1 > frizzled4_2_1))
		next(frizzled4_2_1) := frizzled4_2_1 + 1;
	else if ((wntext4_2_1 < frizzled4_2_1))
		next(frizzled4_2_1) := frizzled4_2_1 - 1;
	else next(frizzled4_2_1) := frizzled4_2_1;
	if ((wntext4_2_2 > frizzled4_2_2))
		next(frizzled4_2_2) := frizzled4_2_2 + 1;
	else if ((wntext4_2_2 < frizzled4_2_2))
		next(frizzled4_2_2) := frizzled4_2_2 - 1;
	else next(frizzled4_2_2) := frizzled4_2_2;
	if ((wntext4_2_3 > frizzled4_2_3))
		next(frizzled4_2_3) := frizzled4_2_3 + 1;
	else if ((wntext4_2_3 < frizzled4_2_3))
		next(frizzled4_2_3) := frizzled4_2_3 - 1;
	else next(frizzled4_2_3) := frizzled4_2_3;
	if ((notchic2_4_0 > p21_2_4_0))
		next(p21_2_4_0) := p21_2_4_0 + 1;
	else if ((notchic2_4_0 < p21_2_4_0))
		next(p21_2_4_0) := p21_2_4_0 - 1;
	else next(p21_2_4_0) := p21_2_4_0;
	if ((notchic2_4_1 > p21_2_4_1))
		next(p21_2_4_1) := p21_2_4_1 + 1;
	else if ((notchic2_4_1 < p21_2_4_1))
		next(p21_2_4_1) := p21_2_4_1 - 1;
	else next(p21_2_4_1) := p21_2_4_1;
	if ((notchic2_4_2 > p21_2_4_2))
		next(p21_2_4_2) := p21_2_4_2 + 1;
	else if ((notchic2_4_2 < p21_2_4_2))
		next(p21_2_4_2) := p21_2_4_2 - 1;
	else next(p21_2_4_2) := p21_2_4_2;
	if ((notchic2_4_3 > p21_2_4_3))
		next(p21_2_4_3) := p21_2_4_3 + 1;
	else if ((notchic2_4_3 < p21_2_4_3))
		next(p21_2_4_3) := p21_2_4_3 - 1;
	else next(p21_2_4_3) := p21_2_4_3;
	if ((wntext4_4_3 > frizzled4_4_3))
		next(frizzled4_4_3) := frizzled4_4_3 + 1;
	else if ((wntext4_4_3 < frizzled4_4_3))
		next(frizzled4_4_3) := frizzled4_4_3 - 1;
	else next(frizzled4_4_3) := frizzled4_4_3;
	if ((wntext4_4_2 > frizzled4_4_2))
		next(frizzled4_4_2) := frizzled4_4_2 + 1;
	else if ((wntext4_4_2 < frizzled4_4_2))
		next(frizzled4_4_2) := frizzled4_4_2 - 1;
	else next(frizzled4_4_2) := frizzled4_4_2;
	if ((wntext4_4_1 > frizzled4_4_1))
		next(frizzled4_4_1) := frizzled4_4_1 + 1;
	else if ((wntext4_4_1 < frizzled4_4_1))
		next(frizzled4_4_1) := frizzled4_4_1 - 1;
	else next(frizzled4_4_1) := frizzled4_4_1;
	if ((wntext4_4_0 > frizzled4_4_0))
		next(frizzled4_4_0) := frizzled4_4_0 + 1;
	else if ((wntext4_4_0 < frizzled4_4_0))
		next(frizzled4_4_0) := frizzled4_4_0 - 1;
	else next(frizzled4_4_0) := frizzled4_4_0;
	if (((3 - axin1_3_0) > bcat1_3_0))
		next(bcat1_3_0) := bcat1_3_0 + 1;
	else if ((((3 - axin1_3_0) < bcat1_3_0) & (bcat1_3_0 > 0)))
		next(bcat1_3_0) := bcat1_3_0 - 1;
	else next(bcat1_3_0) := bcat1_3_0;
	if (((3 - p21_1_2_0) > wnt1_2_0))
		next(wnt1_2_0) := wnt1_2_0 + 1;
	else if (((3 - p21_1_2_0) < wnt1_2_0))
		next(wnt1_2_0) := wnt1_2_0 - 1;
	else next(wnt1_2_0) := wnt1_2_0;
	if (((3 - p21_1_2_1) > wnt1_2_1))
		next(wnt1_2_1) := wnt1_2_1 + 1;
	else if (((3 - p21_1_2_1) < wnt1_2_1))
		next(wnt1_2_1) := wnt1_2_1 - 1;
	else next(wnt1_2_1) := wnt1_2_1;
	if (((3 - axin1_3_1) > bcat1_3_1))
		next(bcat1_3_1) := bcat1_3_1 + 1;
	else if ((((3 - axin1_3_1) < bcat1_3_1) & (bcat1_3_1 > 0)))
		next(bcat1_3_1) := bcat1_3_1 - 1;
	else next(bcat1_3_1) := bcat1_3_1;
	if (((3 > notchic2_4_0) & (deltaext2_4_0 > notchic2_4_0)))
		next(notchic2_4_0) := notchic2_4_0 + 1;
	else if (((3 < notchic2_4_0) | (deltaext2_4_0 < notchic2_4_0)))
		next(notchic2_4_0) := notchic2_4_0 - 1;
	else next(notchic2_4_0) := notchic2_4_0;
	if (((3 - p21_1_2_2) > wnt1_2_2))
		next(wnt1_2_2) := wnt1_2_2 + 1;
	else if (((3 - p21_1_2_2) < wnt1_2_2))
		next(wnt1_2_2) := wnt1_2_2 - 1;
	else next(wnt1_2_2) := wnt1_2_2;
	if (((3 - p21_1_2_3) > wnt1_2_3))
		next(wnt1_2_3) := wnt1_2_3 + 1;
	else if (((3 - p21_1_2_3) < wnt1_2_3))
		next(wnt1_2_3) := wnt1_2_3 - 1;
	else next(wnt1_2_3) := wnt1_2_3;
	if (((3 > notchic2_4_1) & (deltaext2_4_1 > notchic2_4_1)))
		next(notchic2_4_1) := notchic2_4_1 + 1;
	else if (((3 < notchic2_4_1) | (deltaext2_4_1 < notchic2_4_1)))
		next(notchic2_4_1) := notchic2_4_1 - 1;
	else next(notchic2_4_1) := notchic2_4_1;
	if ((notchic0_0_0 > gt2_0_0_0))
		next(gt2_0_0_0) := gt2_0_0_0 + 1;
	else if ((notchic0_0_0 < gt2_0_0_0))
		next(gt2_0_0_0) := gt2_0_0_0 - 1;
	else next(gt2_0_0_0) := gt2_0_0_0;
	if ((notchic0_0_1 > gt2_0_0_1))
		next(gt2_0_0_1) := gt2_0_0_1 + 1;
	else if ((notchic0_0_1 < gt2_0_0_1))
		next(gt2_0_0_1) := gt2_0_0_1 - 1;
	else next(gt2_0_0_1) := gt2_0_0_1;
	if (((3 - axin1_3_2) > bcat1_3_2))
		next(bcat1_3_2) := bcat1_3_2 + 1;
	else if ((((3 - axin1_3_2) < bcat1_3_2) & (bcat1_3_2 > 0)))
		next(bcat1_3_2) := bcat1_3_2 - 1;
	else next(bcat1_3_2) := bcat1_3_2;
	if ((notchic0_0_2 > gt2_0_0_2))
		next(gt2_0_0_2) := gt2_0_0_2 + 1;
	else if ((notchic0_0_2 < gt2_0_0_2))
		next(gt2_0_0_2) := gt2_0_0_2 - 1;
	else next(gt2_0_0_2) := gt2_0_0_2;
	if (((3 - axin1_3_3) > bcat1_3_3))
		next(bcat1_3_3) := bcat1_3_3 + 1;
	else if ((((3 - axin1_3_3) < bcat1_3_3) & (bcat1_3_3 > 0)))
		next(bcat1_3_3) := bcat1_3_3 - 1;
	else next(bcat1_3_3) := bcat1_3_3;
	if ((notchic0_0_3 > gt2_0_0_3))
		next(gt2_0_0_3) := gt2_0_0_3 + 1;
	else if ((notchic0_0_3 < gt2_0_0_3))
		next(gt2_0_0_3) := gt2_0_0_3 - 1;
	else next(gt2_0_0_3) := gt2_0_0_3;
	if (((3 - p21_3_3_3) > wnt3_3_3))
		next(wnt3_3_3) := wnt3_3_3 + 1;
	else if (((3 - p21_3_3_3) < wnt3_3_3))
		next(wnt3_3_3) := wnt3_3_3 - 1;
	else next(wnt3_3_3) := wnt3_3_3;
	if (((3 - p21_3_3_1) > wnt3_3_1))
		next(wnt3_3_1) := wnt3_3_1 + 1;
	else if (((3 - p21_3_3_1) < wnt3_3_1))
		next(wnt3_3_1) := wnt3_3_1 - 1;
	else next(wnt3_3_1) := wnt3_3_1;
	if (((3 - p21_3_3_2) > wnt3_3_2))
		next(wnt3_3_2) := wnt3_3_2 + 1;
	else if (((3 - p21_3_3_2) < wnt3_3_2))
		next(wnt3_3_2) := wnt3_3_2 - 1;
	else next(wnt3_3_2) := wnt3_3_2;
	if (((3 > notchic2_4_2) & (deltaext2_4_2 > notchic2_4_2)))
		next(notchic2_4_2) := notchic2_4_2 + 1;
	else if (((3 < notchic2_4_2) | (deltaext2_4_2 < notchic2_4_2)))
		next(notchic2_4_2) := notchic2_4_2 - 1;
	else next(notchic2_4_2) := notchic2_4_2;
	if (((gt1_4_2_0 + gt2_4_2_0) > (2 * delta4_2_0)))
		next(delta4_2_0) := delta4_2_0 + 1;
	else if (((gt1_4_2_0 + gt2_4_2_0) < ((2 * delta4_2_0) - 1)))
		next(delta4_2_0) := delta4_2_0 - 1;
	else next(delta4_2_0) := delta4_2_0;
	if (((3 > notchic2_4_3) & (deltaext2_4_3 > notchic2_4_3)))
		next(notchic2_4_3) := notchic2_4_3 + 1;
	else if (((3 < notchic2_4_3) | (deltaext2_4_3 < notchic2_4_3)))
		next(notchic2_4_3) := notchic2_4_3 - 1;
	else next(notchic2_4_3) := notchic2_4_3;
	if (((3 - p21_3_3_0) > wnt3_3_0))
		next(wnt3_3_0) := wnt3_3_0 + 1;
	else if (((3 - p21_3_3_0) < wnt3_3_0))
		next(wnt3_3_0) := wnt3_3_0 - 1;
	else next(wnt3_3_0) := wnt3_3_0;
	if (((gt1_4_2_1 + gt2_4_2_1) > (2 * delta4_2_1)))
		next(delta4_2_1) := delta4_2_1 + 1;
	else if (((gt1_4_2_1 + gt2_4_2_1) < ((2 * delta4_2_1) - 1)))
		next(delta4_2_1) := delta4_2_1 - 1;
	else next(delta4_2_1) := delta4_2_1;
	if (((gt1_4_2_2 + gt2_4_2_2) > (2 * delta4_2_2)))
		next(delta4_2_2) := delta4_2_2 + 1;
	else if (((gt1_4_2_2 + gt2_4_2_2) < ((2 * delta4_2_2) - 1)))
		next(delta4_2_2) := delta4_2_2 - 1;
	else next(delta4_2_2) := delta4_2_2;
	if (((gt1_4_2_3 + gt2_4_2_3) > (2 * delta4_2_3)))
		next(delta4_2_3) := delta4_2_3 + 1;
	else if (((gt1_4_2_3 + gt2_4_2_3) < ((2 * delta4_2_3) - 1)))
		next(delta4_2_3) := delta4_2_3 - 1;
	else next(delta4_2_3) := delta4_2_3;
	if (((gt1_3_3_0 + gt2_3_3_0) > (2 * delta3_3_0)))
		next(delta3_3_0) := delta3_3_0 + 1;
	else if (((gt1_3_3_0 + gt2_3_3_0) < ((2 * delta3_3_0) - 1)))
		next(delta3_3_0) := delta3_3_0 - 1;
	else next(delta3_3_0) := delta3_3_0;
	if (((gt1_3_3_1 + gt2_3_3_1) > (2 * delta3_3_1)))
		next(delta3_3_1) := delta3_3_1 + 1;
	else if (((gt1_3_3_1 + gt2_3_3_1) < ((2 * delta3_3_1) - 1)))
		next(delta3_3_1) := delta3_3_1 - 1;
	else next(delta3_3_1) := delta3_3_1;
	if (((gt1_3_3_2 + gt2_3_3_2) > (2 * delta3_3_2)))
		next(delta3_3_2) := delta3_3_2 + 1;
	else if (((gt1_3_3_2 + gt2_3_3_2) < ((2 * delta3_3_2) - 1)))
		next(delta3_3_2) := delta3_3_2 - 1;
	else next(delta3_3_2) := delta3_3_2;
	if (((gt1_3_3_3 + gt2_3_3_3) > (2 * delta3_3_3)))
		next(delta3_3_3) := delta3_3_3 + 1;
	else if (((gt1_3_3_3 + gt2_3_3_3) < ((2 * delta3_3_3) - 1)))
		next(delta3_3_3) := delta3_3_3 - 1;
	else next(delta3_3_3) := delta3_3_3;
	if (((3 - axin1_1_3) > bcat1_1_3))
		next(bcat1_1_3) := bcat1_1_3 + 1;
	else if ((((3 - axin1_1_3) < bcat1_1_3) & (bcat1_1_3 > 0)))
		next(bcat1_1_3) := bcat1_1_3 - 1;
	else next(bcat1_1_3) := bcat1_1_3;
	if ((bcat1_1_3 > gt1_1_1_3))
		next(gt1_1_1_3) := gt1_1_1_3 + 1;
	else if ((bcat1_1_3 < gt1_1_1_3))
		next(gt1_1_1_3) := gt1_1_1_3 - 1;
	else next(gt1_1_1_3) := gt1_1_1_3;
	if (((3 - axin1_1_2) > bcat1_1_2))
		next(bcat1_1_2) := bcat1_1_2 + 1;
	else if ((((3 - axin1_1_2) < bcat1_1_2) & (bcat1_1_2 > 0)))
		next(bcat1_1_2) := bcat1_1_2 - 1;
	else next(bcat1_1_2) := bcat1_1_2;
	if (((3 - axin1_1_1) > bcat1_1_1))
		next(bcat1_1_1) := bcat1_1_1 + 1;
	else if ((((3 - axin1_1_1) < bcat1_1_1) & (bcat1_1_1 > 0)))
		next(bcat1_1_1) := bcat1_1_1 - 1;
	else next(bcat1_1_1) := bcat1_1_1;
	if (((3 - axin1_1_0) > bcat1_1_0))
		next(bcat1_1_0) := bcat1_1_0 + 1;
	else if ((((3 - axin1_1_0) < bcat1_1_0) & (bcat1_1_0 > 0)))
		next(bcat1_1_0) := bcat1_1_0 - 1;
	else next(bcat1_1_0) := bcat1_1_0;
	if ((bcat1_1_0 > gt1_1_1_0))
		next(gt1_1_1_0) := gt1_1_1_0 + 1;
	else if ((bcat1_1_0 < gt1_1_1_0))
		next(gt1_1_1_0) := gt1_1_1_0 - 1;
	else next(gt1_1_1_0) := gt1_1_1_0;
	if ((bcat1_1_2 > gt1_1_1_2))
		next(gt1_1_1_2) := gt1_1_1_2 + 1;
	else if ((bcat1_1_2 < gt1_1_1_2))
		next(gt1_1_1_2) := gt1_1_1_2 - 1;
	else next(gt1_1_1_2) := gt1_1_1_2;
	if ((bcat1_1_1 > gt1_1_1_1))
		next(gt1_1_1_1) := gt1_1_1_1 + 1;
	else if ((bcat1_1_1 < gt1_1_1_1))
		next(gt1_1_1_1) := gt1_1_1_1 - 1;
	else next(gt1_1_1_1) := gt1_1_1_1;
	if ((notchic0_2_2 > gt2_0_2_2))
		next(gt2_0_2_2) := gt2_0_2_2 + 1;
	else if ((notchic0_2_2 < gt2_0_2_2))
		next(gt2_0_2_2) := gt2_0_2_2 - 1;
	else next(gt2_0_2_2) := gt2_0_2_2;
	if ((notchic0_2_3 > gt2_0_2_3))
		next(gt2_0_2_3) := gt2_0_2_3 + 1;
	else if ((notchic0_2_3 < gt2_0_2_3))
		next(gt2_0_2_3) := gt2_0_2_3 - 1;
	else next(gt2_0_2_3) := gt2_0_2_3;
	if ((notchic0_2_0 > gt2_0_2_0))
		next(gt2_0_2_0) := gt2_0_2_0 + 1;
	else if ((notchic0_2_0 < gt2_0_2_0))
		next(gt2_0_2_0) := gt2_0_2_0 - 1;
	else next(gt2_0_2_0) := gt2_0_2_0;
	if ((notchic0_2_1 > gt2_0_2_1))
		next(gt2_0_2_1) := gt2_0_2_1 + 1;
	else if ((notchic0_2_1 < gt2_0_2_1))
		next(gt2_0_2_1) := gt2_0_2_1 - 1;
	else next(gt2_0_2_1) := gt2_0_2_1;
	if ((notchic0_4_3 > gt2_0_4_3))
		next(gt2_0_4_3) := gt2_0_4_3 + 1;
	else if ((notchic0_4_3 < gt2_0_4_3))
		next(gt2_0_4_3) := gt2_0_4_3 - 1;
	else next(gt2_0_4_3) := gt2_0_4_3;
	if ((bcat1_3_3 > gt1_1_3_3))
		next(gt1_1_3_3) := gt1_1_3_3 + 1;
	else if ((bcat1_3_3 < gt1_1_3_3))
		next(gt1_1_3_3) := gt1_1_3_3 - 1;
	else next(gt1_1_3_3) := gt1_1_3_3;
	if ((notchic0_4_2 > gt2_0_4_2))
		next(gt2_0_4_2) := gt2_0_4_2 + 1;
	else if ((notchic0_4_2 < gt2_0_4_2))
		next(gt2_0_4_2) := gt2_0_4_2 - 1;
	else next(gt2_0_4_2) := gt2_0_4_2;
	if ((bcat1_3_2 > gt1_1_3_2))
		next(gt1_1_3_2) := gt1_1_3_2 + 1;
	else if ((bcat1_3_2 < gt1_1_3_2))
		next(gt1_1_3_2) := gt1_1_3_2 - 1;
	else next(gt1_1_3_2) := gt1_1_3_2;
	if ((notchic0_4_1 > gt2_0_4_1))
		next(gt2_0_4_1) := gt2_0_4_1 + 1;
	else if ((notchic0_4_1 < gt2_0_4_1))
		next(gt2_0_4_1) := gt2_0_4_1 - 1;
	else next(gt2_0_4_1) := gt2_0_4_1;
	if (((wnt4_0_3 + wnt3_1_3 + wnt2_0_3 + wnt3_0_2) > (3 + (4 * wntext3_0_3))))
		next(wntext3_0_3) := wntext3_0_3 + 1;
	else if (((wnt4_0_3 + wnt3_1_3 + wnt2_0_3 + wnt3_0_2) < (4 * wntext3_0_3)))
		next(wntext3_0_3) := wntext3_0_3 - 1;
	else next(wntext3_0_3) := wntext3_0_3;
	if ((notchic0_4_0 > gt2_0_4_0))
		next(gt2_0_4_0) := gt2_0_4_0 + 1;
	else if ((notchic0_4_0 < gt2_0_4_0))
		next(gt2_0_4_0) := gt2_0_4_0 - 1;
	else next(gt2_0_4_0) := gt2_0_4_0;
	if ((bcat1_3_1 > gt1_1_3_1))
		next(gt1_1_3_1) := gt1_1_3_1 + 1;
	else if ((bcat1_3_1 < gt1_1_3_1))
		next(gt1_1_3_1) := gt1_1_3_1 - 1;
	else next(gt1_1_3_1) := gt1_1_3_1;
	if ((bcat1_3_0 > gt1_1_3_0))
		next(gt1_1_3_0) := gt1_1_3_0 + 1;
	else if ((bcat1_3_0 < gt1_1_3_0))
		next(gt1_1_3_0) := gt1_1_3_0 - 1;
	else next(gt1_1_3_0) := gt1_1_3_0;
	if (((wnt4_0_2 + wnt3_1_2 + wnt2_0_2 + wnt3_0_1 + wnt3_0_3) > (4 + (5 * wntext3_0_2))))
		next(wntext3_0_2) := wntext3_0_2 + 1;
	else if (((wnt4_0_2 + wnt3_1_2 + wnt2_0_2 + wnt3_0_1 + wnt3_0_3) < (5 * wntext3_0_2)))
		next(wntext3_0_2) := wntext3_0_2 - 1;
	else next(wntext3_0_2) := wntext3_0_2;
	if (((wnt4_0_1 + wnt3_1_1 + wnt2_0_1 + wnt3_0_0 + wnt3_0_2) > (4 + (5 * wntext3_0_1))))
		next(wntext3_0_1) := wntext3_0_1 + 1;
	else if (((wnt4_0_1 + wnt3_1_1 + wnt2_0_1 + wnt3_0_0 + wnt3_0_2) < (5 * wntext3_0_1)))
		next(wntext3_0_1) := wntext3_0_1 - 1;
	else next(wntext3_0_1) := wntext3_0_1;
	if (((wnt4_0_0 + wnt3_1_0 + wnt2_0_0 + wnt3_0_1) > (3 + (4 * wntext3_0_0))))
		next(wntext3_0_0) := wntext3_0_0 + 1;
	else if (((wnt4_0_0 + wnt3_1_0 + wnt2_0_0 + wnt3_0_1) < (4 * wntext3_0_0)))
		next(wntext3_0_0) := wntext3_0_0 - 1;
	else next(wntext3_0_0) := wntext3_0_0;
	if (((delta1_0_3 + delta0_1_3 + 2 + delta0_0_2) > (4 * deltaext0_0_3)))
		next(deltaext0_0_3) := deltaext0_0_3 + 1;
	else if (((delta1_0_3 + delta0_1_3 + 2 + delta0_0_2) < ((4 * deltaext0_0_3) - 3)))
		next(deltaext0_0_3) := deltaext0_0_3 - 1;
	else next(deltaext0_0_3) := deltaext0_0_3;
	if (((wnt2_2_1 + wnt3_3_1 + wnt2_4_1 + wnt1_3_1 + wnt2_3_0 + wnt2_3_2) > (5 + (6 * wntext2_3_1))))
		next(wntext2_3_1) := wntext2_3_1 + 1;
	else if (((wnt2_2_1 + wnt3_3_1 + wnt2_4_1 + wnt1_3_1 + wnt2_3_0 + wnt2_3_2) < (6 * wntext2_3_1)))
		next(wntext2_3_1) := wntext2_3_1 - 1;
	else next(wntext2_3_1) := wntext2_3_1;
	if (((wnt2_2_2 + wnt3_3_2 + wnt2_4_2 + wnt1_3_2 + wnt2_3_1 + wnt2_3_3) > (5 + (6 * wntext2_3_2))))
		next(wntext2_3_2) := wntext2_3_2 + 1;
	else if (((wnt2_2_2 + wnt3_3_2 + wnt2_4_2 + wnt1_3_2 + wnt2_3_1 + wnt2_3_3) < (6 * wntext2_3_2)))
		next(wntext2_3_2) := wntext2_3_2 - 1;
	else next(wntext2_3_2) := wntext2_3_2;
	if ((wntext1_2_0 > frizzled1_2_0))
		next(frizzled1_2_0) := frizzled1_2_0 + 1;
	else if ((wntext1_2_0 < frizzled1_2_0))
		next(frizzled1_2_0) := frizzled1_2_0 - 1;
	else next(frizzled1_2_0) := frizzled1_2_0;
	if (((wnt2_2_3 + wnt3_3_3 + wnt2_4_3 + wnt1_3_3 + wnt2_3_2) > (4 + (5 * wntext2_3_3))))
		next(wntext2_3_3) := wntext2_3_3 + 1;
	else if (((wnt2_2_3 + wnt3_3_3 + wnt2_4_3 + wnt1_3_3 + wnt2_3_2) < (5 * wntext2_3_3)))
		next(wntext2_3_3) := wntext2_3_3 - 1;
	else next(wntext2_3_3) := wntext2_3_3;
	if ((notchic4_1_1 > p21_4_1_1))
		next(p21_4_1_1) := p21_4_1_1 + 1;
	else if ((notchic4_1_1 < p21_4_1_1))
		next(p21_4_1_1) := p21_4_1_1 - 1;
	else next(p21_4_1_1) := p21_4_1_1;
	if (((delta1_0_0 + delta0_1_0 + 2 + delta0_0_1) > (4 * deltaext0_0_0)))
		next(deltaext0_0_0) := deltaext0_0_0 + 1;
	else if (((delta1_0_0 + delta0_1_0 + 2 + delta0_0_1) < ((4 * deltaext0_0_0) - 3)))
		next(deltaext0_0_0) := deltaext0_0_0 - 1;
	else next(deltaext0_0_0) := deltaext0_0_0;
	if ((notchic4_1_2 > p21_4_1_2))
		next(p21_4_1_2) := p21_4_1_2 + 1;
	else if ((notchic4_1_2 < p21_4_1_2))
		next(p21_4_1_2) := p21_4_1_2 - 1;
	else next(p21_4_1_2) := p21_4_1_2;
	if ((notchic4_1_3 > p21_4_1_3))
		next(p21_4_1_3) := p21_4_1_3 + 1;
	else if ((notchic4_1_3 < p21_4_1_3))
		next(p21_4_1_3) := p21_4_1_3 - 1;
	else next(p21_4_1_3) := p21_4_1_3;
	if (((delta1_0_1 + delta0_1_1 + 2 + delta0_0_0 + delta0_0_2) > (5 * deltaext0_0_1)))
		next(deltaext0_0_1) := deltaext0_0_1 + 1;
	else if (((delta1_0_1 + delta0_1_1 + 2 + delta0_0_0 + delta0_0_2) < ((5 * deltaext0_0_1) - 4)))
		next(deltaext0_0_1) := deltaext0_0_1 - 1;
	else next(deltaext0_0_1) := deltaext0_0_1;
	if (((wnt2_2_0 + wnt3_3_0 + wnt2_4_0 + wnt1_3_0 + wnt2_3_1) > (4 + (5 * wntext2_3_0))))
		next(wntext2_3_0) := wntext2_3_0 + 1;
	else if (((wnt2_2_0 + wnt3_3_0 + wnt2_4_0 + wnt1_3_0 + wnt2_3_1) < (5 * wntext2_3_0)))
		next(wntext2_3_0) := wntext2_3_0 - 1;
	else next(wntext2_3_0) := wntext2_3_0;
	if (((delta1_0_2 + delta0_1_2 + 2 + delta0_0_1 + delta0_0_3) > (5 * deltaext0_0_2)))
		next(deltaext0_0_2) := deltaext0_0_2 + 1;
	else if (((delta1_0_2 + delta0_1_2 + 2 + delta0_0_1 + delta0_0_3) < ((5 * deltaext0_0_2) - 4)))
		next(deltaext0_0_2) := deltaext0_0_2 - 1;
	else next(deltaext0_0_2) := deltaext0_0_2;
	if (((3 - p21_2_3_1) > wnt2_3_1))
		next(wnt2_3_1) := wnt2_3_1 + 1;
	else if (((3 - p21_2_3_1) < wnt2_3_1))
		next(wnt2_3_1) := wnt2_3_1 - 1;
	else next(wnt2_3_1) := wnt2_3_1;
	if (((3 - p21_2_3_0) > wnt2_3_0))
		next(wnt2_3_0) := wnt2_3_0 + 1;
	else if (((3 - p21_2_3_0) < wnt2_3_0))
		next(wnt2_3_0) := wnt2_3_0 - 1;
	else next(wnt2_3_0) := wnt2_3_0;
	if ((notchic4_1_0 > p21_4_1_0))
		next(p21_4_1_0) := p21_4_1_0 + 1;
	else if ((notchic4_1_0 < p21_4_1_0))
		next(p21_4_1_0) := p21_4_1_0 - 1;
	else next(p21_4_1_0) := p21_4_1_0;
	if (((3 - p21_2_3_3) > wnt2_3_3))
		next(wnt2_3_3) := wnt2_3_3 + 1;
	else if (((3 - p21_2_3_3) < wnt2_3_3))
		next(wnt2_3_3) := wnt2_3_3 - 1;
	else next(wnt2_3_3) := wnt2_3_3;
	if ((wntext1_2_3 > frizzled1_2_3))
		next(frizzled1_2_3) := frizzled1_2_3 + 1;
	else if ((wntext1_2_3 < frizzled1_2_3))
		next(frizzled1_2_3) := frizzled1_2_3 - 1;
	else next(frizzled1_2_3) := frizzled1_2_3;
	if (((gt1_2_4_0 + gt2_2_4_0) > (2 * delta2_4_0)))
		next(delta2_4_0) := delta2_4_0 + 1;
	else if (((gt1_2_4_0 + gt2_2_4_0) < ((2 * delta2_4_0) - 1)))
		next(delta2_4_0) := delta2_4_0 - 1;
	else next(delta2_4_0) := delta2_4_0;
	if (((3 - p21_2_3_2) > wnt2_3_2))
		next(wnt2_3_2) := wnt2_3_2 + 1;
	else if (((3 - p21_2_3_2) < wnt2_3_2))
		next(wnt2_3_2) := wnt2_3_2 - 1;
	else next(wnt2_3_2) := wnt2_3_2;
	if (((gt1_2_4_1 + gt2_2_4_1) > (2 * delta2_4_1)))
		next(delta2_4_1) := delta2_4_1 + 1;
	else if (((gt1_2_4_1 + gt2_2_4_1) < ((2 * delta2_4_1) - 1)))
		next(delta2_4_1) := delta2_4_1 - 1;
	else next(delta2_4_1) := delta2_4_1;
	if (((gt1_2_4_2 + gt2_2_4_2) > (2 * delta2_4_2)))
		next(delta2_4_2) := delta2_4_2 + 1;
	else if (((gt1_2_4_2 + gt2_2_4_2) < ((2 * delta2_4_2) - 1)))
		next(delta2_4_2) := delta2_4_2 - 1;
	else next(delta2_4_2) := delta2_4_2;
	if ((wntext1_2_1 > frizzled1_2_1))
		next(frizzled1_2_1) := frizzled1_2_1 + 1;
	else if ((wntext1_2_1 < frizzled1_2_1))
		next(frizzled1_2_1) := frizzled1_2_1 - 1;
	else next(frizzled1_2_1) := frizzled1_2_1;
	if (((gt1_2_4_3 + gt2_2_4_3) > (2 * delta2_4_3)))
		next(delta2_4_3) := delta2_4_3 + 1;
	else if (((gt1_2_4_3 + gt2_2_4_3) < ((2 * delta2_4_3) - 1)))
		next(delta2_4_3) := delta2_4_3 - 1;
	else next(delta2_4_3) := delta2_4_3;
	if ((wntext1_2_2 > frizzled1_2_2))
		next(frizzled1_2_2) := frizzled1_2_2 + 1;
	else if ((wntext1_2_2 < frizzled1_2_2))
		next(frizzled1_2_2) := frizzled1_2_2 - 1;
	else next(frizzled1_2_2) := frizzled1_2_2;
	if (((3 - p21_2_1_0) > wnt2_1_0))
		next(wnt2_1_0) := wnt2_1_0 + 1;
	else if (((3 - p21_2_1_0) < wnt2_1_0))
		next(wnt2_1_0) := wnt2_1_0 - 1;
	else next(wnt2_1_0) := wnt2_1_0;
	if (((3 - p21_2_1_1) > wnt2_1_1))
		next(wnt2_1_1) := wnt2_1_1 + 1;
	else if (((3 - p21_2_1_1) < wnt2_1_1))
		next(wnt2_1_1) := wnt2_1_1 - 1;
	else next(wnt2_1_1) := wnt2_1_1;
	if (((3 - p21_2_1_2) > wnt2_1_2))
		next(wnt2_1_2) := wnt2_1_2 + 1;
	else if (((3 - p21_2_1_2) < wnt2_1_2))
		next(wnt2_1_2) := wnt2_1_2 - 1;
	else next(wnt2_1_2) := wnt2_1_2;
	if (((3 - p21_2_1_3) > wnt2_1_3))
		next(wnt2_1_3) := wnt2_1_3 + 1;
	else if (((3 - p21_2_1_3) < wnt2_1_3))
		next(wnt2_1_3) := wnt2_1_3 - 1;
	else next(wnt2_1_3) := wnt2_1_3;
	if (((3 > notchic3_3_3) & (deltaext3_3_3 > notchic3_3_3)))
		next(notchic3_3_3) := notchic3_3_3 + 1;
	else if (((3 < notchic3_3_3) | (deltaext3_3_3 < notchic3_3_3)))
		next(notchic3_3_3) := notchic3_3_3 - 1;
	else next(notchic3_3_3) := notchic3_3_3;
	if (((3 > notchic3_3_2) & (deltaext3_3_2 > notchic3_3_2)))
		next(notchic3_3_2) := notchic3_3_2 + 1;
	else if (((3 < notchic3_3_2) | (deltaext3_3_2 < notchic3_3_2)))
		next(notchic3_3_2) := notchic3_3_2 - 1;
	else next(notchic3_3_2) := notchic3_3_2;
	if ((wntext1_0_3 > frizzled1_0_3))
		next(frizzled1_0_3) := frizzled1_0_3 + 1;
	else if ((wntext1_0_3 < frizzled1_0_3))
		next(frizzled1_0_3) := frizzled1_0_3 - 1;
	else next(frizzled1_0_3) := frizzled1_0_3;
	if ((frizzled3_3_0 > dsh3_3_0))
		next(dsh3_3_0) := dsh3_3_0 + 1;
	else if ((frizzled3_3_0 < dsh3_3_0))
		next(dsh3_3_0) := dsh3_3_0 - 1;
	else next(dsh3_3_0) := dsh3_3_0;
	if (((1 > notchic0_3_1) & (deltaext0_3_1 > notchic0_3_1)))
		next(notchic0_3_1) := notchic0_3_1 + 1;
	else if (((1 < notchic0_3_1) | (deltaext0_3_1 < notchic0_3_1)))
		next(notchic0_3_1) := notchic0_3_1 - 1;
	else next(notchic0_3_1) := notchic0_3_1;
	if ((wntext1_0_2 > frizzled1_0_2))
		next(frizzled1_0_2) := frizzled1_0_2 + 1;
	else if ((wntext1_0_2 < frizzled1_0_2))
		next(frizzled1_0_2) := frizzled1_0_2 - 1;
	else next(frizzled1_0_2) := frizzled1_0_2;
	if ((notchic4_3_3 > p21_4_3_3))
		next(p21_4_3_3) := p21_4_3_3 + 1;
	else if ((notchic4_3_3 < p21_4_3_3))
		next(p21_4_3_3) := p21_4_3_3 - 1;
	else next(p21_4_3_3) := p21_4_3_3;
	if (((1 > notchic0_3_2) & (deltaext0_3_2 > notchic0_3_2)))
		next(notchic0_3_2) := notchic0_3_2 + 1;
	else if (((1 < notchic0_3_2) | (deltaext0_3_2 < notchic0_3_2)))
		next(notchic0_3_2) := notchic0_3_2 - 1;
	else next(notchic0_3_2) := notchic0_3_2;
	if ((wntext1_0_1 > frizzled1_0_1))
		next(frizzled1_0_1) := frizzled1_0_1 + 1;
	else if ((wntext1_0_1 < frizzled1_0_1))
		next(frizzled1_0_1) := frizzled1_0_1 - 1;
	else next(frizzled1_0_1) := frizzled1_0_1;
	if (((1 > notchic0_3_3) & (deltaext0_3_3 > notchic0_3_3)))
		next(notchic0_3_3) := notchic0_3_3 + 1;
	else if (((1 < notchic0_3_3) | (deltaext0_3_3 < notchic0_3_3)))
		next(notchic0_3_3) := notchic0_3_3 - 1;
	else next(notchic0_3_3) := notchic0_3_3;
	if ((wntext1_0_0 > frizzled1_0_0))
		next(frizzled1_0_0) := frizzled1_0_0 + 1;
	else if ((wntext1_0_0 < frizzled1_0_0))
		next(frizzled1_0_0) := frizzled1_0_0 - 1;
	else next(frizzled1_0_0) := frizzled1_0_0;
	if (((3 > notchic3_3_1) & (deltaext3_3_1 > notchic3_3_1)))
		next(notchic3_3_1) := notchic3_3_1 + 1;
	else if (((3 < notchic3_3_1) | (deltaext3_3_1 < notchic3_3_1)))
		next(notchic3_3_1) := notchic3_3_1 - 1;
	else next(notchic3_3_1) := notchic3_3_1;
	if (((3 > notchic3_3_0) & (deltaext3_3_0 > notchic3_3_0)))
		next(notchic3_3_0) := notchic3_3_0 + 1;
	else if (((3 < notchic3_3_0) | (deltaext3_3_0 < notchic3_3_0)))
		next(notchic3_3_0) := notchic3_3_0 - 1;
	else next(notchic3_3_0) := notchic3_3_0;
	if ((notchic4_3_0 > p21_4_3_0))
		next(p21_4_3_0) := p21_4_3_0 + 1;
	else if ((notchic4_3_0 < p21_4_3_0))
		next(p21_4_3_0) := p21_4_3_0 - 1;
	else next(p21_4_3_0) := p21_4_3_0;
	if (((3 - dsh3_3_1) > axin3_3_1))
		next(axin3_3_1) := axin3_3_1 + 1;
	else if ((((3 - dsh3_3_1) < axin3_3_1) & (axin3_3_1 > 0)))
		next(axin3_3_1) := axin3_3_1 - 1;
	else next(axin3_3_1) := axin3_3_1;
	if (((3 - dsh3_3_0) > axin3_3_0))
		next(axin3_3_0) := axin3_3_0 + 1;
	else if ((((3 - dsh3_3_0) < axin3_3_0) & (axin3_3_0 > 0)))
		next(axin3_3_0) := axin3_3_0 - 1;
	else next(axin3_3_0) := axin3_3_0;
	if (((3 - dsh3_3_3) > axin3_3_3))
		next(axin3_3_3) := axin3_3_3 + 1;
	else if ((((3 - dsh3_3_3) < axin3_3_3) & (axin3_3_3 > 0)))
		next(axin3_3_3) := axin3_3_3 - 1;
	else next(axin3_3_3) := axin3_3_3;
	if ((notchic4_3_2 > p21_4_3_2))
		next(p21_4_3_2) := p21_4_3_2 + 1;
	else if ((notchic4_3_2 < p21_4_3_2))
		next(p21_4_3_2) := p21_4_3_2 - 1;
	else next(p21_4_3_2) := p21_4_3_2;
	if (((3 - dsh3_3_2) > axin3_3_2))
		next(axin3_3_2) := axin3_3_2 + 1;
	else if ((((3 - dsh3_3_2) < axin3_3_2) & (axin3_3_2 > 0)))
		next(axin3_3_2) := axin3_3_2 - 1;
	else next(axin3_3_2) := axin3_3_2;
	if (((1 > notchic0_3_0) & (deltaext0_3_0 > notchic0_3_0)))
		next(notchic0_3_0) := notchic0_3_0 + 1;
	else if (((1 < notchic0_3_0) | (deltaext0_3_0 < notchic0_3_0)))
		next(notchic0_3_0) := notchic0_3_0 - 1;
	else next(notchic0_3_0) := notchic0_3_0;
	if ((notchic4_3_1 > p21_4_3_1))
		next(p21_4_3_1) := p21_4_3_1 + 1;
	else if ((notchic4_3_1 < p21_4_3_1))
		next(p21_4_3_1) := p21_4_3_1 - 1;
	else next(p21_4_3_1) := p21_4_3_1;
	if ((notchic2_1_0 > p21_2_1_0))
		next(p21_2_1_0) := p21_2_1_0 + 1;
	else if ((notchic2_1_0 < p21_2_1_0))
		next(p21_2_1_0) := p21_2_1_0 - 1;
	else next(p21_2_1_0) := p21_2_1_0;
	if ((notchic2_1_2 > p21_2_1_2))
		next(p21_2_1_2) := p21_2_1_2 + 1;
	else if ((notchic2_1_2 < p21_2_1_2))
		next(p21_2_1_2) := p21_2_1_2 - 1;
	else next(p21_2_1_2) := p21_2_1_2;
	if ((notchic2_1_1 > p21_2_1_1))
		next(p21_2_1_1) := p21_2_1_1 + 1;
	else if ((notchic2_1_1 < p21_2_1_1))
		next(p21_2_1_1) := p21_2_1_1 - 1;
	else next(p21_2_1_1) := p21_2_1_1;
	if ((notchic4_4_1 > gt2_4_4_1))
		next(gt2_4_4_1) := gt2_4_4_1 + 1;
	else if ((notchic4_4_1 < gt2_4_4_1))
		next(gt2_4_4_1) := gt2_4_4_1 - 1;
	else next(gt2_4_4_1) := gt2_4_4_1;
	if ((notchic4_4_0 > gt2_4_4_0))
		next(gt2_4_4_0) := gt2_4_4_0 + 1;
	else if ((notchic4_4_0 < gt2_4_4_0))
		next(gt2_4_4_0) := gt2_4_4_0 - 1;
	else next(gt2_4_4_0) := gt2_4_4_0;
	if ((notchic4_4_3 > gt2_4_4_3))
		next(gt2_4_4_3) := gt2_4_4_3 + 1;
	else if ((notchic4_4_3 < gt2_4_4_3))
		next(gt2_4_4_3) := gt2_4_4_3 - 1;
	else next(gt2_4_4_3) := gt2_4_4_3;
	if ((notchic4_4_2 > gt2_4_4_2))
		next(gt2_4_4_2) := gt2_4_4_2 + 1;
	else if ((notchic4_4_2 < gt2_4_4_2))
		next(gt2_4_4_2) := gt2_4_4_2 - 1;
	else next(gt2_4_4_2) := gt2_4_4_2;
	if ((notchic2_1_3 > p21_2_1_3))
		next(p21_2_1_3) := p21_2_1_3 + 1;
	else if ((notchic2_1_3 < p21_2_1_3))
		next(p21_2_1_3) := p21_2_1_3 - 1;
	else next(p21_2_1_3) := p21_2_1_3;
	if (((3 > notchic3_1_3) & (deltaext3_1_3 > notchic3_1_3)))
		next(notchic3_1_3) := notchic3_1_3 + 1;
	else if (((3 < notchic3_1_3) | (deltaext3_1_3 < notchic3_1_3)))
		next(notchic3_1_3) := notchic3_1_3 - 1;
	else next(notchic3_1_3) := notchic3_1_3;
	if ((bcat4_0_0 > gt1_4_0_0))
		next(gt1_4_0_0) := gt1_4_0_0 + 1;
	else if ((bcat4_0_0 < gt1_4_0_0))
		next(gt1_4_0_0) := gt1_4_0_0 - 1;
	else next(gt1_4_0_0) := gt1_4_0_0;
	if (((3 > notchic3_1_2) & (deltaext3_1_2 > notchic3_1_2)))
		next(notchic3_1_2) := notchic3_1_2 + 1;
	else if (((3 < notchic3_1_2) | (deltaext3_1_2 < notchic3_1_2)))
		next(notchic3_1_2) := notchic3_1_2 - 1;
	else next(notchic3_1_2) := notchic3_1_2;
	if (((3 > notchic3_1_1) & (deltaext3_1_1 > notchic3_1_1)))
		next(notchic3_1_1) := notchic3_1_1 + 1;
	else if (((3 < notchic3_1_1) | (deltaext3_1_1 < notchic3_1_1)))
		next(notchic3_1_1) := notchic3_1_1 - 1;
	else next(notchic3_1_1) := notchic3_1_1;
	if (((3 > notchic3_1_0) & (deltaext3_1_0 > notchic3_1_0)))
		next(notchic3_1_0) := notchic3_1_0 + 1;
	else if (((3 < notchic3_1_0) | (deltaext3_1_0 < notchic3_1_0)))
		next(notchic3_1_0) := notchic3_1_0 - 1;
	else next(notchic3_1_0) := notchic3_1_0;
	if (((3 - p21_4_4_3) > wnt4_4_3))
		next(wnt4_4_3) := wnt4_4_3 + 1;
	else if (((3 - p21_4_4_3) < wnt4_4_3))
		next(wnt4_4_3) := wnt4_4_3 - 1;
	else next(wnt4_4_3) := wnt4_4_3;
	if ((bcat4_0_3 > gt1_4_0_3))
		next(gt1_4_0_3) := gt1_4_0_3 + 1;
	else if ((bcat4_0_3 < gt1_4_0_3))
		next(gt1_4_0_3) := gt1_4_0_3 - 1;
	else next(gt1_4_0_3) := gt1_4_0_3;
	if ((bcat4_0_2 > gt1_4_0_2))
		next(gt1_4_0_2) := gt1_4_0_2 + 1;
	else if ((bcat4_0_2 < gt1_4_0_2))
		next(gt1_4_0_2) := gt1_4_0_2 - 1;
	else next(gt1_4_0_2) := gt1_4_0_2;
	if ((bcat4_0_1 > gt1_4_0_1))
		next(gt1_4_0_1) := gt1_4_0_1 + 1;
	else if ((bcat4_0_1 < gt1_4_0_1))
		next(gt1_4_0_1) := gt1_4_0_1 - 1;
	else next(gt1_4_0_1) := gt1_4_0_1;
	if (((wnt4_3_2 + 0 + wnt3_4_2 + wnt4_4_1 + wnt4_4_3) > (4 + (5 * wntext4_4_2))))
		next(wntext4_4_2) := wntext4_4_2 + 1;
	else if (((wnt4_3_2 + 0 + wnt3_4_2 + wnt4_4_1 + wnt4_4_3) < (5 * wntext4_4_2)))
		next(wntext4_4_2) := wntext4_4_2 - 1;
	else next(wntext4_4_2) := wntext4_4_2;
	if (((3 - p21_4_0_2) > wnt4_0_2))
		next(wnt4_0_2) := wnt4_0_2 + 1;
	else if (((3 - p21_4_0_2) < wnt4_0_2))
		next(wnt4_0_2) := wnt4_0_2 - 1;
	else next(wnt4_0_2) := wnt4_0_2;
	if (((wnt4_3_3 + 0 + wnt3_4_3 + wnt4_4_2) > (3 + (4 * wntext4_4_3))))
		next(wntext4_4_3) := wntext4_4_3 + 1;
	else if (((wnt4_3_3 + 0 + wnt3_4_3 + wnt4_4_2) < (4 * wntext4_4_3)))
		next(wntext4_4_3) := wntext4_4_3 - 1;
	else next(wntext4_4_3) := wntext4_4_3;
	if (((3 - p21_4_0_1) > wnt4_0_1))
		next(wnt4_0_1) := wnt4_0_1 + 1;
	else if (((3 - p21_4_0_1) < wnt4_0_1))
		next(wnt4_0_1) := wnt4_0_1 - 1;
	else next(wnt4_0_1) := wnt4_0_1;
	if ((frizzled3_1_3 > dsh3_1_3))
		next(dsh3_1_3) := dsh3_1_3 + 1;
	else if ((frizzled3_1_3 < dsh3_1_3))
		next(dsh3_1_3) := dsh3_1_3 - 1;
	else next(dsh3_1_3) := dsh3_1_3;
	if (((3 - p21_4_0_0) > wnt4_0_0))
		next(wnt4_0_0) := wnt4_0_0 + 1;
	else if (((3 - p21_4_0_0) < wnt4_0_0))
		next(wnt4_0_0) := wnt4_0_0 - 1;
	else next(wnt4_0_0) := wnt4_0_0;
	if ((notchic0_3_3 > p21_0_3_3))
		next(p21_0_3_3) := p21_0_3_3 + 1;
	else if ((notchic0_3_3 < p21_0_3_3))
		next(p21_0_3_3) := p21_0_3_3 - 1;
	else next(p21_0_3_3) := p21_0_3_3;
	if (((3 - p21_4_0_3) > wnt4_0_3))
		next(wnt4_0_3) := wnt4_0_3 + 1;
	else if (((3 - p21_4_0_3) < wnt4_0_3))
		next(wnt4_0_3) := wnt4_0_3 - 1;
	else next(wnt4_0_3) := wnt4_0_3;
	if ((frizzled1_0_3 > dsh1_0_3))
		next(dsh1_0_3) := dsh1_0_3 + 1;
	else if ((frizzled1_0_3 < dsh1_0_3))
		next(dsh1_0_3) := dsh1_0_3 - 1;
	else next(dsh1_0_3) := dsh1_0_3;
	if ((notchic0_3_1 > p21_0_3_1))
		next(p21_0_3_1) := p21_0_3_1 + 1;
	else if ((notchic0_3_1 < p21_0_3_1))
		next(p21_0_3_1) := p21_0_3_1 - 1;
	else next(p21_0_3_1) := p21_0_3_1;
	if ((notchic0_3_2 > p21_0_3_2))
		next(p21_0_3_2) := p21_0_3_2 + 1;
	else if ((notchic0_3_2 < p21_0_3_2))
		next(p21_0_3_2) := p21_0_3_2 - 1;
	else next(p21_0_3_2) := p21_0_3_2;
	if ((frizzled1_0_2 > dsh1_0_2))
		next(dsh1_0_2) := dsh1_0_2 + 1;
	else if ((frizzled1_0_2 < dsh1_0_2))
		next(dsh1_0_2) := dsh1_0_2 - 1;
	else next(dsh1_0_2) := dsh1_0_2;
	if ((notchic0_3_0 > p21_0_3_0))
		next(p21_0_3_0) := p21_0_3_0 + 1;
	else if ((notchic0_3_0 < p21_0_3_0))
		next(p21_0_3_0) := p21_0_3_0 - 1;
	else next(p21_0_3_0) := p21_0_3_0;
	if ((frizzled4_2_2 > dsh4_2_2))
		next(dsh4_2_2) := dsh4_2_2 + 1;
	else if ((frizzled4_2_2 < dsh4_2_2))
		next(dsh4_2_2) := dsh4_2_2 - 1;
	else next(dsh4_2_2) := dsh4_2_2;
	if ((frizzled0_3_0 > dsh0_3_0))
		next(dsh0_3_0) := dsh0_3_0 + 1;
	else if ((frizzled0_3_0 < dsh0_3_0))
		next(dsh0_3_0) := dsh0_3_0 - 1;
	else next(dsh0_3_0) := dsh0_3_0;
	if ((frizzled4_2_1 > dsh4_2_1))
		next(dsh4_2_1) := dsh4_2_1 + 1;
	else if ((frizzled4_2_1 < dsh4_2_1))
		next(dsh4_2_1) := dsh4_2_1 - 1;
	else next(dsh4_2_1) := dsh4_2_1;
	if ((frizzled0_3_1 > dsh0_3_1))
		next(dsh0_3_1) := dsh0_3_1 + 1;
	else if ((frizzled0_3_1 < dsh0_3_1))
		next(dsh0_3_1) := dsh0_3_1 - 1;
	else next(dsh0_3_1) := dsh0_3_1;
	if ((frizzled0_3_2 > dsh0_3_2))
		next(dsh0_3_2) := dsh0_3_2 + 1;
	else if ((frizzled0_3_2 < dsh0_3_2))
		next(dsh0_3_2) := dsh0_3_2 - 1;
	else next(dsh0_3_2) := dsh0_3_2;
	if ((frizzled1_0_1 > dsh1_0_1))
		next(dsh1_0_1) := dsh1_0_1 + 1;
	else if ((frizzled1_0_1 < dsh1_0_1))
		next(dsh1_0_1) := dsh1_0_1 - 1;
	else next(dsh1_0_1) := dsh1_0_1;
	if (((wnt4_3_0 + 0 + wnt3_4_0 + wnt4_4_1) > (3 + (4 * wntext4_4_0))))
		next(wntext4_4_0) := wntext4_4_0 + 1;
	else if (((wnt4_3_0 + 0 + wnt3_4_0 + wnt4_4_1) < (4 * wntext4_4_0)))
		next(wntext4_4_0) := wntext4_4_0 - 1;
	else next(wntext4_4_0) := wntext4_4_0;
	if ((frizzled0_3_3 > dsh0_3_3))
		next(dsh0_3_3) := dsh0_3_3 + 1;
	else if ((frizzled0_3_3 < dsh0_3_3))
		next(dsh0_3_3) := dsh0_3_3 - 1;
	else next(dsh0_3_3) := dsh0_3_3;
	if ((frizzled4_2_3 > dsh4_2_3))
		next(dsh4_2_3) := dsh4_2_3 + 1;
	else if ((frizzled4_2_3 < dsh4_2_3))
		next(dsh4_2_3) := dsh4_2_3 - 1;
	else next(dsh4_2_3) := dsh4_2_3;
	if ((frizzled1_0_0 > dsh1_0_0))
		next(dsh1_0_0) := dsh1_0_0 + 1;
	else if ((frizzled1_0_0 < dsh1_0_0))
		next(dsh1_0_0) := dsh1_0_0 - 1;
	else next(dsh1_0_0) := dsh1_0_0;
	if (((wnt4_3_1 + 0 + wnt3_4_1 + wnt4_4_0 + wnt4_4_2) > (4 + (5 * wntext4_4_1))))
		next(wntext4_4_1) := wntext4_4_1 + 1;
	else if (((wnt4_3_1 + 0 + wnt3_4_1 + wnt4_4_0 + wnt4_4_2) < (5 * wntext4_4_1)))
		next(wntext4_4_1) := wntext4_4_1 - 1;
	else next(wntext4_4_1) := wntext4_4_1;
	if ((frizzled4_4_3 > dsh4_4_3))
		next(dsh4_4_3) := dsh4_4_3 + 1;
	else if ((frizzled4_4_3 < dsh4_4_3))
		next(dsh4_4_3) := dsh4_4_3 - 1;
	else next(dsh4_4_3) := dsh4_4_3;
	if ((frizzled1_2_0 > dsh1_2_0))
		next(dsh1_2_0) := dsh1_2_0 + 1;
	else if ((frizzled1_2_0 < dsh1_2_0))
		next(dsh1_2_0) := dsh1_2_0 - 1;
	else next(dsh1_2_0) := dsh1_2_0;
	if ((frizzled1_2_1 > dsh1_2_1))
		next(dsh1_2_1) := dsh1_2_1 + 1;
	else if ((frizzled1_2_1 < dsh1_2_1))
		next(dsh1_2_1) := dsh1_2_1 - 1;
	else next(dsh1_2_1) := dsh1_2_1;
	if ((frizzled0_1_1 > dsh0_1_1))
		next(dsh0_1_1) := dsh0_1_1 + 1;
	else if ((frizzled0_1_1 < dsh0_1_1))
		next(dsh0_1_1) := dsh0_1_1 - 1;
	else next(dsh0_1_1) := dsh0_1_1;
	if ((frizzled1_2_2 > dsh1_2_2))
		next(dsh1_2_2) := dsh1_2_2 + 1;
	else if ((frizzled1_2_2 < dsh1_2_2))
		next(dsh1_2_2) := dsh1_2_2 - 1;
	else next(dsh1_2_2) := dsh1_2_2;
	if ((frizzled1_2_3 > dsh1_2_3))
		next(dsh1_2_3) := dsh1_2_3 + 1;
	else if ((frizzled1_2_3 < dsh1_2_3))
		next(dsh1_2_3) := dsh1_2_3 - 1;
	else next(dsh1_2_3) := dsh1_2_3;
	if ((frizzled0_1_0 > dsh0_1_0))
		next(dsh0_1_0) := dsh0_1_0 + 1;
	else if ((frizzled0_1_0 < dsh0_1_0))
		next(dsh0_1_0) := dsh0_1_0 - 1;
	else next(dsh0_1_0) := dsh0_1_0;
	if ((frizzled0_1_3 > dsh0_1_3))
		next(dsh0_1_3) := dsh0_1_3 + 1;
	else if ((frizzled0_1_3 < dsh0_1_3))
		next(dsh0_1_3) := dsh0_1_3 - 1;
	else next(dsh0_1_3) := dsh0_1_3;
	if ((frizzled4_4_0 > dsh4_4_0))
		next(dsh4_4_0) := dsh4_4_0 + 1;
	else if ((frizzled4_4_0 < dsh4_4_0))
		next(dsh4_4_0) := dsh4_4_0 - 1;
	else next(dsh4_4_0) := dsh4_4_0;
	if ((frizzled0_1_2 > dsh0_1_2))
		next(dsh0_1_2) := dsh0_1_2 + 1;
	else if ((frizzled0_1_2 < dsh0_1_2))
		next(dsh0_1_2) := dsh0_1_2 - 1;
	else next(dsh0_1_2) := dsh0_1_2;
	if ((frizzled4_4_1 > dsh4_4_1))
		next(dsh4_4_1) := dsh4_4_1 + 1;
	else if ((frizzled4_4_1 < dsh4_4_1))
		next(dsh4_4_1) := dsh4_4_1 - 1;
	else next(dsh4_4_1) := dsh4_4_1;
	if ((frizzled4_4_2 > dsh4_4_2))
		next(dsh4_4_2) := dsh4_4_2 + 1;
	else if ((frizzled4_4_2 < dsh4_4_2))
		next(dsh4_4_2) := dsh4_4_2 - 1;
	else next(dsh4_4_2) := dsh4_4_2;
	if ((frizzled3_3_3 > dsh3_3_3))
		next(dsh3_3_3) := dsh3_3_3 + 1;
	else if ((frizzled3_3_3 < dsh3_3_3))
		next(dsh3_3_3) := dsh3_3_3 - 1;
	else next(dsh3_3_3) := dsh3_3_3;
	if ((frizzled3_3_2 > dsh3_3_2))
		next(dsh3_3_2) := dsh3_3_2 + 1;
	else if ((frizzled3_3_2 < dsh3_3_2))
		next(dsh3_3_2) := dsh3_3_2 - 1;
	else next(dsh3_3_2) := dsh3_3_2;
	if ((frizzled3_3_1 > dsh3_3_1))
		next(dsh3_3_1) := dsh3_3_1 + 1;
	else if ((frizzled3_3_1 < dsh3_3_1))
		next(dsh3_3_1) := dsh3_3_1 - 1;
	else next(dsh3_3_1) := dsh3_3_1;
	if (((3 - axin3_3_2) > bcat3_3_2))
		next(bcat3_3_2) := bcat3_3_2 + 1;
	else if ((((3 - axin3_3_2) < bcat3_3_2) & (bcat3_3_2 > 0)))
		next(bcat3_3_2) := bcat3_3_2 - 1;
	else next(bcat3_3_2) := bcat3_3_2;
	if (((3 - axin3_3_3) > bcat3_3_3))
		next(bcat3_3_3) := bcat3_3_3 + 1;
	else if ((((3 - axin3_3_3) < bcat3_3_3) & (bcat3_3_3 > 0)))
		next(bcat3_3_3) := bcat3_3_3 - 1;
	else next(bcat3_3_3) := bcat3_3_3;
	if (((3 - axin3_3_0) > bcat3_3_0))
		next(bcat3_3_0) := bcat3_3_0 + 1;
	else if ((((3 - axin3_3_0) < bcat3_3_0) & (bcat3_3_0 > 0)))
		next(bcat3_3_0) := bcat3_3_0 - 1;
	else next(bcat3_3_0) := bcat3_3_0;
	if (((3 - axin3_3_1) > bcat3_3_1))
		next(bcat3_3_1) := bcat3_3_1 + 1;
	else if ((((3 - axin3_3_1) < bcat3_3_1) & (bcat3_3_1 > 0)))
		next(bcat3_3_1) := bcat3_3_1 - 1;
	else next(bcat3_3_1) := bcat3_3_1;
	if (((3 - axin3_1_3) > bcat3_1_3))
		next(bcat3_1_3) := bcat3_1_3 + 1;
	else if ((((3 - axin3_1_3) < bcat3_1_3) & (bcat3_1_3 > 0)))
		next(bcat3_1_3) := bcat3_1_3 - 1;
	else next(bcat3_1_3) := bcat3_1_3;
	if (((3 - axin3_1_2) > bcat3_1_2))
		next(bcat3_1_2) := bcat3_1_2 + 1;
	else if ((((3 - axin3_1_2) < bcat3_1_2) & (bcat3_1_2 > 0)))
		next(bcat3_1_2) := bcat3_1_2 - 1;
	else next(bcat3_1_2) := bcat3_1_2;
	if (((3 - axin3_1_1) > bcat3_1_1))
		next(bcat3_1_1) := bcat3_1_1 + 1;
	else if ((((3 - axin3_1_1) < bcat3_1_1) & (bcat3_1_1 > 0)))
		next(bcat3_1_1) := bcat3_1_1 - 1;
	else next(bcat3_1_1) := bcat3_1_1;
	if (((3 - axin3_1_0) > bcat3_1_0))
		next(bcat3_1_0) := bcat3_1_0 + 1;
	else if ((((3 - axin3_1_0) < bcat3_1_0) & (bcat3_1_0 > 0)))
		next(bcat3_1_0) := bcat3_1_0 - 1;
	else next(bcat3_1_0) := bcat3_1_0;
	if ((frizzled4_2_0 > dsh4_2_0))
		next(dsh4_2_0) := dsh4_2_0 + 1;
	else if ((frizzled4_2_0 < dsh4_2_0))
		next(dsh4_2_0) := dsh4_2_0 - 1;
	else next(dsh4_2_0) := dsh4_2_0;
	if (((delta3_2_0 + delta4_3_0 + delta3_4_0 + delta2_3_0 + delta3_3_1) > (5 * deltaext3_3_0)))
		next(deltaext3_3_0) := deltaext3_3_0 + 1;
	else if (((delta3_2_0 + delta4_3_0 + delta3_4_0 + delta2_3_0 + delta3_3_1) < ((5 * deltaext3_3_0) - 4)))
		next(deltaext3_3_0) := deltaext3_3_0 - 1;
	else next(deltaext3_3_0) := deltaext3_3_0;
	if ((notchic2_4_2 > gt2_2_4_2))
		next(gt2_2_4_2) := gt2_2_4_2 + 1;
	else if ((notchic2_4_2 < gt2_2_4_2))
		next(gt2_2_4_2) := gt2_2_4_2 - 1;
	else next(gt2_2_4_2) := gt2_2_4_2;
	if ((notchic2_4_3 > gt2_2_4_3))
		next(gt2_2_4_3) := gt2_2_4_3 + 1;
	else if ((notchic2_4_3 < gt2_2_4_3))
		next(gt2_2_4_3) := gt2_2_4_3 - 1;
	else next(gt2_2_4_3) := gt2_2_4_3;
	if (((delta3_0_3 + delta4_1_3 + delta3_2_3 + delta2_1_3 + delta3_1_2) > (5 * deltaext3_1_3)))
		next(deltaext3_1_3) := deltaext3_1_3 + 1;
	else if (((delta3_0_3 + delta4_1_3 + delta3_2_3 + delta2_1_3 + delta3_1_2) < ((5 * deltaext3_1_3) - 4)))
		next(deltaext3_1_3) := deltaext3_1_3 - 1;
	else next(deltaext3_1_3) := deltaext3_1_3;
	if (((delta3_0_2 + delta4_1_2 + delta3_2_2 + delta2_1_2 + delta3_1_1 + delta3_1_3) > (6 * deltaext3_1_2)))
		next(deltaext3_1_2) := deltaext3_1_2 + 1;
	else if (((delta3_0_2 + delta4_1_2 + delta3_2_2 + delta2_1_2 + delta3_1_1 + delta3_1_3) < ((6 * deltaext3_1_2) - 5)))
		next(deltaext3_1_2) := deltaext3_1_2 - 1;
	else next(deltaext3_1_2) := deltaext3_1_2;
	if (((delta3_0_1 + delta4_1_1 + delta3_2_1 + delta2_1_1 + delta3_1_0 + delta3_1_2) > (6 * deltaext3_1_1)))
		next(deltaext3_1_1) := deltaext3_1_1 + 1;
	else if (((delta3_0_1 + delta4_1_1 + delta3_2_1 + delta2_1_1 + delta3_1_0 + delta3_1_2) < ((6 * deltaext3_1_1) - 5)))
		next(deltaext3_1_1) := deltaext3_1_1 - 1;
	else next(deltaext3_1_1) := deltaext3_1_1;
	if (((delta3_0_0 + delta4_1_0 + delta3_2_0 + delta2_1_0 + delta3_1_1) > (5 * deltaext3_1_0)))
		next(deltaext3_1_0) := deltaext3_1_0 + 1;
	else if (((delta3_0_0 + delta4_1_0 + delta3_2_0 + delta2_1_0 + delta3_1_1) < ((5 * deltaext3_1_0) - 4)))
		next(deltaext3_1_0) := deltaext3_1_0 - 1;
	else next(deltaext3_1_0) := deltaext3_1_0;
	if (((delta3_2_3 + delta4_3_3 + delta3_4_3 + delta2_3_3 + delta3_3_2) > (5 * deltaext3_3_3)))
		next(deltaext3_3_3) := deltaext3_3_3 + 1;
	else if (((delta3_2_3 + delta4_3_3 + delta3_4_3 + delta2_3_3 + delta3_3_2) < ((5 * deltaext3_3_3) - 4)))
		next(deltaext3_3_3) := deltaext3_3_3 - 1;
	else next(deltaext3_3_3) := deltaext3_3_3;
	if (((delta3_2_2 + delta4_3_2 + delta3_4_2 + delta2_3_2 + delta3_3_1 + delta3_3_3) > (6 * deltaext3_3_2)))
		next(deltaext3_3_2) := deltaext3_3_2 + 1;
	else if (((delta3_2_2 + delta4_3_2 + delta3_4_2 + delta2_3_2 + delta3_3_1 + delta3_3_3) < ((6 * deltaext3_3_2) - 5)))
		next(deltaext3_3_2) := deltaext3_3_2 - 1;
	else next(deltaext3_3_2) := deltaext3_3_2;
	if (((delta3_2_1 + delta4_3_1 + delta3_4_1 + delta2_3_1 + delta3_3_0 + delta3_3_2) > (6 * deltaext3_3_1)))
		next(deltaext3_3_1) := deltaext3_3_1 + 1;
	else if (((delta3_2_1 + delta4_3_1 + delta3_4_1 + delta2_3_1 + delta3_3_0 + delta3_3_2) < ((6 * deltaext3_3_1) - 5)))
		next(deltaext3_3_1) := deltaext3_3_1 - 1;
	else next(deltaext3_3_1) := deltaext3_3_1;
	if (((delta2_2_1 + delta3_3_1 + delta2_4_1 + delta1_3_1 + delta2_3_0 + delta2_3_2) > (6 * deltaext2_3_1)))
		next(deltaext2_3_1) := deltaext2_3_1 + 1;
	else if (((delta2_2_1 + delta3_3_1 + delta2_4_1 + delta1_3_1 + delta2_3_0 + delta2_3_2) < ((6 * deltaext2_3_1) - 5)))
		next(deltaext2_3_1) := deltaext2_3_1 - 1;
	else next(deltaext2_3_1) := deltaext2_3_1;
	if (((delta2_2_0 + delta3_3_0 + delta2_4_0 + delta1_3_0 + delta2_3_1) > (5 * deltaext2_3_0)))
		next(deltaext2_3_0) := deltaext2_3_0 + 1;
	else if (((delta2_2_0 + delta3_3_0 + delta2_4_0 + delta1_3_0 + delta2_3_1) < ((5 * deltaext2_3_0) - 4)))
		next(deltaext2_3_0) := deltaext2_3_0 - 1;
	else next(deltaext2_3_0) := deltaext2_3_0;
	if ((notchic2_2_3 > gt2_2_2_3))
		next(gt2_2_2_3) := gt2_2_2_3 + 1;
	else if ((notchic2_2_3 < gt2_2_2_3))
		next(gt2_2_2_3) := gt2_2_2_3 - 1;
	else next(gt2_2_2_3) := gt2_2_2_3;
	if ((notchic2_2_2 > gt2_2_2_2))
		next(gt2_2_2_2) := gt2_2_2_2 + 1;
	else if ((notchic2_2_2 < gt2_2_2_2))
		next(gt2_2_2_2) := gt2_2_2_2 - 1;
	else next(gt2_2_2_2) := gt2_2_2_2;
	if ((notchic2_2_1 > gt2_2_2_1))
		next(gt2_2_2_1) := gt2_2_2_1 + 1;
	else if ((notchic2_2_1 < gt2_2_2_1))
		next(gt2_2_2_1) := gt2_2_2_1 - 1;
	else next(gt2_2_2_1) := gt2_2_2_1;
	if ((notchic2_2_0 > gt2_2_2_0))
		next(gt2_2_2_0) := gt2_2_2_0 + 1;
	else if ((notchic2_2_0 < gt2_2_2_0))
		next(gt2_2_2_0) := gt2_2_2_0 - 1;
	else next(gt2_2_2_0) := gt2_2_2_0;
	if (((gt1_4_0_1 + gt2_4_0_1) > (2 * delta4_0_1)))
		next(delta4_0_1) := delta4_0_1 + 1;
	else if (((gt1_4_0_1 + gt2_4_0_1) < ((2 * delta4_0_1) - 1)))
		next(delta4_0_1) := delta4_0_1 - 1;
	else next(delta4_0_1) := delta4_0_1;
	if (((gt1_4_0_0 + gt2_4_0_0) > (2 * delta4_0_0)))
		next(delta4_0_0) := delta4_0_0 + 1;
	else if (((gt1_4_0_0 + gt2_4_0_0) < ((2 * delta4_0_0) - 1)))
		next(delta4_0_0) := delta4_0_0 - 1;
	else next(delta4_0_0) := delta4_0_0;
	if (((gt1_0_1_0 + gt2_0_1_0) > (2 * delta0_1_0)))
		next(delta0_1_0) := delta0_1_0 + 1;
	else if (((gt1_0_1_0 + gt2_0_1_0) < ((2 * delta0_1_0) - 1)))
		next(delta0_1_0) := delta0_1_0 - 1;
	else next(delta0_1_0) := delta0_1_0;
	if (((gt1_0_1_1 + gt2_0_1_1) > (2 * delta0_1_1)))
		next(delta0_1_1) := delta0_1_1 + 1;
	else if (((gt1_0_1_1 + gt2_0_1_1) < ((2 * delta0_1_1) - 1)))
		next(delta0_1_1) := delta0_1_1 - 1;
	else next(delta0_1_1) := delta0_1_1;
	if (((gt1_0_1_2 + gt2_0_1_2) > (2 * delta0_1_2)))
		next(delta0_1_2) := delta0_1_2 + 1;
	else if (((gt1_0_1_2 + gt2_0_1_2) < ((2 * delta0_1_2) - 1)))
		next(delta0_1_2) := delta0_1_2 - 1;
	else next(delta0_1_2) := delta0_1_2;
	if (((gt1_0_1_3 + gt2_0_1_3) > (2 * delta0_1_3)))
		next(delta0_1_3) := delta0_1_3 + 1;
	else if (((gt1_0_1_3 + gt2_0_1_3) < ((2 * delta0_1_3) - 1)))
		next(delta0_1_3) := delta0_1_3 - 1;
	else next(delta0_1_3) := delta0_1_3;
	if ((notchic2_4_0 > gt2_2_4_0))
		next(gt2_2_4_0) := gt2_2_4_0 + 1;
	else if ((notchic2_4_0 < gt2_2_4_0))
		next(gt2_2_4_0) := gt2_2_4_0 - 1;
	else next(gt2_2_4_0) := gt2_2_4_0;
	if ((notchic1_4_3 > gt2_1_4_3))
		next(gt2_1_4_3) := gt2_1_4_3 + 1;
	else if ((notchic1_4_3 < gt2_1_4_3))
		next(gt2_1_4_3) := gt2_1_4_3 - 1;
	else next(gt2_1_4_3) := gt2_1_4_3;
	if ((notchic2_4_1 > gt2_2_4_1))
		next(gt2_2_4_1) := gt2_2_4_1 + 1;
	else if ((notchic2_4_1 < gt2_2_4_1))
		next(gt2_2_4_1) := gt2_2_4_1 - 1;
	else next(gt2_2_4_1) := gt2_2_4_1;
	if (((delta2_2_2 + delta3_3_2 + delta2_4_2 + delta1_3_2 + delta2_3_1 + delta2_3_3) > (6 * deltaext2_3_2)))
		next(deltaext2_3_2) := deltaext2_3_2 + 1;
	else if (((delta2_2_2 + delta3_3_2 + delta2_4_2 + delta1_3_2 + delta2_3_1 + delta2_3_3) < ((6 * deltaext2_3_2) - 5)))
		next(deltaext2_3_2) := deltaext2_3_2 - 1;
	else next(deltaext2_3_2) := deltaext2_3_2;
	if (((delta2_2_3 + delta3_3_3 + delta2_4_3 + delta1_3_3 + delta2_3_2) > (5 * deltaext2_3_3)))
		next(deltaext2_3_3) := deltaext2_3_3 + 1;
	else if (((delta2_2_3 + delta3_3_3 + delta2_4_3 + delta1_3_3 + delta2_3_2) < ((5 * deltaext2_3_3) - 4)))
		next(deltaext2_3_3) := deltaext2_3_3 - 1;
	else next(deltaext2_3_3) := deltaext2_3_3;
	if (((2 + delta4_1_3 + delta3_0_3 + delta4_0_2) > (4 * deltaext4_0_3)))
		next(deltaext4_0_3) := deltaext4_0_3 + 1;
	else if (((2 + delta4_1_3 + delta3_0_3 + delta4_0_2) < ((4 * deltaext4_0_3) - 3)))
		next(deltaext4_0_3) := deltaext4_0_3 - 1;
	else next(deltaext4_0_3) := deltaext4_0_3;
	if (((gt1_4_0_2 + gt2_4_0_2) > (2 * delta4_0_2)))
		next(delta4_0_2) := delta4_0_2 + 1;
	else if (((gt1_4_0_2 + gt2_4_0_2) < ((2 * delta4_0_2) - 1)))
		next(delta4_0_2) := delta4_0_2 - 1;
	else next(delta4_0_2) := delta4_0_2;
	if (((gt1_4_0_3 + gt2_4_0_3) > (2 * delta4_0_3)))
		next(delta4_0_3) := delta4_0_3 + 1;
	else if (((gt1_4_0_3 + gt2_4_0_3) < ((2 * delta4_0_3) - 1)))
		next(delta4_0_3) := delta4_0_3 - 1;
	else next(delta4_0_3) := delta4_0_3;
	if (((2 > notchic1_0_3) & (deltaext1_0_3 > notchic1_0_3)))
		next(notchic1_0_3) := notchic1_0_3 + 1;
	else if (((2 < notchic1_0_3) | (deltaext1_0_3 < notchic1_0_3)))
		next(notchic1_0_3) := notchic1_0_3 - 1;
	else next(notchic1_0_3) := notchic1_0_3;
	if (((2 + delta4_1_2 + delta3_0_2 + delta4_0_1 + delta4_0_3) > (5 * deltaext4_0_2)))
		next(deltaext4_0_2) := deltaext4_0_2 + 1;
	else if (((2 + delta4_1_2 + delta3_0_2 + delta4_0_1 + delta4_0_3) < ((5 * deltaext4_0_2) - 4)))
		next(deltaext4_0_2) := deltaext4_0_2 - 1;
	else next(deltaext4_0_2) := deltaext4_0_2;
	if (((2 + delta4_1_1 + delta3_0_1 + delta4_0_0 + delta4_0_2) > (5 * deltaext4_0_1)))
		next(deltaext4_0_1) := deltaext4_0_1 + 1;
	else if (((2 + delta4_1_1 + delta3_0_1 + delta4_0_0 + delta4_0_2) < ((5 * deltaext4_0_1) - 4)))
		next(deltaext4_0_1) := deltaext4_0_1 - 1;
	else next(deltaext4_0_1) := deltaext4_0_1;
	if (((3 - p21_1_4_0) > wnt1_4_0))
		next(wnt1_4_0) := wnt1_4_0 + 1;
	else if (((3 - p21_1_4_0) < wnt1_4_0))
		next(wnt1_4_0) := wnt1_4_0 - 1;
	else next(wnt1_4_0) := wnt1_4_0;
	if (((2 + delta4_1_0 + delta3_0_0 + delta4_0_1) > (4 * deltaext4_0_0)))
		next(deltaext4_0_0) := deltaext4_0_0 + 1;
	else if (((2 + delta4_1_0 + delta3_0_0 + delta4_0_1) < ((4 * deltaext4_0_0) - 3)))
		next(deltaext4_0_0) := deltaext4_0_0 - 1;
	else next(deltaext4_0_0) := deltaext4_0_0;
	if (((3 - p21_1_4_1) > wnt1_4_1))
		next(wnt1_4_1) := wnt1_4_1 + 1;
	else if (((3 - p21_1_4_1) < wnt1_4_1))
		next(wnt1_4_1) := wnt1_4_1 - 1;
	else next(wnt1_4_1) := wnt1_4_1;
	if (((3 - p21_1_4_2) > wnt1_4_2))
		next(wnt1_4_2) := wnt1_4_2 + 1;
	else if (((3 - p21_1_4_2) < wnt1_4_2))
		next(wnt1_4_2) := wnt1_4_2 - 1;
	else next(wnt1_4_2) := wnt1_4_2;
	if (((3 - p21_1_4_3) > wnt1_4_3))
		next(wnt1_4_3) := wnt1_4_3 + 1;
	else if (((3 - p21_1_4_3) < wnt1_4_3))
		next(wnt1_4_3) := wnt1_4_3 - 1;
	else next(wnt1_4_3) := wnt1_4_3;
	if (((2 > notchic1_0_0) & (deltaext1_0_0 > notchic1_0_0)))
		next(notchic1_0_0) := notchic1_0_0 + 1;
	else if (((2 < notchic1_0_0) | (deltaext1_0_0 < notchic1_0_0)))
		next(notchic1_0_0) := notchic1_0_0 - 1;
	else next(notchic1_0_0) := notchic1_0_0;
	if (((2 > notchic1_0_1) & (deltaext1_0_1 > notchic1_0_1)))
		next(notchic1_0_1) := notchic1_0_1 + 1;
	else if (((2 < notchic1_0_1) | (deltaext1_0_1 < notchic1_0_1)))
		next(notchic1_0_1) := notchic1_0_1 - 1;
	else next(notchic1_0_1) := notchic1_0_1;
	if (((2 > notchic1_0_2) & (deltaext1_0_2 > notchic1_0_2)))
		next(notchic1_0_2) := notchic1_0_2 + 1;
	else if (((2 < notchic1_0_2) | (deltaext1_0_2 < notchic1_0_2)))
		next(notchic1_0_2) := notchic1_0_2 - 1;
	else next(notchic1_0_2) := notchic1_0_2;
	if ((frizzled2_0_0 > dsh2_0_0))
		next(dsh2_0_0) := dsh2_0_0 + 1;
	else if ((frizzled2_0_0 < dsh2_0_0))
		next(dsh2_0_0) := dsh2_0_0 - 1;
	else next(dsh2_0_0) := dsh2_0_0;
	if (((3 - dsh1_3_1) > axin1_3_1))
		next(axin1_3_1) := axin1_3_1 + 1;
	else if ((((3 - dsh1_3_1) < axin1_3_1) & (axin1_3_1 > 0)))
		next(axin1_3_1) := axin1_3_1 - 1;
	else next(axin1_3_1) := axin1_3_1;
	if (((3 - dsh1_3_0) > axin1_3_0))
		next(axin1_3_0) := axin1_3_0 + 1;
	else if ((((3 - dsh1_3_0) < axin1_3_0) & (axin1_3_0 > 0)))
		next(axin1_3_0) := axin1_3_0 - 1;
	else next(axin1_3_0) := axin1_3_0;
	if (((3 - dsh0_1_0) > axin0_1_0))
		next(axin0_1_0) := axin0_1_0 + 1;
	else if ((((3 - dsh0_1_0) < axin0_1_0) & (axin0_1_0 > 0)))
		next(axin0_1_0) := axin0_1_0 - 1;
	else next(axin0_1_0) := axin0_1_0;
	if (((3 - dsh1_3_3) > axin1_3_3))
		next(axin1_3_3) := axin1_3_3 + 1;
	else if ((((3 - dsh1_3_3) < axin1_3_3) & (axin1_3_3 > 0)))
		next(axin1_3_3) := axin1_3_3 - 1;
	else next(axin1_3_3) := axin1_3_3;
	if ((frizzled2_0_2 > dsh2_0_2))
		next(dsh2_0_2) := dsh2_0_2 + 1;
	else if ((frizzled2_0_2 < dsh2_0_2))
		next(dsh2_0_2) := dsh2_0_2 - 1;
	else next(dsh2_0_2) := dsh2_0_2;
	if (((3 - dsh1_3_2) > axin1_3_2))
		next(axin1_3_2) := axin1_3_2 + 1;
	else if ((((3 - dsh1_3_2) < axin1_3_2) & (axin1_3_2 > 0)))
		next(axin1_3_2) := axin1_3_2 - 1;
	else next(axin1_3_2) := axin1_3_2;
	if ((frizzled2_0_1 > dsh2_0_1))
		next(dsh2_0_1) := dsh2_0_1 + 1;
	else if ((frizzled2_0_1 < dsh2_0_1))
		next(dsh2_0_1) := dsh2_0_1 - 1;
	else next(dsh2_0_1) := dsh2_0_1;
	if (((gt1_2_2_3 + gt2_2_2_3) > (2 * delta2_2_3)))
		next(delta2_2_3) := delta2_2_3 + 1;
	else if (((gt1_2_2_3 + gt2_2_2_3) < ((2 * delta2_2_3) - 1)))
		next(delta2_2_3) := delta2_2_3 - 1;
	else next(delta2_2_3) := delta2_2_3;
	if ((frizzled2_0_3 > dsh2_0_3))
		next(dsh2_0_3) := dsh2_0_3 + 1;
	else if ((frizzled2_0_3 < dsh2_0_3))
		next(dsh2_0_3) := dsh2_0_3 - 1;
	else next(dsh2_0_3) := dsh2_0_3;
	if (((gt1_2_2_2 + gt2_2_2_2) > (2 * delta2_2_2)))
		next(delta2_2_2) := delta2_2_2 + 1;
	else if (((gt1_2_2_2 + gt2_2_2_2) < ((2 * delta2_2_2) - 1)))
		next(delta2_2_2) := delta2_2_2 - 1;
	else next(delta2_2_2) := delta2_2_2;
	if (((3 - dsh0_1_1) > axin0_1_1))
		next(axin0_1_1) := axin0_1_1 + 1;
	else if ((((3 - dsh0_1_1) < axin0_1_1) & (axin0_1_1 > 0)))
		next(axin0_1_1) := axin0_1_1 - 1;
	else next(axin0_1_1) := axin0_1_1;
	if (((3 - dsh0_1_2) > axin0_1_2))
		next(axin0_1_2) := axin0_1_2 + 1;
	else if ((((3 - dsh0_1_2) < axin0_1_2) & (axin0_1_2 > 0)))
		next(axin0_1_2) := axin0_1_2 - 1;
	else next(axin0_1_2) := axin0_1_2;
	if (((3 - dsh0_1_3) > axin0_1_3))
		next(axin0_1_3) := axin0_1_3 + 1;
	else if ((((3 - dsh0_1_3) < axin0_1_3) & (axin0_1_3 > 0)))
		next(axin0_1_3) := axin0_1_3 - 1;
	else next(axin0_1_3) := axin0_1_3;
	if (((3 - dsh0_3_3) > axin0_3_3))
		next(axin0_3_3) := axin0_3_3 + 1;
	else if ((((3 - dsh0_3_3) < axin0_3_3) & (axin0_3_3 > 0)))
		next(axin0_3_3) := axin0_3_3 - 1;
	else next(axin0_3_3) := axin0_3_3;
	if (((delta1_0_3 + delta2_1_3 + delta1_2_3 + delta0_1_3 + delta1_1_2) > (5 * deltaext1_1_3)))
		next(deltaext1_1_3) := deltaext1_1_3 + 1;
	else if (((delta1_0_3 + delta2_1_3 + delta1_2_3 + delta0_1_3 + delta1_1_2) < ((5 * deltaext1_1_3) - 4)))
		next(deltaext1_1_3) := deltaext1_1_3 - 1;
	else next(deltaext1_1_3) := deltaext1_1_3;
	if ((frizzled3_1_0 > dsh3_1_0))
		next(dsh3_1_0) := dsh3_1_0 + 1;
	else if ((frizzled3_1_0 < dsh3_1_0))
		next(dsh3_1_0) := dsh3_1_0 - 1;
	else next(dsh3_1_0) := dsh3_1_0;
	if ((frizzled3_1_1 > dsh3_1_1))
		next(dsh3_1_1) := dsh3_1_1 + 1;
	else if ((frizzled3_1_1 < dsh3_1_1))
		next(dsh3_1_1) := dsh3_1_1 - 1;
	else next(dsh3_1_1) := dsh3_1_1;
	if (((delta1_0_2 + delta2_1_2 + delta1_2_2 + delta0_1_2 + delta1_1_1 + delta1_1_3) > (6 * deltaext1_1_2)))
		next(deltaext1_1_2) := deltaext1_1_2 + 1;
	else if (((delta1_0_2 + delta2_1_2 + delta1_2_2 + delta0_1_2 + delta1_1_1 + delta1_1_3) < ((6 * deltaext1_1_2) - 5)))
		next(deltaext1_1_2) := deltaext1_1_2 - 1;
	else next(deltaext1_1_2) := deltaext1_1_2;
	if (((delta1_0_1 + delta2_1_1 + delta1_2_1 + delta0_1_1 + delta1_1_0 + delta1_1_2) > (6 * deltaext1_1_1)))
		next(deltaext1_1_1) := deltaext1_1_1 + 1;
	else if (((delta1_0_1 + delta2_1_1 + delta1_2_1 + delta0_1_1 + delta1_1_0 + delta1_1_2) < ((6 * deltaext1_1_1) - 5)))
		next(deltaext1_1_1) := deltaext1_1_1 - 1;
	else next(deltaext1_1_1) := deltaext1_1_1;
	if ((frizzled3_1_2 > dsh3_1_2))
		next(dsh3_1_2) := dsh3_1_2 + 1;
	else if ((frizzled3_1_2 < dsh3_1_2))
		next(dsh3_1_2) := dsh3_1_2 - 1;
	else next(dsh3_1_2) := dsh3_1_2;
	if (((delta1_0_0 + delta2_1_0 + delta1_2_0 + delta0_1_0 + delta1_1_1) > (5 * deltaext1_1_0)))
		next(deltaext1_1_0) := deltaext1_1_0 + 1;
	else if (((delta1_0_0 + delta2_1_0 + delta1_2_0 + delta0_1_0 + delta1_1_1) < ((5 * deltaext1_1_0) - 4)))
		next(deltaext1_1_0) := deltaext1_1_0 - 1;
	else next(deltaext1_1_0) := deltaext1_1_0;
	if (((3 - dsh0_3_0) > axin0_3_0))
		next(axin0_3_0) := axin0_3_0 + 1;
	else if ((((3 - dsh0_3_0) < axin0_3_0) & (axin0_3_0 > 0)))
		next(axin0_3_0) := axin0_3_0 - 1;
	else next(axin0_3_0) := axin0_3_0;
	if (((3 - dsh0_3_2) > axin0_3_2))
		next(axin0_3_2) := axin0_3_2 + 1;
	else if ((((3 - dsh0_3_2) < axin0_3_2) & (axin0_3_2 > 0)))
		next(axin0_3_2) := axin0_3_2 - 1;
	else next(axin0_3_2) := axin0_3_2;
	if (((3 - dsh0_3_1) > axin0_3_1))
		next(axin0_3_1) := axin0_3_1 + 1;
	else if ((((3 - dsh0_3_1) < axin0_3_1) & (axin0_3_1 > 0)))
		next(axin0_3_1) := axin0_3_1 - 1;
	else next(axin0_3_1) := axin0_3_1;
	if (((3 - axin2_4_3) > bcat2_4_3))
		next(bcat2_4_3) := bcat2_4_3 + 1;
	else if ((((3 - axin2_4_3) < bcat2_4_3) & (bcat2_4_3 > 0)))
		next(bcat2_4_3) := bcat2_4_3 - 1;
	else next(bcat2_4_3) := bcat2_4_3;
	if (((3 - axin2_4_2) > bcat2_4_2))
		next(bcat2_4_2) := bcat2_4_2 + 1;
	else if ((((3 - axin2_4_2) < bcat2_4_2) & (bcat2_4_2 > 0)))
		next(bcat2_4_2) := bcat2_4_2 - 1;
	else next(bcat2_4_2) := bcat2_4_2;
	if (((3 - axin2_4_1) > bcat2_4_1))
		next(bcat2_4_1) := bcat2_4_1 + 1;
	else if ((((3 - axin2_4_1) < bcat2_4_1) & (bcat2_4_1 > 0)))
		next(bcat2_4_1) := bcat2_4_1 - 1;
	else next(bcat2_4_1) := bcat2_4_1;
	if (((3 - axin2_4_0) > bcat2_4_0))
		next(bcat2_4_0) := bcat2_4_0 + 1;
	else if ((((3 - axin2_4_0) < bcat2_4_0) & (bcat2_4_0 > 0)))
		next(bcat2_4_0) := bcat2_4_0 - 1;
	else next(bcat2_4_0) := bcat2_4_0;
	if (((1 > notchic0_1_3) & (deltaext0_1_3 > notchic0_1_3)))
		next(notchic0_1_3) := notchic0_1_3 + 1;
	else if (((1 < notchic0_1_3) | (deltaext0_1_3 < notchic0_1_3)))
		next(notchic0_1_3) := notchic0_1_3 - 1;
	else next(notchic0_1_3) := notchic0_1_3;
	if (((1 > notchic0_1_0) & (deltaext0_1_0 > notchic0_1_0)))
		next(notchic0_1_0) := notchic0_1_0 + 1;
	else if (((1 < notchic0_1_0) | (deltaext0_1_0 < notchic0_1_0)))
		next(notchic0_1_0) := notchic0_1_0 - 1;
	else next(notchic0_1_0) := notchic0_1_0;
	if (((1 > notchic0_1_1) & (deltaext0_1_1 > notchic0_1_1)))
		next(notchic0_1_1) := notchic0_1_1 + 1;
	else if (((1 < notchic0_1_1) | (deltaext0_1_1 < notchic0_1_1)))
		next(notchic0_1_1) := notchic0_1_1 - 1;
	else next(notchic0_1_1) := notchic0_1_1;
	if (((1 > notchic0_1_2) & (deltaext0_1_2 > notchic0_1_2)))
		next(notchic0_1_2) := notchic0_1_2 + 1;
	else if (((1 < notchic0_1_2) | (deltaext0_1_2 < notchic0_1_2)))
		next(notchic0_1_2) := notchic0_1_2 - 1;
	else next(notchic0_1_2) := notchic0_1_2;
	if ((notchic4_2_2 > gt2_4_2_2))
		next(gt2_4_2_2) := gt2_4_2_2 + 1;
	else if ((notchic4_2_2 < gt2_4_2_2))
		next(gt2_4_2_2) := gt2_4_2_2 - 1;
	else next(gt2_4_2_2) := gt2_4_2_2;
	if ((notchic4_2_3 > gt2_4_2_3))
		next(gt2_4_2_3) := gt2_4_2_3 + 1;
	else if ((notchic4_2_3 < gt2_4_2_3))
		next(gt2_4_2_3) := gt2_4_2_3 - 1;
	else next(gt2_4_2_3) := gt2_4_2_3;
	if (((gt1_2_2_0 + gt2_2_2_0) > (2 * delta2_2_0)))
		next(delta2_2_0) := delta2_2_0 + 1;
	else if (((gt1_2_2_0 + gt2_2_2_0) < ((2 * delta2_2_0) - 1)))
		next(delta2_2_0) := delta2_2_0 - 1;
	else next(delta2_2_0) := delta2_2_0;
	if (((gt1_2_2_1 + gt2_2_2_1) > (2 * delta2_2_1)))
		next(delta2_2_1) := delta2_2_1 + 1;
	else if (((gt1_2_2_1 + gt2_2_2_1) < ((2 * delta2_2_1) - 1)))
		next(delta2_2_1) := delta2_2_1 - 1;
	else next(delta2_2_1) := delta2_2_1;
	if (((3 - dsh4_0_2) > axin4_0_2))
		next(axin4_0_2) := axin4_0_2 + 1;
	else if ((((3 - dsh4_0_2) < axin4_0_2) & (axin4_0_2 > 0)))
		next(axin4_0_2) := axin4_0_2 - 1;
	else next(axin4_0_2) := axin4_0_2;
	if (((3 - dsh4_0_3) > axin4_0_3))
		next(axin4_0_3) := axin4_0_3 + 1;
	else if ((((3 - dsh4_0_3) < axin4_0_3) & (axin4_0_3 > 0)))
		next(axin4_0_3) := axin4_0_3 - 1;
	else next(axin4_0_3) := axin4_0_3;
	if (((3 > notchic4_1_3) & (deltaext4_1_3 > notchic4_1_3)))
		next(notchic4_1_3) := notchic4_1_3 + 1;
	else if (((3 < notchic4_1_3) | (deltaext4_1_3 < notchic4_1_3)))
		next(notchic4_1_3) := notchic4_1_3 - 1;
	else next(notchic4_1_3) := notchic4_1_3;
	if (((3 - dsh4_0_0) > axin4_0_0))
		next(axin4_0_0) := axin4_0_0 + 1;
	else if ((((3 - dsh4_0_0) < axin4_0_0) & (axin4_0_0 > 0)))
		next(axin4_0_0) := axin4_0_0 - 1;
	else next(axin4_0_0) := axin4_0_0;
	if (((3 - dsh4_0_1) > axin4_0_1))
		next(axin4_0_1) := axin4_0_1 + 1;
	else if ((((3 - dsh4_0_1) < axin4_0_1) & (axin4_0_1 > 0)))
		next(axin4_0_1) := axin4_0_1 - 1;
	else next(axin4_0_1) := axin4_0_1;
	if (((3 > notchic4_1_2) & (deltaext4_1_2 > notchic4_1_2)))
		next(notchic4_1_2) := notchic4_1_2 + 1;
	else if (((3 < notchic4_1_2) | (deltaext4_1_2 < notchic4_1_2)))
		next(notchic4_1_2) := notchic4_1_2 - 1;
	else next(notchic4_1_2) := notchic4_1_2;
	if (((3 > notchic4_1_1) & (deltaext4_1_1 > notchic4_1_1)))
		next(notchic4_1_1) := notchic4_1_1 + 1;
	else if (((3 < notchic4_1_1) | (deltaext4_1_1 < notchic4_1_1)))
		next(notchic4_1_1) := notchic4_1_1 - 1;
	else next(notchic4_1_1) := notchic4_1_1;
	if (((3 > notchic4_1_0) & (deltaext4_1_0 > notchic4_1_0)))
		next(notchic4_1_0) := notchic4_1_0 + 1;
	else if (((3 < notchic4_1_0) | (deltaext4_1_0 < notchic4_1_0)))
		next(notchic4_1_0) := notchic4_1_0 - 1;
	else next(notchic4_1_0) := notchic4_1_0;
	if (((3 - axin0_4_1) > bcat0_4_1))
		next(bcat0_4_1) := bcat0_4_1 + 1;
	else if ((((3 - axin0_4_1) < bcat0_4_1) & (bcat0_4_1 > 0)))
		next(bcat0_4_1) := bcat0_4_1 - 1;
	else next(bcat0_4_1) := bcat0_4_1;
	if (((3 - axin0_4_0) > bcat0_4_0))
		next(bcat0_4_0) := bcat0_4_0 + 1;
	else if ((((3 - axin0_4_0) < bcat0_4_0) & (bcat0_4_0 > 0)))
		next(bcat0_4_0) := bcat0_4_0 - 1;
	else next(bcat0_4_0) := bcat0_4_0;
	if (((3 - axin0_4_3) > bcat0_4_3))
		next(bcat0_4_3) := bcat0_4_3 + 1;
	else if ((((3 - axin0_4_3) < bcat0_4_3) & (bcat0_4_3 > 0)))
		next(bcat0_4_3) := bcat0_4_3 - 1;
	else next(bcat0_4_3) := bcat0_4_3;
	if (((3 - axin0_4_2) > bcat0_4_2))
		next(bcat0_4_2) := bcat0_4_2 + 1;
	else if ((((3 - axin0_4_2) < bcat0_4_2) & (bcat0_4_2 > 0)))
		next(bcat0_4_2) := bcat0_4_2 - 1;
	else next(bcat0_4_2) := bcat0_4_2;
	if (((3 > notchic4_3_0) & (deltaext4_3_0 > notchic4_3_0)))
		next(notchic4_3_0) := notchic4_3_0 + 1;
	else if (((3 < notchic4_3_0) | (deltaext4_3_0 < notchic4_3_0)))
		next(notchic4_3_0) := notchic4_3_0 - 1;
	else next(notchic4_3_0) := notchic4_3_0;
	if (((3 > notchic4_3_3) & (deltaext4_3_3 > notchic4_3_3)))
		next(notchic4_3_3) := notchic4_3_3 + 1;
	else if (((3 < notchic4_3_3) | (deltaext4_3_3 < notchic4_3_3)))
		next(notchic4_3_3) := notchic4_3_3 - 1;
	else next(notchic4_3_3) := notchic4_3_3;
	if (((3 > notchic4_3_1) & (deltaext4_3_1 > notchic4_3_1)))
		next(notchic4_3_1) := notchic4_3_1 + 1;
	else if (((3 < notchic4_3_1) | (deltaext4_3_1 < notchic4_3_1)))
		next(notchic4_3_1) := notchic4_3_1 - 1;
	else next(notchic4_3_1) := notchic4_3_1;
	if (((3 > notchic4_3_2) & (deltaext4_3_2 > notchic4_3_2)))
		next(notchic4_3_2) := notchic4_3_2 + 1;
	else if (((3 < notchic4_3_2) | (deltaext4_3_2 < notchic4_3_2)))
		next(notchic4_3_2) := notchic4_3_2 - 1;
	else next(notchic4_3_2) := notchic4_3_2;
	if (((3 - axin0_0_1) > bcat0_0_1))
		next(bcat0_0_1) := bcat0_0_1 + 1;
	else if ((((3 - axin0_0_1) < bcat0_0_1) & (bcat0_0_1 > 0)))
		next(bcat0_0_1) := bcat0_0_1 - 1;
	else next(bcat0_0_1) := bcat0_0_1;
	if (((3 - axin0_0_0) > bcat0_0_0))
		next(bcat0_0_0) := bcat0_0_0 + 1;
	else if ((((3 - axin0_0_0) < bcat0_0_0) & (bcat0_0_0 > 0)))
		next(bcat0_0_0) := bcat0_0_0 - 1;
	else next(bcat0_0_0) := bcat0_0_0;
	if (((3 - axin0_0_2) > bcat0_0_2))
		next(bcat0_0_2) := bcat0_0_2 + 1;
	else if ((((3 - axin0_0_2) < bcat0_0_2) & (bcat0_0_2 > 0)))
		next(bcat0_0_2) := bcat0_0_2 - 1;
	else next(bcat0_0_2) := bcat0_0_2;
	if (((3 - axin0_0_3) > bcat0_0_3))
		next(bcat0_0_3) := bcat0_0_3 + 1;
	else if ((((3 - axin0_0_3) < bcat0_0_3) & (bcat0_0_3 > 0)))
		next(bcat0_0_3) := bcat0_0_3 - 1;
	else next(bcat0_0_3) := bcat0_0_3;
	if (((3 - dsh4_2_2) > axin4_2_2))
		next(axin4_2_2) := axin4_2_2 + 1;
	else if ((((3 - dsh4_2_2) < axin4_2_2) & (axin4_2_2 > 0)))
		next(axin4_2_2) := axin4_2_2 - 1;
	else next(axin4_2_2) := axin4_2_2;
	if (((3 - dsh4_2_3) > axin4_2_3))
		next(axin4_2_3) := axin4_2_3 + 1;
	else if ((((3 - dsh4_2_3) < axin4_2_3) & (axin4_2_3 > 0)))
		next(axin4_2_3) := axin4_2_3 - 1;
	else next(axin4_2_3) := axin4_2_3;
	if (((wnt2_0_0 + wnt1_1_0 + wnt0_0_0 + wnt1_0_1) > (3 + (4 * wntext1_0_0))))
		next(wntext1_0_0) := wntext1_0_0 + 1;
	else if (((wnt2_0_0 + wnt1_1_0 + wnt0_0_0 + wnt1_0_1) < (4 * wntext1_0_0)))
		next(wntext1_0_0) := wntext1_0_0 - 1;
	else next(wntext1_0_0) := wntext1_0_0;
	if (((wnt1_1_3 + wnt2_2_3 + wnt1_3_3 + wnt0_2_3 + wnt1_2_2) > (4 + (5 * wntext1_2_3))))
		next(wntext1_2_3) := wntext1_2_3 + 1;
	else if (((wnt1_1_3 + wnt2_2_3 + wnt1_3_3 + wnt0_2_3 + wnt1_2_2) < (5 * wntext1_2_3)))
		next(wntext1_2_3) := wntext1_2_3 - 1;
	else next(wntext1_2_3) := wntext1_2_3;
	if (((3 - dsh4_2_0) > axin4_2_0))
		next(axin4_2_0) := axin4_2_0 + 1;
	else if ((((3 - dsh4_2_0) < axin4_2_0) & (axin4_2_0 > 0)))
		next(axin4_2_0) := axin4_2_0 - 1;
	else next(axin4_2_0) := axin4_2_0;
	if (((3 - dsh4_2_1) > axin4_2_1))
		next(axin4_2_1) := axin4_2_1 + 1;
	else if ((((3 - dsh4_2_1) < axin4_2_1) & (axin4_2_1 > 0)))
		next(axin4_2_1) := axin4_2_1 - 1;
	else next(axin4_2_1) := axin4_2_1;
	if (((wnt1_1_1 + wnt2_2_1 + wnt1_3_1 + wnt0_2_1 + wnt1_2_0 + wnt1_2_2) > (5 + (6 * wntext1_2_1))))
		next(wntext1_2_1) := wntext1_2_1 + 1;
	else if (((wnt1_1_1 + wnt2_2_1 + wnt1_3_1 + wnt0_2_1 + wnt1_2_0 + wnt1_2_2) < (6 * wntext1_2_1)))
		next(wntext1_2_1) := wntext1_2_1 - 1;
	else next(wntext1_2_1) := wntext1_2_1;
	if (((wnt1_1_2 + wnt2_2_2 + wnt1_3_2 + wnt0_2_2 + wnt1_2_1 + wnt1_2_3) > (5 + (6 * wntext1_2_2))))
		next(wntext1_2_2) := wntext1_2_2 + 1;
	else if (((wnt1_1_2 + wnt2_2_2 + wnt1_3_2 + wnt0_2_2 + wnt1_2_1 + wnt1_2_3) < (6 * wntext1_2_2)))
		next(wntext1_2_2) := wntext1_2_2 - 1;
	else next(wntext1_2_2) := wntext1_2_2;
	if (((wnt1_1_0 + wnt2_2_0 + wnt1_3_0 + wnt0_2_0 + wnt1_2_1) > (4 + (5 * wntext1_2_0))))
		next(wntext1_2_0) := wntext1_2_0 + 1;
	else if (((wnt1_1_0 + wnt2_2_0 + wnt1_3_0 + wnt0_2_0 + wnt1_2_1) < (5 * wntext1_2_0)))
		next(wntext1_2_0) := wntext1_2_0 - 1;
	else next(wntext1_2_0) := wntext1_2_0;
	if (((3 - axin2_0_1) > bcat2_0_1))
		next(bcat2_0_1) := bcat2_0_1 + 1;
	else if ((((3 - axin2_0_1) < bcat2_0_1) & (bcat2_0_1 > 0)))
		next(bcat2_0_1) := bcat2_0_1 - 1;
	else next(bcat2_0_1) := bcat2_0_1;
	if (((3 - dsh4_4_1) > axin4_4_1))
		next(axin4_4_1) := axin4_4_1 + 1;
	else if ((((3 - dsh4_4_1) < axin4_4_1) & (axin4_4_1 > 0)))
		next(axin4_4_1) := axin4_4_1 - 1;
	else next(axin4_4_1) := axin4_4_1;
	if (((3 - dsh4_4_0) > axin4_4_0))
		next(axin4_4_0) := axin4_4_0 + 1;
	else if ((((3 - dsh4_4_0) < axin4_4_0) & (axin4_4_0 > 0)))
		next(axin4_4_0) := axin4_4_0 - 1;
	else next(axin4_4_0) := axin4_4_0;
	if (((3 - axin2_0_0) > bcat2_0_0))
		next(bcat2_0_0) := bcat2_0_0 + 1;
	else if ((((3 - axin2_0_0) < bcat2_0_0) & (bcat2_0_0 > 0)))
		next(bcat2_0_0) := bcat2_0_0 - 1;
	else next(bcat2_0_0) := bcat2_0_0;
	if (((3 - axin2_0_3) > bcat2_0_3))
		next(bcat2_0_3) := bcat2_0_3 + 1;
	else if ((((3 - axin2_0_3) < bcat2_0_3) & (bcat2_0_3 > 0)))
		next(bcat2_0_3) := bcat2_0_3 - 1;
	else next(bcat2_0_3) := bcat2_0_3;
	if (((3 - axin2_0_2) > bcat2_0_2))
		next(bcat2_0_2) := bcat2_0_2 + 1;
	else if ((((3 - axin2_0_2) < bcat2_0_2) & (bcat2_0_2 > 0)))
		next(bcat2_0_2) := bcat2_0_2 - 1;
	else next(bcat2_0_2) := bcat2_0_2;
	if (((wnt2_0_3 + wnt1_1_3 + wnt0_0_3 + wnt1_0_2) > (3 + (4 * wntext1_0_3))))
		next(wntext1_0_3) := wntext1_0_3 + 1;
	else if (((wnt2_0_3 + wnt1_1_3 + wnt0_0_3 + wnt1_0_2) < (4 * wntext1_0_3)))
		next(wntext1_0_3) := wntext1_0_3 - 1;
	else next(wntext1_0_3) := wntext1_0_3;
	if (((wnt2_0_2 + wnt1_1_2 + wnt0_0_2 + wnt1_0_1 + wnt1_0_3) > (4 + (5 * wntext1_0_2))))
		next(wntext1_0_2) := wntext1_0_2 + 1;
	else if (((wnt2_0_2 + wnt1_1_2 + wnt0_0_2 + wnt1_0_1 + wnt1_0_3) < (5 * wntext1_0_2)))
		next(wntext1_0_2) := wntext1_0_2 - 1;
	else next(wntext1_0_2) := wntext1_0_2;
	if (((wnt2_0_1 + wnt1_1_1 + wnt0_0_1 + wnt1_0_0 + wnt1_0_2) > (4 + (5 * wntext1_0_1))))
		next(wntext1_0_1) := wntext1_0_1 + 1;
	else if (((wnt2_0_1 + wnt1_1_1 + wnt0_0_1 + wnt1_0_0 + wnt1_0_2) < (5 * wntext1_0_1)))
		next(wntext1_0_1) := wntext1_0_1 - 1;
	else next(wntext1_0_1) := wntext1_0_1;
	if ((wntext3_3_2 > frizzled3_3_2))
		next(frizzled3_3_2) := frizzled3_3_2 + 1;
	else if ((wntext3_3_2 < frizzled3_3_2))
		next(frizzled3_3_2) := frizzled3_3_2 - 1;
	else next(frizzled3_3_2) := frizzled3_3_2;
	if ((notchic1_1_1 > p21_1_1_1))
		next(p21_1_1_1) := p21_1_1_1 + 1;
	else if ((notchic1_1_1 < p21_1_1_1))
		next(p21_1_1_1) := p21_1_1_1 - 1;
	else next(p21_1_1_1) := p21_1_1_1;
	if (((3 - dsh1_2_1) > axin1_2_1))
		next(axin1_2_1) := axin1_2_1 + 1;
	else if ((((3 - dsh1_2_1) < axin1_2_1) & (axin1_2_1 > 0)))
		next(axin1_2_1) := axin1_2_1 - 1;
	else next(axin1_2_1) := axin1_2_1;
	if ((wntext3_3_3 > frizzled3_3_3))
		next(frizzled3_3_3) := frizzled3_3_3 + 1;
	else if ((wntext3_3_3 < frizzled3_3_3))
		next(frizzled3_3_3) := frizzled3_3_3 - 1;
	else next(frizzled3_3_3) := frizzled3_3_3;
	if ((notchic1_1_0 > p21_1_1_0))
		next(p21_1_1_0) := p21_1_1_0 + 1;
	else if ((notchic1_1_0 < p21_1_1_0))
		next(p21_1_1_0) := p21_1_1_0 - 1;
	else next(p21_1_1_0) := p21_1_1_0;
	if (((3 - dsh1_2_2) > axin1_2_2))
		next(axin1_2_2) := axin1_2_2 + 1;
	else if ((((3 - dsh1_2_2) < axin1_2_2) & (axin1_2_2 > 0)))
		next(axin1_2_2) := axin1_2_2 - 1;
	else next(axin1_2_2) := axin1_2_2;
	if ((notchic1_1_3 > p21_1_1_3))
		next(p21_1_1_3) := p21_1_1_3 + 1;
	else if ((notchic1_1_3 < p21_1_1_3))
		next(p21_1_1_3) := p21_1_1_3 - 1;
	else next(p21_1_1_3) := p21_1_1_3;
	if (((delta0_0_2 + delta1_1_2 + delta0_2_2 + 2 + delta0_1_1 + delta0_1_3) > (6 * deltaext0_1_2)))
		next(deltaext0_1_2) := deltaext0_1_2 + 1;
	else if (((delta0_0_2 + delta1_1_2 + delta0_2_2 + 2 + delta0_1_1 + delta0_1_3) < ((6 * deltaext0_1_2) - 5)))
		next(deltaext0_1_2) := deltaext0_1_2 - 1;
	else next(deltaext0_1_2) := deltaext0_1_2;
	if (((delta0_0_3 + delta1_1_3 + delta0_2_3 + 2 + delta0_1_2) > (5 * deltaext0_1_3)))
		next(deltaext0_1_3) := deltaext0_1_3 + 1;
	else if (((delta0_0_3 + delta1_1_3 + delta0_2_3 + 2 + delta0_1_2) < ((5 * deltaext0_1_3) - 4)))
		next(deltaext0_1_3) := deltaext0_1_3 - 1;
	else next(deltaext0_1_3) := deltaext0_1_3;
	if (((3 - dsh1_2_0) > axin1_2_0))
		next(axin1_2_0) := axin1_2_0 + 1;
	else if ((((3 - dsh1_2_0) < axin1_2_0) & (axin1_2_0 > 0)))
		next(axin1_2_0) := axin1_2_0 - 1;
	else next(axin1_2_0) := axin1_2_0;
	if ((notchic1_1_2 > p21_1_1_2))
		next(p21_1_1_2) := p21_1_1_2 + 1;
	else if ((notchic1_1_2 < p21_1_1_2))
		next(p21_1_1_2) := p21_1_1_2 - 1;
	else next(p21_1_1_2) := p21_1_1_2;
	if (((delta0_0_0 + delta1_1_0 + delta0_2_0 + 2 + delta0_1_1) > (5 * deltaext0_1_0)))
		next(deltaext0_1_0) := deltaext0_1_0 + 1;
	else if (((delta0_0_0 + delta1_1_0 + delta0_2_0 + 2 + delta0_1_1) < ((5 * deltaext0_1_0) - 4)))
		next(deltaext0_1_0) := deltaext0_1_0 - 1;
	else next(deltaext0_1_0) := deltaext0_1_0;
	if ((frizzled2_1_2 > dsh2_1_2))
		next(dsh2_1_2) := dsh2_1_2 + 1;
	else if ((frizzled2_1_2 < dsh2_1_2))
		next(dsh2_1_2) := dsh2_1_2 - 1;
	else next(dsh2_1_2) := dsh2_1_2;
	if ((frizzled2_1_3 > dsh2_1_3))
		next(dsh2_1_3) := dsh2_1_3 + 1;
	else if ((frizzled2_1_3 < dsh2_1_3))
		next(dsh2_1_3) := dsh2_1_3 - 1;
	else next(dsh2_1_3) := dsh2_1_3;
	if (((delta0_0_1 + delta1_1_1 + delta0_2_1 + 2 + delta0_1_0 + delta0_1_2) > (6 * deltaext0_1_1)))
		next(deltaext0_1_1) := deltaext0_1_1 + 1;
	else if (((delta0_0_1 + delta1_1_1 + delta0_2_1 + 2 + delta0_1_0 + delta0_1_2) < ((6 * deltaext0_1_1) - 5)))
		next(deltaext0_1_1) := deltaext0_1_1 - 1;
	else next(deltaext0_1_1) := deltaext0_1_1;
	if (((3 - dsh1_2_3) > axin1_2_3))
		next(axin1_2_3) := axin1_2_3 + 1;
	else if ((((3 - dsh1_2_3) < axin1_2_3) & (axin1_2_3 > 0)))
		next(axin1_2_3) := axin1_2_3 - 1;
	else next(axin1_2_3) := axin1_2_3;
	if ((wntext3_3_0 > frizzled3_3_0))
		next(frizzled3_3_0) := frizzled3_3_0 + 1;
	else if ((wntext3_3_0 < frizzled3_3_0))
		next(frizzled3_3_0) := frizzled3_3_0 - 1;
	else next(frizzled3_3_0) := frizzled3_3_0;
	if ((frizzled2_1_0 > dsh2_1_0))
		next(dsh2_1_0) := dsh2_1_0 + 1;
	else if ((frizzled2_1_0 < dsh2_1_0))
		next(dsh2_1_0) := dsh2_1_0 - 1;
	else next(dsh2_1_0) := dsh2_1_0;
	if ((frizzled2_1_1 > dsh2_1_1))
		next(dsh2_1_1) := dsh2_1_1 + 1;
	else if ((frizzled2_1_1 < dsh2_1_1))
		next(dsh2_1_1) := dsh2_1_1 - 1;
	else next(dsh2_1_1) := dsh2_1_1;
	if ((wntext3_3_1 > frizzled3_3_1))
		next(frizzled3_3_1) := frizzled3_3_1 + 1;
	else if ((wntext3_3_1 < frizzled3_3_1))
		next(frizzled3_3_1) := frizzled3_3_1 - 1;
	else next(frizzled3_3_1) := frizzled3_3_1;
	if (((3 - axin4_0_3) > bcat4_0_3))
		next(bcat4_0_3) := bcat4_0_3 + 1;
	else if ((((3 - axin4_0_3) < bcat4_0_3) & (bcat4_0_3 > 0)))
		next(bcat4_0_3) := bcat4_0_3 - 1;
	else next(bcat4_0_3) := bcat4_0_3;
	if (((3 - axin4_0_2) > bcat4_0_2))
		next(bcat4_0_2) := bcat4_0_2 + 1;
	else if ((((3 - axin4_0_2) < bcat4_0_2) & (bcat4_0_2 > 0)))
		next(bcat4_0_2) := bcat4_0_2 - 1;
	else next(bcat4_0_2) := bcat4_0_2;
	if (((3 - axin4_0_1) > bcat4_0_1))
		next(bcat4_0_1) := bcat4_0_1 + 1;
	else if ((((3 - axin4_0_1) < bcat4_0_1) & (bcat4_0_1 > 0)))
		next(bcat4_0_1) := bcat4_0_1 - 1;
	else next(bcat4_0_1) := bcat4_0_1;
	if (((3 - axin4_0_0) > bcat4_0_0))
		next(bcat4_0_0) := bcat4_0_0 + 1;
	else if ((((3 - axin4_0_0) < bcat4_0_0) & (bcat4_0_0 > 0)))
		next(bcat4_0_0) := bcat4_0_0 - 1;
	else next(bcat4_0_0) := bcat4_0_0;
	if (((3 - dsh4_4_2) > axin4_4_2))
		next(axin4_4_2) := axin4_4_2 + 1;
	else if ((((3 - dsh4_4_2) < axin4_4_2) & (axin4_4_2 > 0)))
		next(axin4_4_2) := axin4_4_2 - 1;
	else next(axin4_4_2) := axin4_4_2;
	if (((3 - dsh4_4_3) > axin4_4_3))
		next(axin4_4_3) := axin4_4_3 + 1;
	else if ((((3 - dsh4_4_3) < axin4_4_3) & (axin4_4_3 > 0)))
		next(axin4_4_3) := axin4_4_3 - 1;
	else next(axin4_4_3) := axin4_4_3;
	if (((wnt4_1_2 + 0 + wnt4_3_2 + wnt3_2_2 + wnt4_2_1 + wnt4_2_3) > (5 + (6 * wntext4_2_2))))
		next(wntext4_2_2) := wntext4_2_2 + 1;
	else if (((wnt4_1_2 + 0 + wnt4_3_2 + wnt3_2_2 + wnt4_2_1 + wnt4_2_3) < (6 * wntext4_2_2)))
		next(wntext4_2_2) := wntext4_2_2 - 1;
	else next(wntext4_2_2) := wntext4_2_2;
	if (((wnt4_1_3 + 0 + wnt4_3_3 + wnt3_2_3 + wnt4_2_2) > (4 + (5 * wntext4_2_3))))
		next(wntext4_2_3) := wntext4_2_3 + 1;
	else if (((wnt4_1_3 + 0 + wnt4_3_3 + wnt3_2_3 + wnt4_2_2) < (5 * wntext4_2_3)))
		next(wntext4_2_3) := wntext4_2_3 - 1;
	else next(wntext4_2_3) := wntext4_2_3;
	if (((gt1_3_2_0 + gt2_3_2_0) > (2 * delta3_2_0)))
		next(delta3_2_0) := delta3_2_0 + 1;
	else if (((gt1_3_2_0 + gt2_3_2_0) < ((2 * delta3_2_0) - 1)))
		next(delta3_2_0) := delta3_2_0 - 1;
	else next(delta3_2_0) := delta3_2_0;
	if (((wnt4_1_0 + 0 + wnt4_3_0 + wnt3_2_0 + wnt4_2_1) > (4 + (5 * wntext4_2_0))))
		next(wntext4_2_0) := wntext4_2_0 + 1;
	else if (((wnt4_1_0 + 0 + wnt4_3_0 + wnt3_2_0 + wnt4_2_1) < (5 * wntext4_2_0)))
		next(wntext4_2_0) := wntext4_2_0 - 1;
	else next(wntext4_2_0) := wntext4_2_0;
	if (((wnt4_1_1 + 0 + wnt4_3_1 + wnt3_2_1 + wnt4_2_0 + wnt4_2_2) > (5 + (6 * wntext4_2_1))))
		next(wntext4_2_1) := wntext4_2_1 + 1;
	else if (((wnt4_1_1 + 0 + wnt4_3_1 + wnt3_2_1 + wnt4_2_0 + wnt4_2_2) < (6 * wntext4_2_1)))
		next(wntext4_2_1) := wntext4_2_1 - 1;
	else next(wntext4_2_1) := wntext4_2_1;
	if ((notchic1_4_0 > gt2_1_4_0))
		next(gt2_1_4_0) := gt2_1_4_0 + 1;
	else if ((notchic1_4_0 < gt2_1_4_0))
		next(gt2_1_4_0) := gt2_1_4_0 - 1;
	else next(gt2_1_4_0) := gt2_1_4_0;
	if ((notchic1_4_2 > gt2_1_4_2))
		next(gt2_1_4_2) := gt2_1_4_2 + 1;
	else if ((notchic1_4_2 < gt2_1_4_2))
		next(gt2_1_4_2) := gt2_1_4_2 - 1;
	else next(gt2_1_4_2) := gt2_1_4_2;
	if ((notchic1_4_1 > gt2_1_4_1))
		next(gt2_1_4_1) := gt2_1_4_1 + 1;
	else if ((notchic1_4_1 < gt2_1_4_1))
		next(gt2_1_4_1) := gt2_1_4_1 - 1;
	else next(gt2_1_4_1) := gt2_1_4_1;
	if (((delta2_1_3 + delta3_2_3 + delta2_3_3 + delta1_2_3 + delta2_2_2) > (5 * deltaext2_2_3)))
		next(deltaext2_2_3) := deltaext2_2_3 + 1;
	else if (((delta2_1_3 + delta3_2_3 + delta2_3_3 + delta1_2_3 + delta2_2_2) < ((5 * deltaext2_2_3) - 4)))
		next(deltaext2_2_3) := deltaext2_2_3 - 1;
	else next(deltaext2_2_3) := deltaext2_2_3;
	if (((gt1_3_2_3 + gt2_3_2_3) > (2 * delta3_2_3)))
		next(delta3_2_3) := delta3_2_3 + 1;
	else if (((gt1_3_2_3 + gt2_3_2_3) < ((2 * delta3_2_3) - 1)))
		next(delta3_2_3) := delta3_2_3 - 1;
	else next(delta3_2_3) := delta3_2_3;
	if (((gt1_3_2_1 + gt2_3_2_1) > (2 * delta3_2_1)))
		next(delta3_2_1) := delta3_2_1 + 1;
	else if (((gt1_3_2_1 + gt2_3_2_1) < ((2 * delta3_2_1) - 1)))
		next(delta3_2_1) := delta3_2_1 - 1;
	else next(delta3_2_1) := delta3_2_1;
	if (((wnt0_2_3 + wnt1_3_3 + wnt0_4_3 + 3 + wnt0_3_2) > (4 + (5 * wntext0_3_3))))
		next(wntext0_3_3) := wntext0_3_3 + 1;
	else if (((wnt0_2_3 + wnt1_3_3 + wnt0_4_3 + 3 + wnt0_3_2) < (5 * wntext0_3_3)))
		next(wntext0_3_3) := wntext0_3_3 - 1;
	else next(wntext0_3_3) := wntext0_3_3;
	if (((gt1_3_2_2 + gt2_3_2_2) > (2 * delta3_2_2)))
		next(delta3_2_2) := delta3_2_2 + 1;
	else if (((gt1_3_2_2 + gt2_3_2_2) < ((2 * delta3_2_2) - 1)))
		next(delta3_2_2) := delta3_2_2 - 1;
	else next(delta3_2_2) := delta3_2_2;
	if (((wnt0_2_2 + wnt1_3_2 + wnt0_4_2 + 3 + wnt0_3_1 + wnt0_3_3) > (5 + (6 * wntext0_3_2))))
		next(wntext0_3_2) := wntext0_3_2 + 1;
	else if (((wnt0_2_2 + wnt1_3_2 + wnt0_4_2 + 3 + wnt0_3_1 + wnt0_3_3) < (6 * wntext0_3_2)))
		next(wntext0_3_2) := wntext0_3_2 - 1;
	else next(wntext0_3_2) := wntext0_3_2;
	if (((wnt0_2_1 + wnt1_3_1 + wnt0_4_1 + 3 + wnt0_3_0 + wnt0_3_2) > (5 + (6 * wntext0_3_1))))
		next(wntext0_3_1) := wntext0_3_1 + 1;
	else if (((wnt0_2_1 + wnt1_3_1 + wnt0_4_1 + 3 + wnt0_3_0 + wnt0_3_2) < (6 * wntext0_3_1)))
		next(wntext0_3_1) := wntext0_3_1 - 1;
	else next(wntext0_3_1) := wntext0_3_1;
	if (((wnt0_2_0 + wnt1_3_0 + wnt0_4_0 + 3 + wnt0_3_1) > (4 + (5 * wntext0_3_0))))
		next(wntext0_3_0) := wntext0_3_0 + 1;
	else if (((wnt0_2_0 + wnt1_3_0 + wnt0_4_0 + 3 + wnt0_3_1) < (5 * wntext0_3_0)))
		next(wntext0_3_0) := wntext0_3_0 - 1;
	else next(wntext0_3_0) := wntext0_3_0;
	if ((notchic3_0_1 > p21_3_0_1))
		next(p21_3_0_1) := p21_3_0_1 + 1;
	else if ((notchic3_0_1 < p21_3_0_1))
		next(p21_3_0_1) := p21_3_0_1 - 1;
	else next(p21_3_0_1) := p21_3_0_1;
	if ((notchic3_0_2 > p21_3_0_2))
		next(p21_3_0_2) := p21_3_0_2 + 1;
	else if ((notchic3_0_2 < p21_3_0_2))
		next(p21_3_0_2) := p21_3_0_2 - 1;
	else next(p21_3_0_2) := p21_3_0_2;
	if (((3 - axin4_4_0) > bcat4_4_0))
		next(bcat4_4_0) := bcat4_4_0 + 1;
	else if ((((3 - axin4_4_0) < bcat4_4_0) & (bcat4_4_0 > 0)))
		next(bcat4_4_0) := bcat4_4_0 - 1;
	else next(bcat4_4_0) := bcat4_4_0;
	if ((notchic3_0_0 > p21_3_0_0))
		next(p21_3_0_0) := p21_3_0_0 + 1;
	else if ((notchic3_0_0 < p21_3_0_0))
		next(p21_3_0_0) := p21_3_0_0 - 1;
	else next(p21_3_0_0) := p21_3_0_0;
	if (((3 - axin4_4_1) > bcat4_4_1))
		next(bcat4_4_1) := bcat4_4_1 + 1;
	else if ((((3 - axin4_4_1) < bcat4_4_1) & (bcat4_4_1 > 0)))
		next(bcat4_4_1) := bcat4_4_1 - 1;
	else next(bcat4_4_1) := bcat4_4_1;
	if (((delta2_1_0 + delta3_2_0 + delta2_3_0 + delta1_2_0 + delta2_2_1) > (5 * deltaext2_2_0)))
		next(deltaext2_2_0) := deltaext2_2_0 + 1;
	else if (((delta2_1_0 + delta3_2_0 + delta2_3_0 + delta1_2_0 + delta2_2_1) < ((5 * deltaext2_2_0) - 4)))
		next(deltaext2_2_0) := deltaext2_2_0 - 1;
	else next(deltaext2_2_0) := deltaext2_2_0;
	if (((delta2_1_1 + delta3_2_1 + delta2_3_1 + delta1_2_1 + delta2_2_0 + delta2_2_2) > (6 * deltaext2_2_1)))
		next(deltaext2_2_1) := deltaext2_2_1 + 1;
	else if (((delta2_1_1 + delta3_2_1 + delta2_3_1 + delta1_2_1 + delta2_2_0 + delta2_2_2) < ((6 * deltaext2_2_1) - 5)))
		next(deltaext2_2_1) := deltaext2_2_1 - 1;
	else next(deltaext2_2_1) := deltaext2_2_1;
	if (((delta2_1_2 + delta3_2_2 + delta2_3_2 + delta1_2_2 + delta2_2_1 + delta2_2_3) > (6 * deltaext2_2_2)))
		next(deltaext2_2_2) := deltaext2_2_2 + 1;
	else if (((delta2_1_2 + delta3_2_2 + delta2_3_2 + delta1_2_2 + delta2_2_1 + delta2_2_3) < ((6 * deltaext2_2_2) - 5)))
		next(deltaext2_2_2) := deltaext2_2_2 - 1;
	else next(deltaext2_2_2) := deltaext2_2_2;
	if (((3 - axin4_4_2) > bcat4_4_2))
		next(bcat4_4_2) := bcat4_4_2 + 1;
	else if ((((3 - axin4_4_2) < bcat4_4_2) & (bcat4_4_2 > 0)))
		next(bcat4_4_2) := bcat4_4_2 - 1;
	else next(bcat4_4_2) := bcat4_4_2;
	if (((3 - axin4_4_3) > bcat4_4_3))
		next(bcat4_4_3) := bcat4_4_3 + 1;
	else if ((((3 - axin4_4_3) < bcat4_4_3) & (bcat4_4_3 > 0)))
		next(bcat4_4_3) := bcat4_4_3 - 1;
	else next(bcat4_4_3) := bcat4_4_3;
	if ((notchic3_0_3 > p21_3_0_3))
		next(p21_3_0_3) := p21_3_0_3 + 1;
	else if ((notchic3_0_3 < p21_3_0_3))
		next(p21_3_0_3) := p21_3_0_3 - 1;
	else next(p21_3_0_3) := p21_3_0_3;
	if (((gt1_2_0_2 + gt2_2_0_2) > (2 * delta2_0_2)))
		next(delta2_0_2) := delta2_0_2 + 1;
	else if (((gt1_2_0_2 + gt2_2_0_2) < ((2 * delta2_0_2) - 1)))
		next(delta2_0_2) := delta2_0_2 - 1;
	else next(delta2_0_2) := delta2_0_2;
	if (((gt1_2_0_3 + gt2_2_0_3) > (2 * delta2_0_3)))
		next(delta2_0_3) := delta2_0_3 + 1;
	else if (((gt1_2_0_3 + gt2_2_0_3) < ((2 * delta2_0_3) - 1)))
		next(delta2_0_3) := delta2_0_3 - 1;
	else next(delta2_0_3) := delta2_0_3;
	if ((bcat4_2_3 > gt1_4_2_3))
		next(gt1_4_2_3) := gt1_4_2_3 + 1;
	else if ((bcat4_2_3 < gt1_4_2_3))
		next(gt1_4_2_3) := gt1_4_2_3 - 1;
	else next(gt1_4_2_3) := gt1_4_2_3;
	if (((gt1_2_0_0 + gt2_2_0_0) > (2 * delta2_0_0)))
		next(delta2_0_0) := delta2_0_0 + 1;
	else if (((gt1_2_0_0 + gt2_2_0_0) < ((2 * delta2_0_0) - 1)))
		next(delta2_0_0) := delta2_0_0 - 1;
	else next(delta2_0_0) := delta2_0_0;
	if (((gt1_2_0_1 + gt2_2_0_1) > (2 * delta2_0_1)))
		next(delta2_0_1) := delta2_0_1 + 1;
	else if (((gt1_2_0_1 + gt2_2_0_1) < ((2 * delta2_0_1) - 1)))
		next(delta2_0_1) := delta2_0_1 - 1;
	else next(delta2_0_1) := delta2_0_1;
	if (((delta4_0_0 + delta3_1_0 + delta2_0_0 + delta3_0_1) > (4 * deltaext3_0_0)))
		next(deltaext3_0_0) := deltaext3_0_0 + 1;
	else if (((delta4_0_0 + delta3_1_0 + delta2_0_0 + delta3_0_1) < ((4 * deltaext3_0_0) - 3)))
		next(deltaext3_0_0) := deltaext3_0_0 - 1;
	else next(deltaext3_0_0) := deltaext3_0_0;
	if (((delta4_0_1 + delta3_1_1 + delta2_0_1 + delta3_0_0 + delta3_0_2) > (5 * deltaext3_0_1)))
		next(deltaext3_0_1) := deltaext3_0_1 + 1;
	else if (((delta4_0_1 + delta3_1_1 + delta2_0_1 + delta3_0_0 + delta3_0_2) < ((5 * deltaext3_0_1) - 4)))
		next(deltaext3_0_1) := deltaext3_0_1 - 1;
	else next(deltaext3_0_1) := deltaext3_0_1;
	if (((delta4_0_2 + delta3_1_2 + delta2_0_2 + delta3_0_1 + delta3_0_3) > (5 * deltaext3_0_2)))
		next(deltaext3_0_2) := deltaext3_0_2 + 1;
	else if (((delta4_0_2 + delta3_1_2 + delta2_0_2 + delta3_0_1 + delta3_0_3) < ((5 * deltaext3_0_2) - 4)))
		next(deltaext3_0_2) := deltaext3_0_2 - 1;
	else next(deltaext3_0_2) := deltaext3_0_2;
	if (((delta4_0_3 + delta3_1_3 + delta2_0_3 + delta3_0_2) > (4 * deltaext3_0_3)))
		next(deltaext3_0_3) := deltaext3_0_3 + 1;
	else if (((delta4_0_3 + delta3_1_3 + delta2_0_3 + delta3_0_2) < ((4 * deltaext3_0_3) - 3)))
		next(deltaext3_0_3) := deltaext3_0_3 - 1;
	else next(deltaext3_0_3) := deltaext3_0_3;
	if (((wnt3_0_2 + wnt2_1_2 + wnt1_0_2 + wnt2_0_1 + wnt2_0_3) > (4 + (5 * wntext2_0_2))))
		next(wntext2_0_2) := wntext2_0_2 + 1;
	else if (((wnt3_0_2 + wnt2_1_2 + wnt1_0_2 + wnt2_0_1 + wnt2_0_3) < (5 * wntext2_0_2)))
		next(wntext2_0_2) := wntext2_0_2 - 1;
	else next(wntext2_0_2) := wntext2_0_2;
	if (((wnt3_0_3 + wnt2_1_3 + wnt1_0_3 + wnt2_0_2) > (3 + (4 * wntext2_0_3))))
		next(wntext2_0_3) := wntext2_0_3 + 1;
	else if (((wnt3_0_3 + wnt2_1_3 + wnt1_0_3 + wnt2_0_2) < (4 * wntext2_0_3)))
		next(wntext2_0_3) := wntext2_0_3 - 1;
	else next(wntext2_0_3) := wntext2_0_3;
	if (((wnt3_0_0 + wnt2_1_0 + wnt1_0_0 + wnt2_0_1) > (3 + (4 * wntext2_0_0))))
		next(wntext2_0_0) := wntext2_0_0 + 1;
	else if (((wnt3_0_0 + wnt2_1_0 + wnt1_0_0 + wnt2_0_1) < (4 * wntext2_0_0)))
		next(wntext2_0_0) := wntext2_0_0 - 1;
	else next(wntext2_0_0) := wntext2_0_0;
	if (((wnt3_0_1 + wnt2_1_1 + wnt1_0_1 + wnt2_0_0 + wnt2_0_2) > (4 + (5 * wntext2_0_1))))
		next(wntext2_0_1) := wntext2_0_1 + 1;
	else if (((wnt3_0_1 + wnt2_1_1 + wnt1_0_1 + wnt2_0_0 + wnt2_0_2) < (5 * wntext2_0_1)))
		next(wntext2_0_1) := wntext2_0_1 - 1;
	else next(wntext2_0_1) := wntext2_0_1;
	if ((bcat4_4_3 > gt1_4_4_3))
		next(gt1_4_4_3) := gt1_4_4_3 + 1;
	else if ((bcat4_4_3 < gt1_4_4_3))
		next(gt1_4_4_3) := gt1_4_4_3 - 1;
	else next(gt1_4_4_3) := gt1_4_4_3;
	if ((bcat4_4_2 > gt1_4_4_2))
		next(gt1_4_4_2) := gt1_4_4_2 + 1;
	else if ((bcat4_4_2 < gt1_4_4_2))
		next(gt1_4_4_2) := gt1_4_4_2 - 1;
	else next(gt1_4_4_2) := gt1_4_4_2;
	if ((bcat4_4_1 > gt1_4_4_1))
		next(gt1_4_4_1) := gt1_4_4_1 + 1;
	else if ((bcat4_4_1 < gt1_4_4_1))
		next(gt1_4_4_1) := gt1_4_4_1 - 1;
	else next(gt1_4_4_1) := gt1_4_4_1;
	if (((gt1_0_3_3 + gt2_0_3_3) > (2 * delta0_3_3)))
		next(delta0_3_3) := delta0_3_3 + 1;
	else if (((gt1_0_3_3 + gt2_0_3_3) < ((2 * delta0_3_3) - 1)))
		next(delta0_3_3) := delta0_3_3 - 1;
	else next(delta0_3_3) := delta0_3_3;
	if (((gt1_1_1_2 + gt2_1_1_2) > (2 * delta1_1_2)))
		next(delta1_1_2) := delta1_1_2 + 1;
	else if (((gt1_1_1_2 + gt2_1_1_2) < ((2 * delta1_1_2) - 1)))
		next(delta1_1_2) := delta1_1_2 - 1;
	else next(delta1_1_2) := delta1_1_2;
	if (((gt1_1_1_3 + gt2_1_1_3) > (2 * delta1_1_3)))
		next(delta1_1_3) := delta1_1_3 + 1;
	else if (((gt1_1_1_3 + gt2_1_1_3) < ((2 * delta1_1_3) - 1)))
		next(delta1_1_3) := delta1_1_3 - 1;
	else next(delta1_1_3) := delta1_1_3;
	if (((gt1_1_1_0 + gt2_1_1_0) > (2 * delta1_1_0)))
		next(delta1_1_0) := delta1_1_0 + 1;
	else if (((gt1_1_1_0 + gt2_1_1_0) < ((2 * delta1_1_0) - 1)))
		next(delta1_1_0) := delta1_1_0 - 1;
	else next(delta1_1_0) := delta1_1_0;
	if (((gt1_1_1_1 + gt2_1_1_1) > (2 * delta1_1_1)))
		next(delta1_1_1) := delta1_1_1 + 1;
	else if (((gt1_1_1_1 + gt2_1_1_1) < ((2 * delta1_1_1) - 1)))
		next(delta1_1_1) := delta1_1_1 - 1;
	else next(delta1_1_1) := delta1_1_1;
	if (((gt1_0_3_2 + gt2_0_3_2) > (2 * delta0_3_2)))
		next(delta0_3_2) := delta0_3_2 + 1;
	else if (((gt1_0_3_2 + gt2_0_3_2) < ((2 * delta0_3_2) - 1)))
		next(delta0_3_2) := delta0_3_2 - 1;
	else next(delta0_3_2) := delta0_3_2;
	if (((gt1_0_3_1 + gt2_0_3_1) > (2 * delta0_3_1)))
		next(delta0_3_1) := delta0_3_1 + 1;
	else if (((gt1_0_3_1 + gt2_0_3_1) < ((2 * delta0_3_1) - 1)))
		next(delta0_3_1) := delta0_3_1 - 1;
	else next(delta0_3_1) := delta0_3_1;
	if (((gt1_0_3_0 + gt2_0_3_0) > (2 * delta0_3_0)))
		next(delta0_3_0) := delta0_3_0 + 1;
	else if (((gt1_0_3_0 + gt2_0_3_0) < ((2 * delta0_3_0) - 1)))
		next(delta0_3_0) := delta0_3_0 - 1;
	else next(delta0_3_0) := delta0_3_0;
	if (((delta1_2_0 + delta2_3_0 + delta1_4_0 + delta0_3_0 + delta1_3_1) > (5 * deltaext1_3_0)))
		next(deltaext1_3_0) := deltaext1_3_0 + 1;
	else if (((delta1_2_0 + delta2_3_0 + delta1_4_0 + delta0_3_0 + delta1_3_1) < ((5 * deltaext1_3_0) - 4)))
		next(deltaext1_3_0) := deltaext1_3_0 - 1;
	else next(deltaext1_3_0) := deltaext1_3_0;
	if (((3 - dsh2_4_1) > axin2_4_1))
		next(axin2_4_1) := axin2_4_1 + 1;
	else if ((((3 - dsh2_4_1) < axin2_4_1) & (axin2_4_1 > 0)))
		next(axin2_4_1) := axin2_4_1 - 1;
	else next(axin2_4_1) := axin2_4_1;
	if (((3 - dsh2_4_0) > axin2_4_0))
		next(axin2_4_0) := axin2_4_0 + 1;
	else if ((((3 - dsh2_4_0) < axin2_4_0) & (axin2_4_0 > 0)))
		next(axin2_4_0) := axin2_4_0 - 1;
	else next(axin2_4_0) := axin2_4_0;
	if (((3 - dsh2_4_3) > axin2_4_3))
		next(axin2_4_3) := axin2_4_3 + 1;
	else if ((((3 - dsh2_4_3) < axin2_4_3) & (axin2_4_3 > 0)))
		next(axin2_4_3) := axin2_4_3 - 1;
	else next(axin2_4_3) := axin2_4_3;
	if (((delta1_2_2 + delta2_3_2 + delta1_4_2 + delta0_3_2 + delta1_3_1 + delta1_3_3) > (6 * deltaext1_3_2)))
		next(deltaext1_3_2) := deltaext1_3_2 + 1;
	else if (((delta1_2_2 + delta2_3_2 + delta1_4_2 + delta0_3_2 + delta1_3_1 + delta1_3_3) < ((6 * deltaext1_3_2) - 5)))
		next(deltaext1_3_2) := deltaext1_3_2 - 1;
	else next(deltaext1_3_2) := deltaext1_3_2;
	if (((3 - dsh2_4_2) > axin2_4_2))
		next(axin2_4_2) := axin2_4_2 + 1;
	else if ((((3 - dsh2_4_2) < axin2_4_2) & (axin2_4_2 > 0)))
		next(axin2_4_2) := axin2_4_2 - 1;
	else next(axin2_4_2) := axin2_4_2;
	if (((delta1_2_1 + delta2_3_1 + delta1_4_1 + delta0_3_1 + delta1_3_0 + delta1_3_2) > (6 * deltaext1_3_1)))
		next(deltaext1_3_1) := deltaext1_3_1 + 1;
	else if (((delta1_2_1 + delta2_3_1 + delta1_4_1 + delta0_3_1 + delta1_3_0 + delta1_3_2) < ((6 * deltaext1_3_1) - 5)))
		next(deltaext1_3_1) := deltaext1_3_1 - 1;
	else next(deltaext1_3_1) := deltaext1_3_1;
	if (((3 - dsh2_2_2) > axin2_2_2))
		next(axin2_2_2) := axin2_2_2 + 1;
	else if ((((3 - dsh2_2_2) < axin2_2_2) & (axin2_2_2 > 0)))
		next(axin2_2_2) := axin2_2_2 - 1;
	else next(axin2_2_2) := axin2_2_2;
	if (((3 - dsh2_2_3) > axin2_2_3))
		next(axin2_2_3) := axin2_2_3 + 1;
	else if ((((3 - dsh2_2_3) < axin2_2_3) & (axin2_2_3 > 0)))
		next(axin2_2_3) := axin2_2_3 - 1;
	else next(axin2_2_3) := axin2_2_3;
	if (((3 - dsh3_1_1) > axin3_1_1))
		next(axin3_1_1) := axin3_1_1 + 1;
	else if ((((3 - dsh3_1_1) < axin3_1_1) & (axin3_1_1 > 0)))
		next(axin3_1_1) := axin3_1_1 - 1;
	else next(axin3_1_1) := axin3_1_1;
	if (((3 - dsh3_1_0) > axin3_1_0))
		next(axin3_1_0) := axin3_1_0 + 1;
	else if ((((3 - dsh3_1_0) < axin3_1_0) & (axin3_1_0 > 0)))
		next(axin3_1_0) := axin3_1_0 - 1;
	else next(axin3_1_0) := axin3_1_0;
	if (((delta1_2_3 + delta2_3_3 + delta1_4_3 + delta0_3_3 + delta1_3_2) > (5 * deltaext1_3_3)))
		next(deltaext1_3_3) := deltaext1_3_3 + 1;
	else if (((delta1_2_3 + delta2_3_3 + delta1_4_3 + delta0_3_3 + delta1_3_2) < ((5 * deltaext1_3_3) - 4)))
		next(deltaext1_3_3) := deltaext1_3_3 - 1;
	else next(deltaext1_3_3) := deltaext1_3_3;
	if (((3 - dsh3_1_3) > axin3_1_3))
		next(axin3_1_3) := axin3_1_3 + 1;
	else if ((((3 - dsh3_1_3) < axin3_1_3) & (axin3_1_3 > 0)))
		next(axin3_1_3) := axin3_1_3 - 1;
	else next(axin3_1_3) := axin3_1_3;
	if (((3 - dsh3_1_2) > axin3_1_2))
		next(axin3_1_2) := axin3_1_2 + 1;
	else if ((((3 - dsh3_1_2) < axin3_1_2) & (axin3_1_2 > 0)))
		next(axin3_1_2) := axin3_1_2 - 1;
	else next(axin3_1_2) := axin3_1_2;
	if (((3 - dsh2_2_0) > axin2_2_0))
		next(axin2_2_0) := axin2_2_0 + 1;
	else if ((((3 - dsh2_2_0) < axin2_2_0) & (axin2_2_0 > 0)))
		next(axin2_2_0) := axin2_2_0 - 1;
	else next(axin2_2_0) := axin2_2_0;
	if (((3 - dsh2_2_1) > axin2_2_1))
		next(axin2_2_1) := axin2_2_1 + 1;
	else if ((((3 - dsh2_2_1) < axin2_2_1) & (axin2_2_1 > 0)))
		next(axin2_2_1) := axin2_2_1 - 1;
	else next(axin2_2_1) := axin2_2_1;
	if ((bcat0_4_0 > gt1_0_4_0))
		next(gt1_0_4_0) := gt1_0_4_0 + 1;
	else if ((bcat0_4_0 < gt1_0_4_0))
		next(gt1_0_4_0) := gt1_0_4_0 - 1;
	else next(gt1_0_4_0) := gt1_0_4_0;
	if (((delta4_1_0 + 2 + delta4_3_0 + delta3_2_0 + delta4_2_1) > (5 * deltaext4_2_0)))
		next(deltaext4_2_0) := deltaext4_2_0 + 1;
	else if (((delta4_1_0 + 2 + delta4_3_0 + delta3_2_0 + delta4_2_1) < ((5 * deltaext4_2_0) - 4)))
		next(deltaext4_2_0) := deltaext4_2_0 - 1;
	else next(deltaext4_2_0) := deltaext4_2_0;
	if ((bcat0_4_3 > gt1_0_4_3))
		next(gt1_0_4_3) := gt1_0_4_3 + 1;
	else if ((bcat0_4_3 < gt1_0_4_3))
		next(gt1_0_4_3) := gt1_0_4_3 - 1;
	else next(gt1_0_4_3) := gt1_0_4_3;
	if ((bcat0_4_2 > gt1_0_4_2))
		next(gt1_0_4_2) := gt1_0_4_2 + 1;
	else if ((bcat0_4_2 < gt1_0_4_2))
		next(gt1_0_4_2) := gt1_0_4_2 - 1;
	else next(gt1_0_4_2) := gt1_0_4_2;
	if ((bcat0_4_1 > gt1_0_4_1))
		next(gt1_0_4_1) := gt1_0_4_1 + 1;
	else if ((bcat0_4_1 < gt1_0_4_1))
		next(gt1_0_4_1) := gt1_0_4_1 - 1;
	else next(gt1_0_4_1) := gt1_0_4_1;
	if ((frizzled1_3_2 > dsh1_3_2))
		next(dsh1_3_2) := dsh1_3_2 + 1;
	else if ((frizzled1_3_2 < dsh1_3_2))
		next(dsh1_3_2) := dsh1_3_2 - 1;
	else next(dsh1_3_2) := dsh1_3_2;
	if ((frizzled1_3_1 > dsh1_3_1))
		next(dsh1_3_1) := dsh1_3_1 + 1;
	else if ((frizzled1_3_1 < dsh1_3_1))
		next(dsh1_3_1) := dsh1_3_1 - 1;
	else next(dsh1_3_1) := dsh1_3_1;
	if ((frizzled1_3_0 > dsh1_3_0))
		next(dsh1_3_0) := dsh1_3_0 + 1;
	else if ((frizzled1_3_0 < dsh1_3_0))
		next(dsh1_3_0) := dsh1_3_0 - 1;
	else next(dsh1_3_0) := dsh1_3_0;
	if ((frizzled0_0_0 > dsh0_0_0))
		next(dsh0_0_0) := dsh0_0_0 + 1;
	else if ((frizzled0_0_0 < dsh0_0_0))
		next(dsh0_0_0) := dsh0_0_0 - 1;
	else next(dsh0_0_0) := dsh0_0_0;
	if ((bcat0_2_1 > gt1_0_2_1))
		next(gt1_0_2_1) := gt1_0_2_1 + 1;
	else if ((bcat0_2_1 < gt1_0_2_1))
		next(gt1_0_2_1) := gt1_0_2_1 - 1;
	else next(gt1_0_2_1) := gt1_0_2_1;
	if ((bcat0_2_2 > gt1_0_2_2))
		next(gt1_0_2_2) := gt1_0_2_2 + 1;
	else if ((bcat0_2_2 < gt1_0_2_2))
		next(gt1_0_2_2) := gt1_0_2_2 - 1;
	else next(gt1_0_2_2) := gt1_0_2_2;
	if ((frizzled0_0_2 > dsh0_0_2))
		next(dsh0_0_2) := dsh0_0_2 + 1;
	else if ((frizzled0_0_2 < dsh0_0_2))
		next(dsh0_0_2) := dsh0_0_2 - 1;
	else next(dsh0_0_2) := dsh0_0_2;
	if ((frizzled0_0_1 > dsh0_0_1))
		next(dsh0_0_1) := dsh0_0_1 + 1;
	else if ((frizzled0_0_1 < dsh0_0_1))
		next(dsh0_0_1) := dsh0_0_1 - 1;
	else next(dsh0_0_1) := dsh0_0_1;
	if ((bcat0_2_0 > gt1_0_2_0))
		next(gt1_0_2_0) := gt1_0_2_0 + 1;
	else if ((bcat0_2_0 < gt1_0_2_0))
		next(gt1_0_2_0) := gt1_0_2_0 - 1;
	else next(gt1_0_2_0) := gt1_0_2_0;
	if (((delta4_1_1 + 2 + delta4_3_1 + delta3_2_1 + delta4_2_0 + delta4_2_2) > (6 * deltaext4_2_1)))
		next(deltaext4_2_1) := deltaext4_2_1 + 1;
	else if (((delta4_1_1 + 2 + delta4_3_1 + delta3_2_1 + delta4_2_0 + delta4_2_2) < ((6 * deltaext4_2_1) - 5)))
		next(deltaext4_2_1) := deltaext4_2_1 - 1;
	else next(deltaext4_2_1) := deltaext4_2_1;
	if ((frizzled0_0_3 > dsh0_0_3))
		next(dsh0_0_3) := dsh0_0_3 + 1;
	else if ((frizzled0_0_3 < dsh0_0_3))
		next(dsh0_0_3) := dsh0_0_3 - 1;
	else next(dsh0_0_3) := dsh0_0_3;
	if (((delta4_1_2 + 2 + delta4_3_2 + delta3_2_2 + delta4_2_1 + delta4_2_3) > (6 * deltaext4_2_2)))
		next(deltaext4_2_2) := deltaext4_2_2 + 1;
	else if (((delta4_1_2 + 2 + delta4_3_2 + delta3_2_2 + delta4_2_1 + delta4_2_3) < ((6 * deltaext4_2_2) - 5)))
		next(deltaext4_2_2) := deltaext4_2_2 - 1;
	else next(deltaext4_2_2) := deltaext4_2_2;
	if (((delta4_1_3 + 2 + delta4_3_3 + delta3_2_3 + delta4_2_2) > (5 * deltaext4_2_3)))
		next(deltaext4_2_3) := deltaext4_2_3 + 1;
	else if (((delta4_1_3 + 2 + delta4_3_3 + delta3_2_3 + delta4_2_2) < ((5 * deltaext4_2_3) - 4)))
		next(deltaext4_2_3) := deltaext4_2_3 - 1;
	else next(deltaext4_2_3) := deltaext4_2_3;
	if ((bcat0_2_3 > gt1_0_2_3))
		next(gt1_0_2_3) := gt1_0_2_3 + 1;
	else if ((bcat0_2_3 < gt1_0_2_3))
		next(gt1_0_2_3) := gt1_0_2_3 - 1;
	else next(gt1_0_2_3) := gt1_0_2_3;
	if ((bcat2_0_2 > gt1_2_0_2))
		next(gt1_2_0_2) := gt1_2_0_2 + 1;
	else if ((bcat2_0_2 < gt1_2_0_2))
		next(gt1_2_0_2) := gt1_2_0_2 - 1;
	else next(gt1_2_0_2) := gt1_2_0_2;
	if ((bcat2_0_1 > gt1_2_0_1))
		next(gt1_2_0_1) := gt1_2_0_1 + 1;
	else if ((bcat2_0_1 < gt1_2_0_1))
		next(gt1_2_0_1) := gt1_2_0_1 - 1;
	else next(gt1_2_0_1) := gt1_2_0_1;
	if (((3 - p21_3_1_3) > wnt3_1_3))
		next(wnt3_1_3) := wnt3_1_3 + 1;
	else if (((3 - p21_3_1_3) < wnt3_1_3))
		next(wnt3_1_3) := wnt3_1_3 - 1;
	else next(wnt3_1_3) := wnt3_1_3;
	if ((bcat2_0_0 > gt1_2_0_0))
		next(gt1_2_0_0) := gt1_2_0_0 + 1;
	else if ((bcat2_0_0 < gt1_2_0_0))
		next(gt1_2_0_0) := gt1_2_0_0 - 1;
	else next(gt1_2_0_0) := gt1_2_0_0;
	if ((bcat4_4_0 > gt1_4_4_0))
		next(gt1_4_4_0) := gt1_4_4_0 + 1;
	else if ((bcat4_4_0 < gt1_4_4_0))
		next(gt1_4_4_0) := gt1_4_4_0 - 1;
	else next(gt1_4_4_0) := gt1_4_4_0;
	if (((3 - p21_3_1_1) > wnt3_1_1))
		next(wnt3_1_1) := wnt3_1_1 + 1;
	else if (((3 - p21_3_1_1) < wnt3_1_1))
		next(wnt3_1_1) := wnt3_1_1 - 1;
	else next(wnt3_1_1) := wnt3_1_1;
	if (((3 - p21_3_1_2) > wnt3_1_2))
		next(wnt3_1_2) := wnt3_1_2 + 1;
	else if (((3 - p21_3_1_2) < wnt3_1_2))
		next(wnt3_1_2) := wnt3_1_2 - 1;
	else next(wnt3_1_2) := wnt3_1_2;
	if ((bcat2_0_3 > gt1_2_0_3))
		next(gt1_2_0_3) := gt1_2_0_3 + 1;
	else if ((bcat2_0_3 < gt1_2_0_3))
		next(gt1_2_0_3) := gt1_2_0_3 - 1;
	else next(gt1_2_0_3) := gt1_2_0_3;
	if (((3 - p21_3_1_0) > wnt3_1_0))
		next(wnt3_1_0) := wnt3_1_0 + 1;
	else if (((3 - p21_3_1_0) < wnt3_1_0))
		next(wnt3_1_0) := wnt3_1_0 - 1;
	else next(wnt3_1_0) := wnt3_1_0;
	if (((3 - axin2_2_2) > bcat2_2_2))
		next(bcat2_2_2) := bcat2_2_2 + 1;
	else if ((((3 - axin2_2_2) < bcat2_2_2) & (bcat2_2_2 > 0)))
		next(bcat2_2_2) := bcat2_2_2 - 1;
	else next(bcat2_2_2) := bcat2_2_2;
	if (((3 - axin2_2_3) > bcat2_2_3))
		next(bcat2_2_3) := bcat2_2_3 + 1;
	else if ((((3 - axin2_2_3) < bcat2_2_3) & (bcat2_2_3 > 0)))
		next(bcat2_2_3) := bcat2_2_3 - 1;
	else next(bcat2_2_3) := bcat2_2_3;
	if (((3 - axin2_2_0) > bcat2_2_0))
		next(bcat2_2_0) := bcat2_2_0 + 1;
	else if ((((3 - axin2_2_0) < bcat2_2_0) & (bcat2_2_0 > 0)))
		next(bcat2_2_0) := bcat2_2_0 - 1;
	else next(bcat2_2_0) := bcat2_2_0;
	if (((3 - axin2_2_1) > bcat2_2_1))
		next(bcat2_2_1) := bcat2_2_1 + 1;
	else if ((((3 - axin2_2_1) < bcat2_2_1) & (bcat2_2_1 > 0)))
		next(bcat2_2_1) := bcat2_2_1 - 1;
	else next(bcat2_2_1) := bcat2_2_1;
	if ((bcat4_2_0 > gt1_4_2_0))
		next(gt1_4_2_0) := gt1_4_2_0 + 1;
	else if ((bcat4_2_0 < gt1_4_2_0))
		next(gt1_4_2_0) := gt1_4_2_0 - 1;
	else next(gt1_4_2_0) := gt1_4_2_0;
	if ((bcat4_2_2 > gt1_4_2_2))
		next(gt1_4_2_2) := gt1_4_2_2 + 1;
	else if ((bcat4_2_2 < gt1_4_2_2))
		next(gt1_4_2_2) := gt1_4_2_2 - 1;
	else next(gt1_4_2_2) := gt1_4_2_2;
	if ((bcat4_2_1 > gt1_4_2_1))
		next(gt1_4_2_1) := gt1_4_2_1 + 1;
	else if ((bcat4_2_1 < gt1_4_2_1))
		next(gt1_4_2_1) := gt1_4_2_1 - 1;
	else next(gt1_4_2_1) := gt1_4_2_1;
	if (((3 - dsh1_0_3) > axin1_0_3))
		next(axin1_0_3) := axin1_0_3 + 1;
	else if ((((3 - dsh1_0_3) < axin1_0_3) & (axin1_0_3 > 0)))
		next(axin1_0_3) := axin1_0_3 - 1;
	else next(axin1_0_3) := axin1_0_3;
	if (((3 - p21_0_2_3) > wnt0_2_3))
		next(wnt0_2_3) := wnt0_2_3 + 1;
	else if (((3 - p21_0_2_3) < wnt0_2_3))
		next(wnt0_2_3) := wnt0_2_3 - 1;
	else next(wnt0_2_3) := wnt0_2_3;
	if (((3 - dsh1_0_1) > axin1_0_1))
		next(axin1_0_1) := axin1_0_1 + 1;
	else if ((((3 - dsh1_0_1) < axin1_0_1) & (axin1_0_1 > 0)))
		next(axin1_0_1) := axin1_0_1 - 1;
	else next(axin1_0_1) := axin1_0_1;
	if (((3 - p21_0_2_2) > wnt0_2_2))
		next(wnt0_2_2) := wnt0_2_2 + 1;
	else if (((3 - p21_0_2_2) < wnt0_2_2))
		next(wnt0_2_2) := wnt0_2_2 - 1;
	else next(wnt0_2_2) := wnt0_2_2;
	if (((3 - p21_0_2_1) > wnt0_2_1))
		next(wnt0_2_1) := wnt0_2_1 + 1;
	else if (((3 - p21_0_2_1) < wnt0_2_1))
		next(wnt0_2_1) := wnt0_2_1 - 1;
	else next(wnt0_2_1) := wnt0_2_1;
	if (((3 - dsh1_0_2) > axin1_0_2))
		next(axin1_0_2) := axin1_0_2 + 1;
	else if ((((3 - dsh1_0_2) < axin1_0_2) & (axin1_0_2 > 0)))
		next(axin1_0_2) := axin1_0_2 - 1;
	else next(axin1_0_2) := axin1_0_2;
	if ((frizzled2_3_0 > dsh2_3_0))
		next(dsh2_3_0) := dsh2_3_0 + 1;
	else if ((frizzled2_3_0 < dsh2_3_0))
		next(dsh2_3_0) := dsh2_3_0 - 1;
	else next(dsh2_3_0) := dsh2_3_0;
	if ((wntext3_1_0 > frizzled3_1_0))
		next(frizzled3_1_0) := frizzled3_1_0 + 1;
	else if ((wntext3_1_0 < frizzled3_1_0))
		next(frizzled3_1_0) := frizzled3_1_0 - 1;
	else next(frizzled3_1_0) := frizzled3_1_0;
	if ((wntext3_1_1 > frizzled3_1_1))
		next(frizzled3_1_1) := frizzled3_1_1 + 1;
	else if ((wntext3_1_1 < frizzled3_1_1))
		next(frizzled3_1_1) := frizzled3_1_1 - 1;
	else next(frizzled3_1_1) := frizzled3_1_1;
	if ((frizzled2_3_1 > dsh2_3_1))
		next(dsh2_3_1) := dsh2_3_1 + 1;
	else if ((frizzled2_3_1 < dsh2_3_1))
		next(dsh2_3_1) := dsh2_3_1 - 1;
	else next(dsh2_3_1) := dsh2_3_1;
	if ((wntext3_1_2 > frizzled3_1_2))
		next(frizzled3_1_2) := frizzled3_1_2 + 1;
	else if ((wntext3_1_2 < frizzled3_1_2))
		next(frizzled3_1_2) := frizzled3_1_2 - 1;
	else next(frizzled3_1_2) := frizzled3_1_2;
	if ((wntext3_1_3 > frizzled3_1_3))
		next(frizzled3_1_3) := frizzled3_1_3 + 1;
	else if ((wntext3_1_3 < frizzled3_1_3))
		next(frizzled3_1_3) := frizzled3_1_3 - 1;
	else next(frizzled3_1_3) := frizzled3_1_3;
	if (((3 - p21_0_2_0) > wnt0_2_0))
		next(wnt0_2_0) := wnt0_2_0 + 1;
	else if (((3 - p21_0_2_0) < wnt0_2_0))
		next(wnt0_2_0) := wnt0_2_0 - 1;
	else next(wnt0_2_0) := wnt0_2_0;
	if (((3 - dsh1_0_0) > axin1_0_0))
		next(axin1_0_0) := axin1_0_0 + 1;
	else if ((((3 - dsh1_0_0) < axin1_0_0) & (axin1_0_0 > 0)))
		next(axin1_0_0) := axin1_0_0 - 1;
	else next(axin1_0_0) := axin1_0_0;
	if (((3 - p21_0_0_1) > wnt0_0_1))
		next(wnt0_0_1) := wnt0_0_1 + 1;
	else if (((3 - p21_0_0_1) < wnt0_0_1))
		next(wnt0_0_1) := wnt0_0_1 - 1;
	else next(wnt0_0_1) := wnt0_0_1;
	if (((3 - p21_0_0_2) > wnt0_0_2))
		next(wnt0_0_2) := wnt0_0_2 + 1;
	else if (((3 - p21_0_0_2) < wnt0_0_2))
		next(wnt0_0_2) := wnt0_0_2 - 1;
	else next(wnt0_0_2) := wnt0_0_2;
	if (((3 - p21_0_0_0) > wnt0_0_0))
		next(wnt0_0_0) := wnt0_0_0 + 1;
	else if (((3 - p21_0_0_0) < wnt0_0_0))
		next(wnt0_0_0) := wnt0_0_0 - 1;
	else next(wnt0_0_0) := wnt0_0_0;
	if (((3 - axin0_2_2) > bcat0_2_2))
		next(bcat0_2_2) := bcat0_2_2 + 1;
	else if ((((3 - axin0_2_2) < bcat0_2_2) & (bcat0_2_2 > 0)))
		next(bcat0_2_2) := bcat0_2_2 - 1;
	else next(bcat0_2_2) := bcat0_2_2;
	if (((3 - axin0_2_3) > bcat0_2_3))
		next(bcat0_2_3) := bcat0_2_3 + 1;
	else if ((((3 - axin0_2_3) < bcat0_2_3) & (bcat0_2_3 > 0)))
		next(bcat0_2_3) := bcat0_2_3 - 1;
	else next(bcat0_2_3) := bcat0_2_3;
	if (((3 - p21_0_0_3) > wnt0_0_3))
		next(wnt0_0_3) := wnt0_0_3 + 1;
	else if (((3 - p21_0_0_3) < wnt0_0_3))
		next(wnt0_0_3) := wnt0_0_3 - 1;
	else next(wnt0_0_3) := wnt0_0_3;
	if (((3 - axin0_2_0) > bcat0_2_0))
		next(bcat0_2_0) := bcat0_2_0 + 1;
	else if ((((3 - axin0_2_0) < bcat0_2_0) & (bcat0_2_0 > 0)))
		next(bcat0_2_0) := bcat0_2_0 - 1;
	else next(bcat0_2_0) := bcat0_2_0;
	if (((3 - axin0_2_1) > bcat0_2_1))
		next(bcat0_2_1) := bcat0_2_1 + 1;
	else if ((((3 - axin0_2_1) < bcat0_2_1) & (bcat0_2_1 > 0)))
		next(bcat0_2_1) := bcat0_2_1 - 1;
	else next(bcat0_2_1) := bcat0_2_1;
	if ((notchic1_3_0 > p21_1_3_0))
		next(p21_1_3_0) := p21_1_3_0 + 1;
	else if ((notchic1_3_0 < p21_1_3_0))
		next(p21_1_3_0) := p21_1_3_0 - 1;
	else next(p21_1_3_0) := p21_1_3_0;
	if (((delta0_2_1 + delta1_3_1 + delta0_4_1 + 2 + delta0_3_0 + delta0_3_2) > (6 * deltaext0_3_1)))
		next(deltaext0_3_1) := deltaext0_3_1 + 1;
	else if (((delta0_2_1 + delta1_3_1 + delta0_4_1 + 2 + delta0_3_0 + delta0_3_2) < ((6 * deltaext0_3_1) - 5)))
		next(deltaext0_3_1) := deltaext0_3_1 - 1;
	else next(deltaext0_3_1) := deltaext0_3_1;
	if (((3 - p21_4_4_0) > wnt4_4_0))
		next(wnt4_4_0) := wnt4_4_0 + 1;
	else if (((3 - p21_4_4_0) < wnt4_4_0))
		next(wnt4_4_0) := wnt4_4_0 - 1;
	else next(wnt4_4_0) := wnt4_4_0;
	if (((delta0_2_0 + delta1_3_0 + delta0_4_0 + 2 + delta0_3_1) > (5 * deltaext0_3_0)))
		next(deltaext0_3_0) := deltaext0_3_0 + 1;
	else if (((delta0_2_0 + delta1_3_0 + delta0_4_0 + 2 + delta0_3_1) < ((5 * deltaext0_3_0) - 4)))
		next(deltaext0_3_0) := deltaext0_3_0 - 1;
	else next(deltaext0_3_0) := deltaext0_3_0;
	if ((notchic1_3_1 > p21_1_3_1))
		next(p21_1_3_1) := p21_1_3_1 + 1;
	else if ((notchic1_3_1 < p21_1_3_1))
		next(p21_1_3_1) := p21_1_3_1 - 1;
	else next(p21_1_3_1) := p21_1_3_1;
	if (((delta0_2_3 + delta1_3_3 + delta0_4_3 + 2 + delta0_3_2) > (5 * deltaext0_3_3)))
		next(deltaext0_3_3) := deltaext0_3_3 + 1;
	else if (((delta0_2_3 + delta1_3_3 + delta0_4_3 + 2 + delta0_3_2) < ((5 * deltaext0_3_3) - 4)))
		next(deltaext0_3_3) := deltaext0_3_3 - 1;
	else next(deltaext0_3_3) := deltaext0_3_3;
	if (((3 - p21_4_4_1) > wnt4_4_1))
		next(wnt4_4_1) := wnt4_4_1 + 1;
	else if (((3 - p21_4_4_1) < wnt4_4_1))
		next(wnt4_4_1) := wnt4_4_1 - 1;
	else next(wnt4_4_1) := wnt4_4_1;
	if (((3 - p21_4_4_2) > wnt4_4_2))
		next(wnt4_4_2) := wnt4_4_2 + 1;
	else if (((3 - p21_4_4_2) < wnt4_4_2))
		next(wnt4_4_2) := wnt4_4_2 - 1;
	else next(wnt4_4_2) := wnt4_4_2;
	if (((delta0_2_2 + delta1_3_2 + delta0_4_2 + 2 + delta0_3_1 + delta0_3_3) > (6 * deltaext0_3_2)))
		next(deltaext0_3_2) := deltaext0_3_2 + 1;
	else if (((delta0_2_2 + delta1_3_2 + delta0_4_2 + 2 + delta0_3_1 + delta0_3_3) < ((6 * deltaext0_3_2) - 5)))
		next(deltaext0_3_2) := deltaext0_3_2 - 1;
	else next(deltaext0_3_2) := deltaext0_3_2;
	if ((frizzled4_0_1 > dsh4_0_1))
		next(dsh4_0_1) := dsh4_0_1 + 1;
	else if ((frizzled4_0_1 < dsh4_0_1))
		next(dsh4_0_1) := dsh4_0_1 - 1;
	else next(dsh4_0_1) := dsh4_0_1;
	if ((wntext0_0_0 > frizzled0_0_0))
		next(frizzled0_0_0) := frizzled0_0_0 + 1;
	else if ((wntext0_0_0 < frizzled0_0_0))
		next(frizzled0_0_0) := frizzled0_0_0 - 1;
	else next(frizzled0_0_0) := frizzled0_0_0;
	if ((wntext0_0_1 > frizzled0_0_1))
		next(frizzled0_0_1) := frizzled0_0_1 + 1;
	else if ((wntext0_0_1 < frizzled0_0_1))
		next(frizzled0_0_1) := frizzled0_0_1 - 1;
	else next(frizzled0_0_1) := frizzled0_0_1;
	if ((frizzled4_0_2 > dsh4_0_2))
		next(dsh4_0_2) := dsh4_0_2 + 1;
	else if ((frizzled4_0_2 < dsh4_0_2))
		next(dsh4_0_2) := dsh4_0_2 - 1;
	else next(dsh4_0_2) := dsh4_0_2;
	if ((notchic1_3_2 > p21_1_3_2))
		next(p21_1_3_2) := p21_1_3_2 + 1;
	else if ((notchic1_3_2 < p21_1_3_2))
		next(p21_1_3_2) := p21_1_3_2 - 1;
	else next(p21_1_3_2) := p21_1_3_2;
	if ((wntext0_0_2 > frizzled0_0_2))
		next(frizzled0_0_2) := frizzled0_0_2 + 1;
	else if ((wntext0_0_2 < frizzled0_0_2))
		next(frizzled0_0_2) := frizzled0_0_2 - 1;
	else next(frizzled0_0_2) := frizzled0_0_2;
	if ((notchic1_3_3 > p21_1_3_3))
		next(p21_1_3_3) := p21_1_3_3 + 1;
	else if ((notchic1_3_3 < p21_1_3_3))
		next(p21_1_3_3) := p21_1_3_3 - 1;
	else next(p21_1_3_3) := p21_1_3_3;
	if ((wntext0_0_3 > frizzled0_0_3))
		next(frizzled0_0_3) := frizzled0_0_3 + 1;
	else if ((wntext0_0_3 < frizzled0_0_3))
		next(frizzled0_0_3) := frizzled0_0_3 - 1;
	else next(frizzled0_0_3) := frizzled0_0_3;
	if ((frizzled4_0_0 > dsh4_0_0))
		next(dsh4_0_0) := dsh4_0_0 + 1;
	else if ((frizzled4_0_0 < dsh4_0_0))
		next(dsh4_0_0) := dsh4_0_0 - 1;
	else next(dsh4_0_0) := dsh4_0_0;
	if (((delta3_0_1 + delta2_1_1 + delta1_0_1 + delta2_0_0 + delta2_0_2) > (5 * deltaext2_0_1)))
		next(deltaext2_0_1) := deltaext2_0_1 + 1;
	else if (((delta3_0_1 + delta2_1_1 + delta1_0_1 + delta2_0_0 + delta2_0_2) < ((5 * deltaext2_0_1) - 4)))
		next(deltaext2_0_1) := deltaext2_0_1 - 1;
	else next(deltaext2_0_1) := deltaext2_0_1;
	if (((delta3_0_2 + delta2_1_2 + delta1_0_2 + delta2_0_1 + delta2_0_3) > (5 * deltaext2_0_2)))
		next(deltaext2_0_2) := deltaext2_0_2 + 1;
	else if (((delta3_0_2 + delta2_1_2 + delta1_0_2 + delta2_0_1 + delta2_0_3) < ((5 * deltaext2_0_2) - 4)))
		next(deltaext2_0_2) := deltaext2_0_2 - 1;
	else next(deltaext2_0_2) := deltaext2_0_2;
	if (((delta3_0_3 + delta2_1_3 + delta1_0_3 + delta2_0_2) > (4 * deltaext2_0_3)))
		next(deltaext2_0_3) := deltaext2_0_3 + 1;
	else if (((delta3_0_3 + delta2_1_3 + delta1_0_3 + delta2_0_2) < ((4 * deltaext2_0_3) - 3)))
		next(deltaext2_0_3) := deltaext2_0_3 - 1;
	else next(deltaext2_0_3) := deltaext2_0_3;
	if (((2 > notchic1_1_2) & (deltaext1_1_2 > notchic1_1_2)))
		next(notchic1_1_2) := notchic1_1_2 + 1;
	else if (((2 < notchic1_1_2) | (deltaext1_1_2 < notchic1_1_2)))
		next(notchic1_1_2) := notchic1_1_2 - 1;
	else next(notchic1_1_2) := notchic1_1_2;
	if (((2 > notchic1_1_3) & (deltaext1_1_3 > notchic1_1_3)))
		next(notchic1_1_3) := notchic1_1_3 + 1;
	else if (((2 < notchic1_1_3) | (deltaext1_1_3 < notchic1_1_3)))
		next(notchic1_1_3) := notchic1_1_3 - 1;
	else next(notchic1_1_3) := notchic1_1_3;
	if (((2 > notchic1_1_0) & (deltaext1_1_0 > notchic1_1_0)))
		next(notchic1_1_0) := notchic1_1_0 + 1;
	else if (((2 < notchic1_1_0) | (deltaext1_1_0 < notchic1_1_0)))
		next(notchic1_1_0) := notchic1_1_0 - 1;
	else next(notchic1_1_0) := notchic1_1_0;
	if ((frizzled4_0_3 > dsh4_0_3))
		next(dsh4_0_3) := dsh4_0_3 + 1;
	else if ((frizzled4_0_3 < dsh4_0_3))
		next(dsh4_0_3) := dsh4_0_3 - 1;
	else next(dsh4_0_3) := dsh4_0_3;
	if (((2 > notchic1_1_1) & (deltaext1_1_1 > notchic1_1_1)))
		next(notchic1_1_1) := notchic1_1_1 + 1;
	else if (((2 < notchic1_1_1) | (deltaext1_1_1 < notchic1_1_1)))
		next(notchic1_1_1) := notchic1_1_1 - 1;
	else next(notchic1_1_1) := notchic1_1_1;
	if (((delta3_0_0 + delta2_1_0 + delta1_0_0 + delta2_0_1) > (4 * deltaext2_0_0)))
		next(deltaext2_0_0) := deltaext2_0_0 + 1;
	else if (((delta3_0_0 + delta2_1_0 + delta1_0_0 + delta2_0_1) < ((4 * deltaext2_0_0) - 3)))
		next(deltaext2_0_0) := deltaext2_0_0 - 1;
	else next(deltaext2_0_0) := deltaext2_0_0;
	if (((0 + wnt4_1_1 + wnt3_0_1 + wnt4_0_0 + wnt4_0_2) > (4 + (5 * wntext4_0_1))))
		next(wntext4_0_1) := wntext4_0_1 + 1;
	else if (((0 + wnt4_1_1 + wnt3_0_1 + wnt4_0_0 + wnt4_0_2) < (5 * wntext4_0_1)))
		next(wntext4_0_1) := wntext4_0_1 - 1;
	else next(wntext4_0_1) := wntext4_0_1;
	if (((0 + wnt4_1_0 + wnt3_0_0 + wnt4_0_1) > (3 + (4 * wntext4_0_0))))
		next(wntext4_0_0) := wntext4_0_0 + 1;
	else if (((0 + wnt4_1_0 + wnt3_0_0 + wnt4_0_1) < (4 * wntext4_0_0)))
		next(wntext4_0_0) := wntext4_0_0 - 1;
	else next(wntext4_0_0) := wntext4_0_0;
	if (((0 + wnt4_1_3 + wnt3_0_3 + wnt4_0_2) > (3 + (4 * wntext4_0_3))))
		next(wntext4_0_3) := wntext4_0_3 + 1;
	else if (((0 + wnt4_1_3 + wnt3_0_3 + wnt4_0_2) < (4 * wntext4_0_3)))
		next(wntext4_0_3) := wntext4_0_3 - 1;
	else next(wntext4_0_3) := wntext4_0_3;
	if (((gt1_3_0_1 + gt2_3_0_1) > (2 * delta3_0_1)))
		next(delta3_0_1) := delta3_0_1 + 1;
	else if (((gt1_3_0_1 + gt2_3_0_1) < ((2 * delta3_0_1) - 1)))
		next(delta3_0_1) := delta3_0_1 - 1;
	else next(delta3_0_1) := delta3_0_1;
	if (((gt1_3_0_2 + gt2_3_0_2) > (2 * delta3_0_2)))
		next(delta3_0_2) := delta3_0_2 + 1;
	else if (((gt1_3_0_2 + gt2_3_0_2) < ((2 * delta3_0_2) - 1)))
		next(delta3_0_2) := delta3_0_2 - 1;
	else next(delta3_0_2) := delta3_0_2;
	if (((0 + wnt4_1_2 + wnt3_0_2 + wnt4_0_1 + wnt4_0_3) > (4 + (5 * wntext4_0_2))))
		next(wntext4_0_2) := wntext4_0_2 + 1;
	else if (((0 + wnt4_1_2 + wnt3_0_2 + wnt4_0_1 + wnt4_0_3) < (5 * wntext4_0_2)))
		next(wntext4_0_2) := wntext4_0_2 - 1;
	else next(wntext4_0_2) := wntext4_0_2;
	if (((gt1_3_0_0 + gt2_3_0_0) > (2 * delta3_0_0)))
		next(delta3_0_0) := delta3_0_0 + 1;
	else if (((gt1_3_0_0 + gt2_3_0_0) < ((2 * delta3_0_0) - 1)))
		next(delta3_0_0) := delta3_0_0 - 1;
	else next(delta3_0_0) := delta3_0_0;
	if (((gt1_3_0_3 + gt2_3_0_3) > (2 * delta3_0_3)))
		next(delta3_0_3) := delta3_0_3 + 1;
	else if (((gt1_3_0_3 + gt2_3_0_3) < ((2 * delta3_0_3) - 1)))
		next(delta3_0_3) := delta3_0_3 - 1;
	else next(delta3_0_3) := delta3_0_3;
	if (((gt1_4_3_3 + gt2_4_3_3) > (2 * delta4_3_3)))
		next(delta4_3_3) := delta4_3_3 + 1;
	else if (((gt1_4_3_3 + gt2_4_3_3) < ((2 * delta4_3_3) - 1)))
		next(delta4_3_3) := delta4_3_3 - 1;
	else next(delta4_3_3) := delta4_3_3;
	if (((gt1_4_3_2 + gt2_4_3_2) > (2 * delta4_3_2)))
		next(delta4_3_2) := delta4_3_2 + 1;
	else if (((gt1_4_3_2 + gt2_4_3_2) < ((2 * delta4_3_2) - 1)))
		next(delta4_3_2) := delta4_3_2 - 1;
	else next(delta4_3_2) := delta4_3_2;
	if (((3 - p21_1_1_0) > wnt1_1_0))
		next(wnt1_1_0) := wnt1_1_0 + 1;
	else if (((3 - p21_1_1_0) < wnt1_1_0))
		next(wnt1_1_0) := wnt1_1_0 - 1;
	else next(wnt1_1_0) := wnt1_1_0;
	if (((gt1_4_3_1 + gt2_4_3_1) > (2 * delta4_3_1)))
		next(delta4_3_1) := delta4_3_1 + 1;
	else if (((gt1_4_3_1 + gt2_4_3_1) < ((2 * delta4_3_1) - 1)))
		next(delta4_3_1) := delta4_3_1 - 1;
	else next(delta4_3_1) := delta4_3_1;
	if (((gt1_4_3_0 + gt2_4_3_0) > (2 * delta4_3_0)))
		next(delta4_3_0) := delta4_3_0 + 1;
	else if (((gt1_4_3_0 + gt2_4_3_0) < ((2 * delta4_3_0) - 1)))
		next(delta4_3_0) := delta4_3_0 - 1;
	else next(delta4_3_0) := delta4_3_0;
	if (((3 - axin4_2_3) > bcat4_2_3))
		next(bcat4_2_3) := bcat4_2_3 + 1;
	else if ((((3 - axin4_2_3) < bcat4_2_3) & (bcat4_2_3 > 0)))
		next(bcat4_2_3) := bcat4_2_3 - 1;
	else next(bcat4_2_3) := bcat4_2_3;
	if (((3 - p21_1_1_3) > wnt1_1_3))
		next(wnt1_1_3) := wnt1_1_3 + 1;
	else if (((3 - p21_1_1_3) < wnt1_1_3))
		next(wnt1_1_3) := wnt1_1_3 - 1;
	else next(wnt1_1_3) := wnt1_1_3;
	if (((3 - axin4_2_2) > bcat4_2_2))
		next(bcat4_2_2) := bcat4_2_2 + 1;
	else if ((((3 - axin4_2_2) < bcat4_2_2) & (bcat4_2_2 > 0)))
		next(bcat4_2_2) := bcat4_2_2 - 1;
	else next(bcat4_2_2) := bcat4_2_2;
	if (((3 - axin4_2_1) > bcat4_2_1))
		next(bcat4_2_1) := bcat4_2_1 + 1;
	else if ((((3 - axin4_2_1) < bcat4_2_1) & (bcat4_2_1 > 0)))
		next(bcat4_2_1) := bcat4_2_1 - 1;
	else next(bcat4_2_1) := bcat4_2_1;
	if (((3 - p21_1_1_2) > wnt1_1_2))
		next(wnt1_1_2) := wnt1_1_2 + 1;
	else if (((3 - p21_1_1_2) < wnt1_1_2))
		next(wnt1_1_2) := wnt1_1_2 - 1;
	else next(wnt1_1_2) := wnt1_1_2;
	if (((3 - p21_1_1_1) > wnt1_1_1))
		next(wnt1_1_1) := wnt1_1_1 + 1;
	else if (((3 - p21_1_1_1) < wnt1_1_1))
		next(wnt1_1_1) := wnt1_1_1 - 1;
	else next(wnt1_1_1) := wnt1_1_1;
	if (((3 - axin4_2_0) > bcat4_2_0))
		next(bcat4_2_0) := bcat4_2_0 + 1;
	else if ((((3 - axin4_2_0) < bcat4_2_0) & (bcat4_2_0 > 0)))
		next(bcat4_2_0) := bcat4_2_0 - 1;
	else next(bcat4_2_0) := bcat4_2_0;
	if (((wnt1_0_1 + wnt0_1_1 + 3 + wnt0_0_0 + wnt0_0_2) > (4 + (5 * wntext0_0_1))))
		next(wntext0_0_1) := wntext0_0_1 + 1;
	else if (((wnt1_0_1 + wnt0_1_1 + 3 + wnt0_0_0 + wnt0_0_2) < (5 * wntext0_0_1)))
		next(wntext0_0_1) := wntext0_0_1 - 1;
	else next(wntext0_0_1) := wntext0_0_1;
	if (((wnt1_0_0 + wnt0_1_0 + 3 + wnt0_0_1) > (3 + (4 * wntext0_0_0))))
		next(wntext0_0_0) := wntext0_0_0 + 1;
	else if (((wnt1_0_0 + wnt0_1_0 + 3 + wnt0_0_1) < (4 * wntext0_0_0)))
		next(wntext0_0_0) := wntext0_0_0 - 1;
	else next(wntext0_0_0) := wntext0_0_0;
	if ((notchic2_3_3 > p21_2_3_3))
		next(p21_2_3_3) := p21_2_3_3 + 1;
	else if ((notchic2_3_3 < p21_2_3_3))
		next(p21_2_3_3) := p21_2_3_3 - 1;
	else next(p21_2_3_3) := p21_2_3_3;
	if ((notchic2_3_2 > p21_2_3_2))
		next(p21_2_3_2) := p21_2_3_2 + 1;
	else if ((notchic2_3_2 < p21_2_3_2))
		next(p21_2_3_2) := p21_2_3_2 - 1;
	else next(p21_2_3_2) := p21_2_3_2;
	if (((wnt1_0_2 + wnt0_1_2 + 3 + wnt0_0_1 + wnt0_0_3) > (4 + (5 * wntext0_0_2))))
		next(wntext0_0_2) := wntext0_0_2 + 1;
	else if (((wnt1_0_2 + wnt0_1_2 + 3 + wnt0_0_1 + wnt0_0_3) < (5 * wntext0_0_2)))
		next(wntext0_0_2) := wntext0_0_2 - 1;
	else next(wntext0_0_2) := wntext0_0_2;
	if (((wnt1_0_3 + wnt0_1_3 + 3 + wnt0_0_2) > (3 + (4 * wntext0_0_3))))
		next(wntext0_0_3) := wntext0_0_3 + 1;
	else if (((wnt1_0_3 + wnt0_1_3 + 3 + wnt0_0_2) < (4 * wntext0_0_3)))
		next(wntext0_0_3) := wntext0_0_3 - 1;
	else next(wntext0_0_3) := wntext0_0_3;
	if ((notchic2_3_1 > p21_2_3_1))
		next(p21_2_3_1) := p21_2_3_1 + 1;
	else if ((notchic2_3_1 < p21_2_3_1))
		next(p21_2_3_1) := p21_2_3_1 - 1;
	else next(p21_2_3_1) := p21_2_3_1;
	if (((gt1_1_3_3 + gt2_1_3_3) > (2 * delta1_3_3)))
		next(delta1_3_3) := delta1_3_3 + 1;
	else if (((gt1_1_3_3 + gt2_1_3_3) < ((2 * delta1_3_3) - 1)))
		next(delta1_3_3) := delta1_3_3 - 1;
	else next(delta1_3_3) := delta1_3_3;
	if ((notchic2_3_0 > p21_2_3_0))
		next(p21_2_3_0) := p21_2_3_0 + 1;
	else if ((notchic2_3_0 < p21_2_3_0))
		next(p21_2_3_0) := p21_2_3_0 - 1;
	else next(p21_2_3_0) := p21_2_3_0;
	if (((gt1_1_3_2 + gt2_1_3_2) > (2 * delta1_3_2)))
		next(delta1_3_2) := delta1_3_2 + 1;
	else if (((gt1_1_3_2 + gt2_1_3_2) < ((2 * delta1_3_2) - 1)))
		next(delta1_3_2) := delta1_3_2 - 1;
	else next(delta1_3_2) := delta1_3_2;
	if (((gt1_1_3_0 + gt2_1_3_0) > (2 * delta1_3_0)))
		next(delta1_3_0) := delta1_3_0 + 1;
	else if (((gt1_1_3_0 + gt2_1_3_0) < ((2 * delta1_3_0) - 1)))
		next(delta1_3_0) := delta1_3_0 - 1;
	else next(delta1_3_0) := delta1_3_0;
	if (((gt1_1_3_1 + gt2_1_3_1) > (2 * delta1_3_1)))
		next(delta1_3_1) := delta1_3_1 + 1;
	else if (((gt1_1_3_1 + gt2_1_3_1) < ((2 * delta1_3_1) - 1)))
		next(delta1_3_1) := delta1_3_1 - 1;
	else next(delta1_3_1) := delta1_3_1;
	if ((wntext1_3_1 > frizzled1_3_1))
		next(frizzled1_3_1) := frizzled1_3_1 + 1;
	else if ((wntext1_3_1 < frizzled1_3_1))
		next(frizzled1_3_1) := frizzled1_3_1 - 1;
	else next(frizzled1_3_1) := frizzled1_3_1;
	if ((wntext1_3_0 > frizzled1_3_0))
		next(frizzled1_3_0) := frizzled1_3_0 + 1;
	else if ((wntext1_3_0 < frizzled1_3_0))
		next(frizzled1_3_0) := frizzled1_3_0 - 1;
	else next(frizzled1_3_0) := frizzled1_3_0;
	if ((wntext1_3_3 > frizzled1_3_3))
		next(frizzled1_3_3) := frizzled1_3_3 + 1;
	else if ((wntext1_3_3 < frizzled1_3_3))
		next(frizzled1_3_3) := frizzled1_3_3 - 1;
	else next(frizzled1_3_3) := frizzled1_3_3;
	if ((wntext1_3_2 > frizzled1_3_2))
		next(frizzled1_3_2) := frizzled1_3_2 + 1;
	else if ((wntext1_3_2 < frizzled1_3_2))
		next(frizzled1_3_2) := frizzled1_3_2 - 1;
	else next(frizzled1_3_2) := frizzled1_3_2;
	if ((wntext2_0_2 > frizzled2_0_2))
		next(frizzled2_0_2) := frizzled2_0_2 + 1;
	else if ((wntext2_0_2 < frizzled2_0_2))
		next(frizzled2_0_2) := frizzled2_0_2 - 1;
	else next(frizzled2_0_2) := frizzled2_0_2;
	if ((wntext2_0_3 > frizzled2_0_3))
		next(frizzled2_0_3) := frizzled2_0_3 + 1;
	else if ((wntext2_0_3 < frizzled2_0_3))
		next(frizzled2_0_3) := frizzled2_0_3 - 1;
	else next(frizzled2_0_3) := frizzled2_0_3;
	if ((wntext2_0_0 > frizzled2_0_0))
		next(frizzled2_0_0) := frizzled2_0_0 + 1;
	else if ((wntext2_0_0 < frizzled2_0_0))
		next(frizzled2_0_0) := frizzled2_0_0 - 1;
	else next(frizzled2_0_0) := frizzled2_0_0;
	if (((wnt3_0_2 + wnt4_1_2 + wnt3_2_2 + wnt2_1_2 + wnt3_1_1 + wnt3_1_3) > (5 + (6 * wntext3_1_2))))
		next(wntext3_1_2) := wntext3_1_2 + 1;
	else if (((wnt3_0_2 + wnt4_1_2 + wnt3_2_2 + wnt2_1_2 + wnt3_1_1 + wnt3_1_3) < (6 * wntext3_1_2)))
		next(wntext3_1_2) := wntext3_1_2 - 1;
	else next(wntext3_1_2) := wntext3_1_2;
	if (((wnt3_0_3 + wnt4_1_3 + wnt3_2_3 + wnt2_1_3 + wnt3_1_2) > (4 + (5 * wntext3_1_3))))
		next(wntext3_1_3) := wntext3_1_3 + 1;
	else if (((wnt3_0_3 + wnt4_1_3 + wnt3_2_3 + wnt2_1_3 + wnt3_1_2) < (5 * wntext3_1_3)))
		next(wntext3_1_3) := wntext3_1_3 - 1;
	else next(wntext3_1_3) := wntext3_1_3;
	if ((wntext2_0_1 > frizzled2_0_1))
		next(frizzled2_0_1) := frizzled2_0_1 + 1;
	else if ((wntext2_0_1 < frizzled2_0_1))
		next(frizzled2_0_1) := frizzled2_0_1 - 1;
	else next(frizzled2_0_1) := frizzled2_0_1;
	if (((wnt3_0_0 + wnt4_1_0 + wnt3_2_0 + wnt2_1_0 + wnt3_1_1) > (4 + (5 * wntext3_1_0))))
		next(wntext3_1_0) := wntext3_1_0 + 1;
	else if (((wnt3_0_0 + wnt4_1_0 + wnt3_2_0 + wnt2_1_0 + wnt3_1_1) < (5 * wntext3_1_0)))
		next(wntext3_1_0) := wntext3_1_0 - 1;
	else next(wntext3_1_0) := wntext3_1_0;
	if (((wnt3_0_1 + wnt4_1_1 + wnt3_2_1 + wnt2_1_1 + wnt3_1_0 + wnt3_1_2) > (5 + (6 * wntext3_1_1))))
		next(wntext3_1_1) := wntext3_1_1 + 1;
	else if (((wnt3_0_1 + wnt4_1_1 + wnt3_2_1 + wnt2_1_1 + wnt3_1_0 + wnt3_1_2) < (6 * wntext3_1_1)))
		next(wntext3_1_1) := wntext3_1_1 - 1;
	else next(wntext3_1_1) := wntext3_1_1;
	if (((wnt3_2_1 + wnt4_3_1 + wnt3_4_1 + wnt2_3_1 + wnt3_3_0 + wnt3_3_2) > (5 + (6 * wntext3_3_1))))
		next(wntext3_3_1) := wntext3_3_1 + 1;
	else if (((wnt3_2_1 + wnt4_3_1 + wnt3_4_1 + wnt2_3_1 + wnt3_3_0 + wnt3_3_2) < (6 * wntext3_3_1)))
		next(wntext3_3_1) := wntext3_3_1 - 1;
	else next(wntext3_3_1) := wntext3_3_1;
	if (((wnt3_2_0 + wnt4_3_0 + wnt3_4_0 + wnt2_3_0 + wnt3_3_1) > (4 + (5 * wntext3_3_0))))
		next(wntext3_3_0) := wntext3_3_0 + 1;
	else if (((wnt3_2_0 + wnt4_3_0 + wnt3_4_0 + wnt2_3_0 + wnt3_3_1) < (5 * wntext3_3_0)))
		next(wntext3_3_0) := wntext3_3_0 - 1;
	else next(wntext3_3_0) := wntext3_3_0;
	if (((wnt3_2_3 + wnt4_3_3 + wnt3_4_3 + wnt2_3_3 + wnt3_3_2) > (4 + (5 * wntext3_3_3))))
		next(wntext3_3_3) := wntext3_3_3 + 1;
	else if (((wnt3_2_3 + wnt4_3_3 + wnt3_4_3 + wnt2_3_3 + wnt3_3_2) < (5 * wntext3_3_3)))
		next(wntext3_3_3) := wntext3_3_3 - 1;
	else next(wntext3_3_3) := wntext3_3_3;
	if (((delta4_3_3 + 2 + delta3_4_3 + delta4_4_2) > (4 * deltaext4_4_3)))
		next(deltaext4_4_3) := deltaext4_4_3 + 1;
	else if (((delta4_3_3 + 2 + delta3_4_3 + delta4_4_2) < ((4 * deltaext4_4_3) - 3)))
		next(deltaext4_4_3) := deltaext4_4_3 - 1;
	else next(deltaext4_4_3) := deltaext4_4_3;
	if (((wnt3_2_2 + wnt4_3_2 + wnt3_4_2 + wnt2_3_2 + wnt3_3_1 + wnt3_3_3) > (5 + (6 * wntext3_3_2))))
		next(wntext3_3_2) := wntext3_3_2 + 1;
	else if (((wnt3_2_2 + wnt4_3_2 + wnt3_4_2 + wnt2_3_2 + wnt3_3_1 + wnt3_3_3) < (6 * wntext3_3_2)))
		next(wntext3_3_2) := wntext3_3_2 - 1;
	else next(wntext3_3_2) := wntext3_3_2;
	if (((delta4_3_2 + 2 + delta3_4_2 + delta4_4_1 + delta4_4_3) > (5 * deltaext4_4_2)))
		next(deltaext4_4_2) := deltaext4_4_2 + 1;
	else if (((delta4_3_2 + 2 + delta3_4_2 + delta4_4_1 + delta4_4_3) < ((5 * deltaext4_4_2) - 4)))
		next(deltaext4_4_2) := deltaext4_4_2 - 1;
	else next(deltaext4_4_2) := deltaext4_4_2;
	if ((wntext4_0_1 > frizzled4_0_1))
		next(frizzled4_0_1) := frizzled4_0_1 + 1;
	else if ((wntext4_0_1 < frizzled4_0_1))
		next(frizzled4_0_1) := frizzled4_0_1 - 1;
	else next(frizzled4_0_1) := frizzled4_0_1;
	if ((wntext4_0_0 > frizzled4_0_0))
		next(frizzled4_0_0) := frizzled4_0_0 + 1;
	else if ((wntext4_0_0 < frizzled4_0_0))
		next(frizzled4_0_0) := frizzled4_0_0 - 1;
	else next(frizzled4_0_0) := frizzled4_0_0;
	if (((delta4_3_1 + 2 + delta3_4_1 + delta4_4_0 + delta4_4_2) > (5 * deltaext4_4_1)))
		next(deltaext4_4_1) := deltaext4_4_1 + 1;
	else if (((delta4_3_1 + 2 + delta3_4_1 + delta4_4_0 + delta4_4_2) < ((5 * deltaext4_4_1) - 4)))
		next(deltaext4_4_1) := deltaext4_4_1 - 1;
	else next(deltaext4_4_1) := deltaext4_4_1;
	if ((wntext4_0_3 > frizzled4_0_3))
		next(frizzled4_0_3) := frizzled4_0_3 + 1;
	else if ((wntext4_0_3 < frizzled4_0_3))
		next(frizzled4_0_3) := frizzled4_0_3 - 1;
	else next(frizzled4_0_3) := frizzled4_0_3;
	if (((delta4_3_0 + 2 + delta3_4_0 + delta4_4_1) > (4 * deltaext4_4_0)))
		next(deltaext4_4_0) := deltaext4_4_0 + 1;
	else if (((delta4_3_0 + 2 + delta3_4_0 + delta4_4_1) < ((4 * deltaext4_4_0) - 3)))
		next(deltaext4_4_0) := deltaext4_4_0 - 1;
	else next(deltaext4_4_0) := deltaext4_4_0;
	if ((wntext4_0_2 > frizzled4_0_2))
		next(frizzled4_0_2) := frizzled4_0_2 + 1;
	else if ((wntext4_0_2 < frizzled4_0_2))
		next(frizzled4_0_2) := frizzled4_0_2 - 1;
	else next(frizzled4_0_2) := frizzled4_0_2;
	if ((wntext2_2_0 > frizzled2_2_0))
		next(frizzled2_2_0) := frizzled2_2_0 + 1;
	else if ((wntext2_2_0 < frizzled2_2_0))
		next(frizzled2_2_0) := frizzled2_2_0 - 1;
	else next(frizzled2_2_0) := frizzled2_2_0;
	if ((wntext2_2_1 > frizzled2_2_1))
		next(frizzled2_2_1) := frizzled2_2_1 + 1;
	else if ((wntext2_2_1 < frizzled2_2_1))
		next(frizzled2_2_1) := frizzled2_2_1 - 1;
	else next(frizzled2_2_1) := frizzled2_2_1;
	if ((wntext2_2_2 > frizzled2_2_2))
		next(frizzled2_2_2) := frizzled2_2_2 + 1;
	else if ((wntext2_2_2 < frizzled2_2_2))
		next(frizzled2_2_2) := frizzled2_2_2 - 1;
	else next(frizzled2_2_2) := frizzled2_2_2;
	if ((wntext2_2_3 > frizzled2_2_3))
		next(frizzled2_2_3) := frizzled2_2_3 + 1;
	else if ((wntext2_2_3 < frizzled2_2_3))
		next(frizzled2_2_3) := frizzled2_2_3 - 1;
	else next(frizzled2_2_3) := frizzled2_2_3;
	if ((wntext2_4_3 > frizzled2_4_3))
		next(frizzled2_4_3) := frizzled2_4_3 + 1;
	else if ((wntext2_4_3 < frizzled2_4_3))
		next(frizzled2_4_3) := frizzled2_4_3 - 1;
	else next(frizzled2_4_3) := frizzled2_4_3;
	if ((wntext2_4_2 > frizzled2_4_2))
		next(frizzled2_4_2) := frizzled2_4_2 + 1;
	else if ((wntext2_4_2 < frizzled2_4_2))
		next(frizzled2_4_2) := frizzled2_4_2 - 1;
	else next(frizzled2_4_2) := frizzled2_4_2;
	if ((frizzled2_3_2 > dsh2_3_2))
		next(dsh2_3_2) := dsh2_3_2 + 1;
	else if ((frizzled2_3_2 < dsh2_3_2))
		next(dsh2_3_2) := dsh2_3_2 - 1;
	else next(dsh2_3_2) := dsh2_3_2;
	if ((frizzled2_3_3 > dsh2_3_3))
		next(dsh2_3_3) := dsh2_3_3 + 1;
	else if ((frizzled2_3_3 < dsh2_3_3))
		next(dsh2_3_3) := dsh2_3_3 - 1;
	else next(dsh2_3_3) := dsh2_3_3;
	if ((wntext2_4_1 > frizzled2_4_1))
		next(frizzled2_4_1) := frizzled2_4_1 + 1;
	else if ((wntext2_4_1 < frizzled2_4_1))
		next(frizzled2_4_1) := frizzled2_4_1 - 1;
	else next(frizzled2_4_1) := frizzled2_4_1;
	if ((wntext2_4_0 > frizzled2_4_0))
		next(frizzled2_4_0) := frizzled2_4_0 + 1;
	else if ((wntext2_4_0 < frizzled2_4_0))
		next(frizzled2_4_0) := frizzled2_4_0 - 1;
	else next(frizzled2_4_0) := frizzled2_4_0;
	if (((3 > notchic2_2_2) & (deltaext2_2_2 > notchic2_2_2)))
		next(notchic2_2_2) := notchic2_2_2 + 1;
	else if (((3 < notchic2_2_2) | (deltaext2_2_2 < notchic2_2_2)))
		next(notchic2_2_2) := notchic2_2_2 - 1;
	else next(notchic2_2_2) := notchic2_2_2;
	if (((3 > notchic2_2_3) & (deltaext2_2_3 > notchic2_2_3)))
		next(notchic2_2_3) := notchic2_2_3 + 1;
	else if (((3 < notchic2_2_3) | (deltaext2_2_3 < notchic2_2_3)))
		next(notchic2_2_3) := notchic2_2_3 - 1;
	else next(notchic2_2_3) := notchic2_2_3;
	if (((3 > notchic2_2_0) & (deltaext2_2_0 > notchic2_2_0)))
		next(notchic2_2_0) := notchic2_2_0 + 1;
	else if (((3 < notchic2_2_0) | (deltaext2_2_0 < notchic2_2_0)))
		next(notchic2_2_0) := notchic2_2_0 - 1;
	else next(notchic2_2_0) := notchic2_2_0;
	if (((3 > notchic2_2_1) & (deltaext2_2_1 > notchic2_2_1)))
		next(notchic2_2_1) := notchic2_2_1 + 1;
	else if (((3 < notchic2_2_1) | (deltaext2_2_1 < notchic2_2_1)))
		next(notchic2_2_1) := notchic2_2_1 - 1;
	else next(notchic2_2_1) := notchic2_2_1;

-- Exists unique (
 --   k0, k1, k2, k3, k4, 
 --   k5, k6, k7, k8, k9, 
 --   k10, k11, k12, k13, k14, 
 --   k15, k16, k17, k18, k19, 
 --   k20, k21, k22, k23, k24, 
 --   k25, k26, k27, k28, k29, 
 --   k30, k31, k32, k33, k34, 
 --   k35, k36, k37, k38, k39, 
 --   k40, k41, k42, k43, k44, 
 --   k45, k46, k47, k48, k49, 
 --   k50, k51, k52, k53, k54, 
 --   k55, k56, k57, k58, k59, 
 --   k60, k61, k62, k63, k64, 
 --   k65, k66, k67, k68, k69, 
 --   k70, k71, k72, k73, k74, 
 --   k75, k76, k77, k78, k79, 
 --   k80, k81, k82, k83, k84, 
 --   k85, k86, k87, k88, k89, 
 --   k90, k91, k92, k93, k94, 
 --   k95, k96, k97, k98, k99, 
 --   k100, k101, k102, k103, k104, 
 --   k105, k106, k107, k108, k109, 
 --   k110, k111, k112, k113, k114, 
 --   k115, k116, k117, k118, k119, 
 --   k120, k121, k122, k123, k124, 
 --   k125, k126, k127, k128, k129, 
 --   k130, k131, k132, k133, k134, 
 --   k135, k136, k137, k138, k139, 
 --   k140, k141, k142, k143, k144, 
 --   k145, k146, k147, k148, k149, 
 --   k150, k151, k152, k153, k154, 
 --   k155, k156, k157, k158, k159, 
 --   k160, k161, k162, k163, k164, 
 --   k165, k166, k167, k168, k169, 
 --   k170, k171, k172, k173, k174, 
 --   k175, k176, k177, k178, k179, 
 --   k180, k181, k182, k183, k184, 
 --   k185, k186, k187, k188, k189, 
 --   k190, k191, k192, k193, k194, 
 --   k195, k196, k197, k198, k199, 
 --   k200, k201, k202, k203, k204, 
 --   k205, k206, k207, k208, k209, 
 --   k210, k211, k212, k213, k214, 
 --   k215, k216, k217, k218, k219, 
 --   k220, k221, k222, k223, k224, 
 --   k225, k226, k227, k228, k229, 
 --   k230, k231, k232, k233, k234, 
 --   k235, k236, k237, k238, k239, 
 --   k240, k241, k242, k243, k244, 
 --   k245, k246, k247, k248, k249, 
 --   k250, k251, k252, k253, k254, 
 --   k255, k256, k257, k258, k259, 
 --   k260, k261, k262, k263, k264, 
 --   k265, k266, k267, k268, k269, 
 --   k270, k271, k272, k273, k274, 
 --   k275, k276, k277, k278, k279, 
 --   k280, k281, k282, k283, k284, 
 --   k285, k286, k287, k288, k289, 
 --   k290, k291, k292, k293, k294, 
 --   k295, k296, k297, k298, k299, 
 --   k300, k301, k302, k303, k304, 
 --   k305, k306, k307, k308, k309, 
 --   k310, k311, k312, k313, k314, 
 --   k315, k316, k317, k318, k319, 
 --   k320, k321, k322, k323, k324, 
 --   k325, k326, k327, k328, k329, 
 --   k330, k331, k332, k333, k334, 
 --   k335, k336, k337, k338, k339, 
 --   k340, k341, k342, k343, k344, 
 --   k345, k346, k347, k348, k349, 
 --   k350, k351, k352, k353, k354, 
 --   k355, k356, k357, k358, k359, 
 --   k360, k361, k362, k363, k364, 
 --   k365, k366, k367, k368, k369, 
 --   k370, k371, k372, k373, k374, 
 --   k375, k376, k377, k378, k379, 
 --   k380, k381, k382, k383, k384, 
 --   k385, k386, k387, k388, k389, 
 --   k390, k391, k392, k393, k394, 
 --   k395, k396, k397, k398, k399, 
 --   k400, k401, k402, k403, k404, 
 --   k405, k406, k407, k408, k409, 
 --   k410, k411, k412, k413, k414, 
 --   k415, k416, k417, k418, k419, 
 --   k420, k421, k422, k423, k424, 
 --   k425, k426, k427, k428, k429, 
 --   k430, k431, k432, k433, k434, 
 --   k435, k436, k437, k438, k439, 
 --   k440, k441, k442, k443, k444, 
 --   k445, k446, k447, k448, k449, 
 --   k450, k451, k452, k453, k454, 
 --   k455, k456, k457, k458, k459, 
 --   k460, k461, k462, k463, k464, 
 --   k465, k466, k467, k468, k469, 
 --   k470, k471, k472, k473, k474, 
 --   k475, k476, k477, k478, k479, 
 --   k480, k481, k482, k483, k484, 
 --   k485, k486, k487, k488, k489, 
 --   k490, k491, k492, k493, k494, 
 --   k495, k496, k497, k498, k499, 
 --   k500, k501, k502, k503, k504, 
 --   k505, k506, k507, k508, k509, 
 --   k510, k511, k512, k513, k514, 
 --   k515, k516, k517, k518, k519, 
 --   k520, k521, k522, k523, k524, 
 --   k525, k526, k527, k528, k529, 
 --   k530, k531, k532, k533, k534, 
 --   k535, k536, k537, k538, k539, 
 --   k540, k541, k542, k543, k544, 
 --   k545, k546, k547, k548, k549, 
 --   k550, k551, k552, k553, k554, 
 --   k555, k556, k557, k558, k559, 
 --   k560, k561, k562, k563, k564, 
 --   k565, k566, k567, k568, k569, 
 --   k570, k571, k572, k573, k574, 
 --   k575, k576, k577, k578, k579, 
 --   k580, k581, k582, k583, k584, 
 --   k585, k586, k587, k588, k589, 
 --   k590, k591, k592, k593, k594, 
 --   k595, k596, k597, k598, k599, 
 --   k600, k601, k602, k603, k604, 
 --   k605, k606, k607, k608, k609, 
 --   k610, k611, k612, k613, k614, 
 --   k615, k616, k617, k618, k619, 
 --   k620, k621, k622, k623, k624, 
 --   k625, k626, k627, k628, k629, 
 --   k630, k631, k632, k633, k634, 
 --   k635, k636, k637, k638, k639, 
 --   k640, k641, k642, k643, k644, 
 --   k645, k646, k647, k648, k649, 
 --   k650, k651, k652, k653, k654, 
 --   k655, k656, k657, k658, k659, 
 --   k660, k661, k662, k663, k664, 
 --   k665, k666, k667, k668, k669, 
 --   k670, k671, k672, k673, k674, 
 --   k675, k676, k677, k678, k679, 
 --   k680, k681, k682, k683, k684, 
 --   k685, k686, k687, k688, k689, 
 --   k690, k691, k692, k693, k694, 
 --   k695, k696, k697, k698, k699, 
 --   k700, k701, k702, k703, k704, 
 --   k705, k706, k707, k708, k709, 
 --   k710, k711, k712, k713, k714, 
 --   k715, k716, k717, k718, k719, 
 --   k720, k721, k722, k723, k724, 
 --   k725, k726, k727, k728, k729, 
 --   k730, k731, k732, k733, k734, 
 --   k735, k736, k737, k738, k739, 
 --   k740, k741, k742, k743, k744, 
 --   k745, k746, k747, k748, k749, 
 --   k750, k751, k752, k753, k754, 
 --   k755, k756, k757, k758, k759, 
 --   k760, k761, k762, k763, k764, 
 --   k765, k766, k767, k768, k769, 
 --   k770, k771, k772, k773, k774, 
 --   k775, k776, k777, k778, k779, 
 --   k780, k781, k782, k783, k784, 
 --   k785, k786, k787, k788, k789, 
 --   k790, k791, k792, k793, k794, 
 --   k795, k796, k797, k798, k799, 
 --   k800, k801, k802, k803, k804, 
 --   k805, k806, k807, k808, k809, 
 --   k810, k811, k812, k813, k814, 
 --   k815, k816, k817, k818, k819, 
 --   k820, k821, k822, k823, k824, 
 --   k825, k826, k827, k828, k829, 
 --   k830, k831, k832, k833, k834, 
 --   k835, k836, k837, k838, k839, 
 --   k840, k841, k842, k843, k844, 
 --   k845, k846, k847, k848, k849, 
 --   k850, k851, k852, k853, k854, 
 --   k855, k856, k857, k858, k859, 
 --   k860, k861, k862, k863, k864, 
 --   k865, k866, k867, k868, k869, 
 --   k870, k871, k872, k873, k874, 
 --   k875, k876, k877, k878, k879, 
 --   k880, k881, k882, k883, k884, 
 --   k885, k886, k887, k888, k889, 
 --   k890, k891, k892, k893, k894, 
 --   k895, k896, k897, k898, k899, 
 --   k900, k901, k902, k903, k904, 
 --   k905, k906, k907, k908, k909, 
 --   k910, k911, k912, k913, k914, 
 --   k915, k916, k917, k918, k919, 
 --   k920, k921, k922, k923, k924, 
 --   k925, k926, k927, k928, k929, 
 --   k930, k931, k932, k933, k934, 
 --   k935, k936, k937, k938, k939, 
 --   k940, k941, k942, k943, k944, 
 --   k945, k946, k947, k948, k949, 
 --   k950, k951, k952, k953, k954, 
 --   k955, k956, k957, k958, k959, 
 --   k960, k961, k962, k963, k964, 
 --   k965, k966, k967, k968, k969, 
 --   k970, k971, k972, k973, k974, 
 --   k975, k976, k977, k978, k979, 
 --   k980, k981, k982, k983, k984, 
 --   k985, k986, k987, k988, k989, 
 --   k990, k991, k992, k993, k994, 
 --   k995, k996, k997, k998, k999, 
 --   k1000, k1001, k1002, k1003, k1004, 
 --   k1005, k1006, k1007, k1008, k1009, 
 --   k1010, k1011, k1012, k1013, k1014, 
 --   k1015, k1016, k1017, k1018, k1019, 
 --   k1020, k1021, k1022, k1023, k1024, 
 --   k1025, k1026, k1027, k1028, k1029, 
 --   k1030, k1031, k1032, k1033, k1034, 
 --   k1035, k1036, k1037, k1038, k1039, 
 --   k1040, k1041, k1042, k1043, k1044, 
 --   k1045, k1046, k1047, k1048, k1049, 
 --   k1050, k1051, k1052, k1053, k1054, 
 --   k1055, k1056, k1057, k1058, k1059, 
 --   k1060, k1061, k1062, k1063, k1064, 
 --   k1065, k1066, k1067, k1068, k1069, 
 --   k1070, k1071, k1072, k1073, k1074, 
 --   k1075, k1076, k1077, k1078, k1079, 
 --   k1080, k1081, k1082, k1083, k1084, 
 --   k1085, k1086, k1087, k1088, k1089, 
 --   k1090, k1091, k1092, k1093, k1094, 
 --   k1095, k1096, k1097, k1098, k1099, 
 --   k1100, k1101, k1102, k1103, k1104, 
 --   k1105, k1106, k1107, k1108, k1109, 
 --   k1110, k1111, k1112, k1113, k1114, 
 --   k1115, k1116, k1117, k1118, k1119, 
 --   k1120, k1121, k1122, k1123, k1124, 
 --   k1125, k1126, k1127, k1128, k1129, 
 --   k1130, k1131, k1132, k1133, k1134, 
 --   k1135, k1136, k1137, k1138, k1139, 
 --   k1140, k1141, k1142, k1143, k1144, 
 --   k1145, k1146, k1147, k1148, k1149, 
 --   k1150, k1151, k1152, k1153, k1154, 
 --   k1155, k1156, k1157, k1158, k1159, 
 --   k1160, k1161, k1162, k1163, k1164, 
 --   k1165, k1166, k1167, k1168, k1169, 
 --   k1170, k1171, k1172, k1173, k1174, 
 --   k1175, k1176, k1177, k1178, k1179, 
 --   k1180, k1181, k1182, k1183, k1184, 
 --   k1185, k1186, k1187, k1188, k1189, 
 --   k1190, k1191, k1192, k1193, k1194, 
 --   k1195, k1196, k1197, k1198, k1199
 -- ) such that 
 -- 
 --      F G(wntext0_0_0 = k0)
 --    & F G(frizzled0_0_0 = k1)
 --    & F G(dsh0_0_0 = k2)
 --    & F G(axin0_0_0 = k3)
 --    & F G(bcat0_0_0 = k4)
 --    & F G(gt1_0_0_0 = k5)
 --    & F G(gt2_0_0_0 = k6)
 --    & F G(delta0_0_0 = k7)
 --    & F G(deltaext0_0_0 = k8)
 --    & F G(notchic0_0_0 = k9)
 --    & F G(p21_0_0_0 = k10)
 --    & F G(wnt0_0_0 = k11)
 --    & F G(wntext1_0_0 = k12)
 --    & F G(frizzled1_0_0 = k13)
 --    & F G(dsh1_0_0 = k14)
 --    & F G(axin1_0_0 = k15)
 --    & F G(bcat1_0_0 = k16)
 --    & F G(gt1_1_0_0 = k17)
 --    & F G(gt2_1_0_0 = k18)
 --    & F G(delta1_0_0 = k19)
 --    & F G(deltaext1_0_0 = k20)
 --    & F G(notchic1_0_0 = k21)
 --    & F G(p21_1_0_0 = k22)
 --    & F G(wnt1_0_0 = k23)
 --    & F G(wntext2_0_0 = k24)
 --    & F G(frizzled2_0_0 = k25)
 --    & F G(dsh2_0_0 = k26)
 --    & F G(axin2_0_0 = k27)
 --    & F G(bcat2_0_0 = k28)
 --    & F G(gt1_2_0_0 = k29)
 --    & F G(gt2_2_0_0 = k30)
 --    & F G(delta2_0_0 = k31)
 --    & F G(deltaext2_0_0 = k32)
 --    & F G(notchic2_0_0 = k33)
 --    & F G(p21_2_0_0 = k34)
 --    & F G(wnt2_0_0 = k35)
 --    & F G(wntext3_0_0 = k36)
 --    & F G(frizzled3_0_0 = k37)
 --    & F G(dsh3_0_0 = k38)
 --    & F G(axin3_0_0 = k39)
 --    & F G(bcat3_0_0 = k40)
 --    & F G(gt1_3_0_0 = k41)
 --    & F G(gt2_3_0_0 = k42)
 --    & F G(delta3_0_0 = k43)
 --    & F G(deltaext3_0_0 = k44)
 --    & F G(notchic3_0_0 = k45)
 --    & F G(p21_3_0_0 = k46)
 --    & F G(wnt3_0_0 = k47)
 --    & F G(wntext4_0_0 = k48)
 --    & F G(frizzled4_0_0 = k49)
 --    & F G(dsh4_0_0 = k50)
 --    & F G(axin4_0_0 = k51)
 --    & F G(bcat4_0_0 = k52)
 --    & F G(gt1_4_0_0 = k53)
 --    & F G(gt2_4_0_0 = k54)
 --    & F G(delta4_0_0 = k55)
 --    & F G(deltaext4_0_0 = k56)
 --    & F G(notchic4_0_0 = k57)
 --    & F G(p21_4_0_0 = k58)
 --    & F G(wnt4_0_0 = k59)
 --    & F G(wntext0_1_0 = k60)
 --    & F G(frizzled0_1_0 = k61)
 --    & F G(dsh0_1_0 = k62)
 --    & F G(axin0_1_0 = k63)
 --    & F G(bcat0_1_0 = k64)
 --    & F G(gt1_0_1_0 = k65)
 --    & F G(gt2_0_1_0 = k66)
 --    & F G(delta0_1_0 = k67)
 --    & F G(deltaext0_1_0 = k68)
 --    & F G(notchic0_1_0 = k69)
 --    & F G(p21_0_1_0 = k70)
 --    & F G(wnt0_1_0 = k71)
 --    & F G(wntext1_1_0 = k72)
 --    & F G(frizzled1_1_0 = k73)
 --    & F G(dsh1_1_0 = k74)
 --    & F G(axin1_1_0 = k75)
 --    & F G(bcat1_1_0 = k76)
 --    & F G(gt1_1_1_0 = k77)
 --    & F G(gt2_1_1_0 = k78)
 --    & F G(delta1_1_0 = k79)
 --    & F G(deltaext1_1_0 = k80)
 --    & F G(notchic1_1_0 = k81)
 --    & F G(p21_1_1_0 = k82)
 --    & F G(wnt1_1_0 = k83)
 --    & F G(wntext2_1_0 = k84)
 --    & F G(frizzled2_1_0 = k85)
 --    & F G(dsh2_1_0 = k86)
 --    & F G(axin2_1_0 = k87)
 --    & F G(bcat2_1_0 = k88)
 --    & F G(gt1_2_1_0 = k89)
 --    & F G(gt2_2_1_0 = k90)
 --    & F G(delta2_1_0 = k91)
 --    & F G(deltaext2_1_0 = k92)
 --    & F G(notchic2_1_0 = k93)
 --    & F G(p21_2_1_0 = k94)
 --    & F G(wnt2_1_0 = k95)
 --    & F G(wntext3_1_0 = k96)
 --    & F G(frizzled3_1_0 = k97)
 --    & F G(dsh3_1_0 = k98)
 --    & F G(axin3_1_0 = k99)
 --    & F G(bcat3_1_0 = k100)
 --    & F G(gt1_3_1_0 = k101)
 --    & F G(gt2_3_1_0 = k102)
 --    & F G(delta3_1_0 = k103)
 --    & F G(deltaext3_1_0 = k104)
 --    & F G(notchic3_1_0 = k105)
 --    & F G(p21_3_1_0 = k106)
 --    & F G(wnt3_1_0 = k107)
 --    & F G(wntext4_1_0 = k108)
 --    & F G(frizzled4_1_0 = k109)
 --    & F G(dsh4_1_0 = k110)
 --    & F G(axin4_1_0 = k111)
 --    & F G(bcat4_1_0 = k112)
 --    & F G(gt1_4_1_0 = k113)
 --    & F G(gt2_4_1_0 = k114)
 --    & F G(delta4_1_0 = k115)
 --    & F G(deltaext4_1_0 = k116)
 --    & F G(notchic4_1_0 = k117)
 --    & F G(p21_4_1_0 = k118)
 --    & F G(wnt4_1_0 = k119)
 --    & F G(wntext0_2_0 = k120)
 --    & F G(frizzled0_2_0 = k121)
 --    & F G(dsh0_2_0 = k122)
 --    & F G(axin0_2_0 = k123)
 --    & F G(bcat0_2_0 = k124)
 --    & F G(gt1_0_2_0 = k125)
 --    & F G(gt2_0_2_0 = k126)
 --    & F G(delta0_2_0 = k127)
 --    & F G(deltaext0_2_0 = k128)
 --    & F G(notchic0_2_0 = k129)
 --    & F G(p21_0_2_0 = k130)
 --    & F G(wnt0_2_0 = k131)
 --    & F G(wntext1_2_0 = k132)
 --    & F G(frizzled1_2_0 = k133)
 --    & F G(dsh1_2_0 = k134)
 --    & F G(axin1_2_0 = k135)
 --    & F G(bcat1_2_0 = k136)
 --    & F G(gt1_1_2_0 = k137)
 --    & F G(gt2_1_2_0 = k138)
 --    & F G(delta1_2_0 = k139)
 --    & F G(deltaext1_2_0 = k140)
 --    & F G(notchic1_2_0 = k141)
 --    & F G(p21_1_2_0 = k142)
 --    & F G(wnt1_2_0 = k143)
 --    & F G(wntext2_2_0 = k144)
 --    & F G(frizzled2_2_0 = k145)
 --    & F G(dsh2_2_0 = k146)
 --    & F G(axin2_2_0 = k147)
 --    & F G(bcat2_2_0 = k148)
 --    & F G(gt1_2_2_0 = k149)
 --    & F G(gt2_2_2_0 = k150)
 --    & F G(delta2_2_0 = k151)
 --    & F G(deltaext2_2_0 = k152)
 --    & F G(notchic2_2_0 = k153)
 --    & F G(p21_2_2_0 = k154)
 --    & F G(wnt2_2_0 = k155)
 --    & F G(wntext3_2_0 = k156)
 --    & F G(frizzled3_2_0 = k157)
 --    & F G(dsh3_2_0 = k158)
 --    & F G(axin3_2_0 = k159)
 --    & F G(bcat3_2_0 = k160)
 --    & F G(gt1_3_2_0 = k161)
 --    & F G(gt2_3_2_0 = k162)
 --    & F G(delta3_2_0 = k163)
 --    & F G(deltaext3_2_0 = k164)
 --    & F G(notchic3_2_0 = k165)
 --    & F G(p21_3_2_0 = k166)
 --    & F G(wnt3_2_0 = k167)
 --    & F G(wntext4_2_0 = k168)
 --    & F G(frizzled4_2_0 = k169)
 --    & F G(dsh4_2_0 = k170)
 --    & F G(axin4_2_0 = k171)
 --    & F G(bcat4_2_0 = k172)
 --    & F G(gt1_4_2_0 = k173)
 --    & F G(gt2_4_2_0 = k174)
 --    & F G(delta4_2_0 = k175)
 --    & F G(deltaext4_2_0 = k176)
 --    & F G(notchic4_2_0 = k177)
 --    & F G(p21_4_2_0 = k178)
 --    & F G(wnt4_2_0 = k179)
 --    & F G(wntext0_3_0 = k180)
 --    & F G(frizzled0_3_0 = k181)
 --    & F G(dsh0_3_0 = k182)
 --    & F G(axin0_3_0 = k183)
 --    & F G(bcat0_3_0 = k184)
 --    & F G(gt1_0_3_0 = k185)
 --    & F G(gt2_0_3_0 = k186)
 --    & F G(delta0_3_0 = k187)
 --    & F G(deltaext0_3_0 = k188)
 --    & F G(notchic0_3_0 = k189)
 --    & F G(p21_0_3_0 = k190)
 --    & F G(wnt0_3_0 = k191)
 --    & F G(wntext1_3_0 = k192)
 --    & F G(frizzled1_3_0 = k193)
 --    & F G(dsh1_3_0 = k194)
 --    & F G(axin1_3_0 = k195)
 --    & F G(bcat1_3_0 = k196)
 --    & F G(gt1_1_3_0 = k197)
 --    & F G(gt2_1_3_0 = k198)
 --    & F G(delta1_3_0 = k199)
 --    & F G(deltaext1_3_0 = k200)
 --    & F G(notchic1_3_0 = k201)
 --    & F G(p21_1_3_0 = k202)
 --    & F G(wnt1_3_0 = k203)
 --    & F G(wntext2_3_0 = k204)
 --    & F G(frizzled2_3_0 = k205)
 --    & F G(dsh2_3_0 = k206)
 --    & F G(axin2_3_0 = k207)
 --    & F G(bcat2_3_0 = k208)
 --    & F G(gt1_2_3_0 = k209)
 --    & F G(gt2_2_3_0 = k210)
 --    & F G(delta2_3_0 = k211)
 --    & F G(deltaext2_3_0 = k212)
 --    & F G(notchic2_3_0 = k213)
 --    & F G(p21_2_3_0 = k214)
 --    & F G(wnt2_3_0 = k215)
 --    & F G(wntext3_3_0 = k216)
 --    & F G(frizzled3_3_0 = k217)
 --    & F G(dsh3_3_0 = k218)
 --    & F G(axin3_3_0 = k219)
 --    & F G(bcat3_3_0 = k220)
 --    & F G(gt1_3_3_0 = k221)
 --    & F G(gt2_3_3_0 = k222)
 --    & F G(delta3_3_0 = k223)
 --    & F G(deltaext3_3_0 = k224)
 --    & F G(notchic3_3_0 = k225)
 --    & F G(p21_3_3_0 = k226)
 --    & F G(wnt3_3_0 = k227)
 --    & F G(wntext4_3_0 = k228)
 --    & F G(frizzled4_3_0 = k229)
 --    & F G(dsh4_3_0 = k230)
 --    & F G(axin4_3_0 = k231)
 --    & F G(bcat4_3_0 = k232)
 --    & F G(gt1_4_3_0 = k233)
 --    & F G(gt2_4_3_0 = k234)
 --    & F G(delta4_3_0 = k235)
 --    & F G(deltaext4_3_0 = k236)
 --    & F G(notchic4_3_0 = k237)
 --    & F G(p21_4_3_0 = k238)
 --    & F G(wnt4_3_0 = k239)
 --    & F G(wntext0_4_0 = k240)
 --    & F G(frizzled0_4_0 = k241)
 --    & F G(dsh0_4_0 = k242)
 --    & F G(axin0_4_0 = k243)
 --    & F G(bcat0_4_0 = k244)
 --    & F G(gt1_0_4_0 = k245)
 --    & F G(gt2_0_4_0 = k246)
 --    & F G(delta0_4_0 = k247)
 --    & F G(deltaext0_4_0 = k248)
 --    & F G(notchic0_4_0 = k249)
 --    & F G(p21_0_4_0 = k250)
 --    & F G(wnt0_4_0 = k251)
 --    & F G(wntext1_4_0 = k252)
 --    & F G(frizzled1_4_0 = k253)
 --    & F G(dsh1_4_0 = k254)
 --    & F G(axin1_4_0 = k255)
 --    & F G(bcat1_4_0 = k256)
 --    & F G(gt1_1_4_0 = k257)
 --    & F G(gt2_1_4_0 = k258)
 --    & F G(delta1_4_0 = k259)
 --    & F G(deltaext1_4_0 = k260)
 --    & F G(notchic1_4_0 = k261)
 --    & F G(p21_1_4_0 = k262)
 --    & F G(wnt1_4_0 = k263)
 --    & F G(wntext2_4_0 = k264)
 --    & F G(frizzled2_4_0 = k265)
 --    & F G(dsh2_4_0 = k266)
 --    & F G(axin2_4_0 = k267)
 --    & F G(bcat2_4_0 = k268)
 --    & F G(gt1_2_4_0 = k269)
 --    & F G(gt2_2_4_0 = k270)
 --    & F G(delta2_4_0 = k271)
 --    & F G(deltaext2_4_0 = k272)
 --    & F G(notchic2_4_0 = k273)
 --    & F G(p21_2_4_0 = k274)
 --    & F G(wnt2_4_0 = k275)
 --    & F G(wntext3_4_0 = k276)
 --    & F G(frizzled3_4_0 = k277)
 --    & F G(dsh3_4_0 = k278)
 --    & F G(axin3_4_0 = k279)
 --    & F G(bcat3_4_0 = k280)
 --    & F G(gt1_3_4_0 = k281)
 --    & F G(gt2_3_4_0 = k282)
 --    & F G(delta3_4_0 = k283)
 --    & F G(deltaext3_4_0 = k284)
 --    & F G(notchic3_4_0 = k285)
 --    & F G(p21_3_4_0 = k286)
 --    & F G(wnt3_4_0 = k287)
 --    & F G(wntext4_4_0 = k288)
 --    & F G(frizzled4_4_0 = k289)
 --    & F G(dsh4_4_0 = k290)
 --    & F G(axin4_4_0 = k291)
 --    & F G(bcat4_4_0 = k292)
 --    & F G(gt1_4_4_0 = k293)
 --    & F G(gt2_4_4_0 = k294)
 --    & F G(delta4_4_0 = k295)
 --    & F G(deltaext4_4_0 = k296)
 --    & F G(notchic4_4_0 = k297)
 --    & F G(p21_4_4_0 = k298)
 --    & F G(wnt4_4_0 = k299)
 --    & F G(wntext0_0_1 = k300)
 --    & F G(frizzled0_0_1 = k301)
 --    & F G(dsh0_0_1 = k302)
 --    & F G(axin0_0_1 = k303)
 --    & F G(bcat0_0_1 = k304)
 --    & F G(gt1_0_0_1 = k305)
 --    & F G(gt2_0_0_1 = k306)
 --    & F G(delta0_0_1 = k307)
 --    & F G(deltaext0_0_1 = k308)
 --    & F G(notchic0_0_1 = k309)
 --    & F G(p21_0_0_1 = k310)
 --    & F G(wnt0_0_1 = k311)
 --    & F G(wntext1_0_1 = k312)
 --    & F G(frizzled1_0_1 = k313)
 --    & F G(dsh1_0_1 = k314)
 --    & F G(axin1_0_1 = k315)
 --    & F G(bcat1_0_1 = k316)
 --    & F G(gt1_1_0_1 = k317)
 --    & F G(gt2_1_0_1 = k318)
 --    & F G(delta1_0_1 = k319)
 --    & F G(deltaext1_0_1 = k320)
 --    & F G(notchic1_0_1 = k321)
 --    & F G(p21_1_0_1 = k322)
 --    & F G(wnt1_0_1 = k323)
 --    & F G(wntext2_0_1 = k324)
 --    & F G(frizzled2_0_1 = k325)
 --    & F G(dsh2_0_1 = k326)
 --    & F G(axin2_0_1 = k327)
 --    & F G(bcat2_0_1 = k328)
 --    & F G(gt1_2_0_1 = k329)
 --    & F G(gt2_2_0_1 = k330)
 --    & F G(delta2_0_1 = k331)
 --    & F G(deltaext2_0_1 = k332)
 --    & F G(notchic2_0_1 = k333)
 --    & F G(p21_2_0_1 = k334)
 --    & F G(wnt2_0_1 = k335)
 --    & F G(wntext3_0_1 = k336)
 --    & F G(frizzled3_0_1 = k337)
 --    & F G(dsh3_0_1 = k338)
 --    & F G(axin3_0_1 = k339)
 --    & F G(bcat3_0_1 = k340)
 --    & F G(gt1_3_0_1 = k341)
 --    & F G(gt2_3_0_1 = k342)
 --    & F G(delta3_0_1 = k343)
 --    & F G(deltaext3_0_1 = k344)
 --    & F G(notchic3_0_1 = k345)
 --    & F G(p21_3_0_1 = k346)
 --    & F G(wnt3_0_1 = k347)
 --    & F G(wntext4_0_1 = k348)
 --    & F G(frizzled4_0_1 = k349)
 --    & F G(dsh4_0_1 = k350)
 --    & F G(axin4_0_1 = k351)
 --    & F G(bcat4_0_1 = k352)
 --    & F G(gt1_4_0_1 = k353)
 --    & F G(gt2_4_0_1 = k354)
 --    & F G(delta4_0_1 = k355)
 --    & F G(deltaext4_0_1 = k356)
 --    & F G(notchic4_0_1 = k357)
 --    & F G(p21_4_0_1 = k358)
 --    & F G(wnt4_0_1 = k359)
 --    & F G(wntext0_1_1 = k360)
 --    & F G(frizzled0_1_1 = k361)
 --    & F G(dsh0_1_1 = k362)
 --    & F G(axin0_1_1 = k363)
 --    & F G(bcat0_1_1 = k364)
 --    & F G(gt1_0_1_1 = k365)
 --    & F G(gt2_0_1_1 = k366)
 --    & F G(delta0_1_1 = k367)
 --    & F G(deltaext0_1_1 = k368)
 --    & F G(notchic0_1_1 = k369)
 --    & F G(p21_0_1_1 = k370)
 --    & F G(wnt0_1_1 = k371)
 --    & F G(wntext1_1_1 = k372)
 --    & F G(frizzled1_1_1 = k373)
 --    & F G(dsh1_1_1 = k374)
 --    & F G(axin1_1_1 = k375)
 --    & F G(bcat1_1_1 = k376)
 --    & F G(gt1_1_1_1 = k377)
 --    & F G(gt2_1_1_1 = k378)
 --    & F G(delta1_1_1 = k379)
 --    & F G(deltaext1_1_1 = k380)
 --    & F G(notchic1_1_1 = k381)
 --    & F G(p21_1_1_1 = k382)
 --    & F G(wnt1_1_1 = k383)
 --    & F G(wntext2_1_1 = k384)
 --    & F G(frizzled2_1_1 = k385)
 --    & F G(dsh2_1_1 = k386)
 --    & F G(axin2_1_1 = k387)
 --    & F G(bcat2_1_1 = k388)
 --    & F G(gt1_2_1_1 = k389)
 --    & F G(gt2_2_1_1 = k390)
 --    & F G(delta2_1_1 = k391)
 --    & F G(deltaext2_1_1 = k392)
 --    & F G(notchic2_1_1 = k393)
 --    & F G(p21_2_1_1 = k394)
 --    & F G(wnt2_1_1 = k395)
 --    & F G(wntext3_1_1 = k396)
 --    & F G(frizzled3_1_1 = k397)
 --    & F G(dsh3_1_1 = k398)
 --    & F G(axin3_1_1 = k399)
 --    & F G(bcat3_1_1 = k400)
 --    & F G(gt1_3_1_1 = k401)
 --    & F G(gt2_3_1_1 = k402)
 --    & F G(delta3_1_1 = k403)
 --    & F G(deltaext3_1_1 = k404)
 --    & F G(notchic3_1_1 = k405)
 --    & F G(p21_3_1_1 = k406)
 --    & F G(wnt3_1_1 = k407)
 --    & F G(wntext4_1_1 = k408)
 --    & F G(frizzled4_1_1 = k409)
 --    & F G(dsh4_1_1 = k410)
 --    & F G(axin4_1_1 = k411)
 --    & F G(bcat4_1_1 = k412)
 --    & F G(gt1_4_1_1 = k413)
 --    & F G(gt2_4_1_1 = k414)
 --    & F G(delta4_1_1 = k415)
 --    & F G(deltaext4_1_1 = k416)
 --    & F G(notchic4_1_1 = k417)
 --    & F G(p21_4_1_1 = k418)
 --    & F G(wnt4_1_1 = k419)
 --    & F G(wntext0_2_1 = k420)
 --    & F G(frizzled0_2_1 = k421)
 --    & F G(dsh0_2_1 = k422)
 --    & F G(axin0_2_1 = k423)
 --    & F G(bcat0_2_1 = k424)
 --    & F G(gt1_0_2_1 = k425)
 --    & F G(gt2_0_2_1 = k426)
 --    & F G(delta0_2_1 = k427)
 --    & F G(deltaext0_2_1 = k428)
 --    & F G(notchic0_2_1 = k429)
 --    & F G(p21_0_2_1 = k430)
 --    & F G(wnt0_2_1 = k431)
 --    & F G(wntext1_2_1 = k432)
 --    & F G(frizzled1_2_1 = k433)
 --    & F G(dsh1_2_1 = k434)
 --    & F G(axin1_2_1 = k435)
 --    & F G(bcat1_2_1 = k436)
 --    & F G(gt1_1_2_1 = k437)
 --    & F G(gt2_1_2_1 = k438)
 --    & F G(delta1_2_1 = k439)
 --    & F G(deltaext1_2_1 = k440)
 --    & F G(notchic1_2_1 = k441)
 --    & F G(p21_1_2_1 = k442)
 --    & F G(wnt1_2_1 = k443)
 --    & F G(wntext2_2_1 = k444)
 --    & F G(frizzled2_2_1 = k445)
 --    & F G(dsh2_2_1 = k446)
 --    & F G(axin2_2_1 = k447)
 --    & F G(bcat2_2_1 = k448)
 --    & F G(gt1_2_2_1 = k449)
 --    & F G(gt2_2_2_1 = k450)
 --    & F G(delta2_2_1 = k451)
 --    & F G(deltaext2_2_1 = k452)
 --    & F G(notchic2_2_1 = k453)
 --    & F G(p21_2_2_1 = k454)
 --    & F G(wnt2_2_1 = k455)
 --    & F G(wntext3_2_1 = k456)
 --    & F G(frizzled3_2_1 = k457)
 --    & F G(dsh3_2_1 = k458)
 --    & F G(axin3_2_1 = k459)
 --    & F G(bcat3_2_1 = k460)
 --    & F G(gt1_3_2_1 = k461)
 --    & F G(gt2_3_2_1 = k462)
 --    & F G(delta3_2_1 = k463)
 --    & F G(deltaext3_2_1 = k464)
 --    & F G(notchic3_2_1 = k465)
 --    & F G(p21_3_2_1 = k466)
 --    & F G(wnt3_2_1 = k467)
 --    & F G(wntext4_2_1 = k468)
 --    & F G(frizzled4_2_1 = k469)
 --    & F G(dsh4_2_1 = k470)
 --    & F G(axin4_2_1 = k471)
 --    & F G(bcat4_2_1 = k472)
 --    & F G(gt1_4_2_1 = k473)
 --    & F G(gt2_4_2_1 = k474)
 --    & F G(delta4_2_1 = k475)
 --    & F G(deltaext4_2_1 = k476)
 --    & F G(notchic4_2_1 = k477)
 --    & F G(p21_4_2_1 = k478)
 --    & F G(wnt4_2_1 = k479)
 --    & F G(wntext0_3_1 = k480)
 --    & F G(frizzled0_3_1 = k481)
 --    & F G(dsh0_3_1 = k482)
 --    & F G(axin0_3_1 = k483)
 --    & F G(bcat0_3_1 = k484)
 --    & F G(gt1_0_3_1 = k485)
 --    & F G(gt2_0_3_1 = k486)
 --    & F G(delta0_3_1 = k487)
 --    & F G(deltaext0_3_1 = k488)
 --    & F G(notchic0_3_1 = k489)
 --    & F G(p21_0_3_1 = k490)
 --    & F G(wnt0_3_1 = k491)
 --    & F G(wntext1_3_1 = k492)
 --    & F G(frizzled1_3_1 = k493)
 --    & F G(dsh1_3_1 = k494)
 --    & F G(axin1_3_1 = k495)
 --    & F G(bcat1_3_1 = k496)
 --    & F G(gt1_1_3_1 = k497)
 --    & F G(gt2_1_3_1 = k498)
 --    & F G(delta1_3_1 = k499)
 --    & F G(deltaext1_3_1 = k500)
 --    & F G(notchic1_3_1 = k501)
 --    & F G(p21_1_3_1 = k502)
 --    & F G(wnt1_3_1 = k503)
 --    & F G(wntext2_3_1 = k504)
 --    & F G(frizzled2_3_1 = k505)
 --    & F G(dsh2_3_1 = k506)
 --    & F G(axin2_3_1 = k507)
 --    & F G(bcat2_3_1 = k508)
 --    & F G(gt1_2_3_1 = k509)
 --    & F G(gt2_2_3_1 = k510)
 --    & F G(delta2_3_1 = k511)
 --    & F G(deltaext2_3_1 = k512)
 --    & F G(notchic2_3_1 = k513)
 --    & F G(p21_2_3_1 = k514)
 --    & F G(wnt2_3_1 = k515)
 --    & F G(wntext3_3_1 = k516)
 --    & F G(frizzled3_3_1 = k517)
 --    & F G(dsh3_3_1 = k518)
 --    & F G(axin3_3_1 = k519)
 --    & F G(bcat3_3_1 = k520)
 --    & F G(gt1_3_3_1 = k521)
 --    & F G(gt2_3_3_1 = k522)
 --    & F G(delta3_3_1 = k523)
 --    & F G(deltaext3_3_1 = k524)
 --    & F G(notchic3_3_1 = k525)
 --    & F G(p21_3_3_1 = k526)
 --    & F G(wnt3_3_1 = k527)
 --    & F G(wntext4_3_1 = k528)
 --    & F G(frizzled4_3_1 = k529)
 --    & F G(dsh4_3_1 = k530)
 --    & F G(axin4_3_1 = k531)
 --    & F G(bcat4_3_1 = k532)
 --    & F G(gt1_4_3_1 = k533)
 --    & F G(gt2_4_3_1 = k534)
 --    & F G(delta4_3_1 = k535)
 --    & F G(deltaext4_3_1 = k536)
 --    & F G(notchic4_3_1 = k537)
 --    & F G(p21_4_3_1 = k538)
 --    & F G(wnt4_3_1 = k539)
 --    & F G(wntext0_4_1 = k540)
 --    & F G(frizzled0_4_1 = k541)
 --    & F G(dsh0_4_1 = k542)
 --    & F G(axin0_4_1 = k543)
 --    & F G(bcat0_4_1 = k544)
 --    & F G(gt1_0_4_1 = k545)
 --    & F G(gt2_0_4_1 = k546)
 --    & F G(delta0_4_1 = k547)
 --    & F G(deltaext0_4_1 = k548)
 --    & F G(notchic0_4_1 = k549)
 --    & F G(p21_0_4_1 = k550)
 --    & F G(wnt0_4_1 = k551)
 --    & F G(wntext1_4_1 = k552)
 --    & F G(frizzled1_4_1 = k553)
 --    & F G(dsh1_4_1 = k554)
 --    & F G(axin1_4_1 = k555)
 --    & F G(bcat1_4_1 = k556)
 --    & F G(gt1_1_4_1 = k557)
 --    & F G(gt2_1_4_1 = k558)
 --    & F G(delta1_4_1 = k559)
 --    & F G(deltaext1_4_1 = k560)
 --    & F G(notchic1_4_1 = k561)
 --    & F G(p21_1_4_1 = k562)
 --    & F G(wnt1_4_1 = k563)
 --    & F G(wntext2_4_1 = k564)
 --    & F G(frizzled2_4_1 = k565)
 --    & F G(dsh2_4_1 = k566)
 --    & F G(axin2_4_1 = k567)
 --    & F G(bcat2_4_1 = k568)
 --    & F G(gt1_2_4_1 = k569)
 --    & F G(gt2_2_4_1 = k570)
 --    & F G(delta2_4_1 = k571)
 --    & F G(deltaext2_4_1 = k572)
 --    & F G(notchic2_4_1 = k573)
 --    & F G(p21_2_4_1 = k574)
 --    & F G(wnt2_4_1 = k575)
 --    & F G(wntext3_4_1 = k576)
 --    & F G(frizzled3_4_1 = k577)
 --    & F G(dsh3_4_1 = k578)
 --    & F G(axin3_4_1 = k579)
 --    & F G(bcat3_4_1 = k580)
 --    & F G(gt1_3_4_1 = k581)
 --    & F G(gt2_3_4_1 = k582)
 --    & F G(delta3_4_1 = k583)
 --    & F G(deltaext3_4_1 = k584)
 --    & F G(notchic3_4_1 = k585)
 --    & F G(p21_3_4_1 = k586)
 --    & F G(wnt3_4_1 = k587)
 --    & F G(wntext4_4_1 = k588)
 --    & F G(frizzled4_4_1 = k589)
 --    & F G(dsh4_4_1 = k590)
 --    & F G(axin4_4_1 = k591)
 --    & F G(bcat4_4_1 = k592)
 --    & F G(gt1_4_4_1 = k593)
 --    & F G(gt2_4_4_1 = k594)
 --    & F G(delta4_4_1 = k595)
 --    & F G(deltaext4_4_1 = k596)
 --    & F G(notchic4_4_1 = k597)
 --    & F G(p21_4_4_1 = k598)
 --    & F G(wnt4_4_1 = k599)
 --    & F G(wntext0_0_2 = k600)
 --    & F G(frizzled0_0_2 = k601)
 --    & F G(dsh0_0_2 = k602)
 --    & F G(axin0_0_2 = k603)
 --    & F G(bcat0_0_2 = k604)
 --    & F G(gt1_0_0_2 = k605)
 --    & F G(gt2_0_0_2 = k606)
 --    & F G(delta0_0_2 = k607)
 --    & F G(deltaext0_0_2 = k608)
 --    & F G(notchic0_0_2 = k609)
 --    & F G(p21_0_0_2 = k610)
 --    & F G(wnt0_0_2 = k611)
 --    & F G(wntext1_0_2 = k612)
 --    & F G(frizzled1_0_2 = k613)
 --    & F G(dsh1_0_2 = k614)
 --    & F G(axin1_0_2 = k615)
 --    & F G(bcat1_0_2 = k616)
 --    & F G(gt1_1_0_2 = k617)
 --    & F G(gt2_1_0_2 = k618)
 --    & F G(delta1_0_2 = k619)
 --    & F G(deltaext1_0_2 = k620)
 --    & F G(notchic1_0_2 = k621)
 --    & F G(p21_1_0_2 = k622)
 --    & F G(wnt1_0_2 = k623)
 --    & F G(wntext2_0_2 = k624)
 --    & F G(frizzled2_0_2 = k625)
 --    & F G(dsh2_0_2 = k626)
 --    & F G(axin2_0_2 = k627)
 --    & F G(bcat2_0_2 = k628)
 --    & F G(gt1_2_0_2 = k629)
 --    & F G(gt2_2_0_2 = k630)
 --    & F G(delta2_0_2 = k631)
 --    & F G(deltaext2_0_2 = k632)
 --    & F G(notchic2_0_2 = k633)
 --    & F G(p21_2_0_2 = k634)
 --    & F G(wnt2_0_2 = k635)
 --    & F G(wntext3_0_2 = k636)
 --    & F G(frizzled3_0_2 = k637)
 --    & F G(dsh3_0_2 = k638)
 --    & F G(axin3_0_2 = k639)
 --    & F G(bcat3_0_2 = k640)
 --    & F G(gt1_3_0_2 = k641)
 --    & F G(gt2_3_0_2 = k642)
 --    & F G(delta3_0_2 = k643)
 --    & F G(deltaext3_0_2 = k644)
 --    & F G(notchic3_0_2 = k645)
 --    & F G(p21_3_0_2 = k646)
 --    & F G(wnt3_0_2 = k647)
 --    & F G(wntext4_0_2 = k648)
 --    & F G(frizzled4_0_2 = k649)
 --    & F G(dsh4_0_2 = k650)
 --    & F G(axin4_0_2 = k651)
 --    & F G(bcat4_0_2 = k652)
 --    & F G(gt1_4_0_2 = k653)
 --    & F G(gt2_4_0_2 = k654)
 --    & F G(delta4_0_2 = k655)
 --    & F G(deltaext4_0_2 = k656)
 --    & F G(notchic4_0_2 = k657)
 --    & F G(p21_4_0_2 = k658)
 --    & F G(wnt4_0_2 = k659)
 --    & F G(wntext0_1_2 = k660)
 --    & F G(frizzled0_1_2 = k661)
 --    & F G(dsh0_1_2 = k662)
 --    & F G(axin0_1_2 = k663)
 --    & F G(bcat0_1_2 = k664)
 --    & F G(gt1_0_1_2 = k665)
 --    & F G(gt2_0_1_2 = k666)
 --    & F G(delta0_1_2 = k667)
 --    & F G(deltaext0_1_2 = k668)
 --    & F G(notchic0_1_2 = k669)
 --    & F G(p21_0_1_2 = k670)
 --    & F G(wnt0_1_2 = k671)
 --    & F G(wntext1_1_2 = k672)
 --    & F G(frizzled1_1_2 = k673)
 --    & F G(dsh1_1_2 = k674)
 --    & F G(axin1_1_2 = k675)
 --    & F G(bcat1_1_2 = k676)
 --    & F G(gt1_1_1_2 = k677)
 --    & F G(gt2_1_1_2 = k678)
 --    & F G(delta1_1_2 = k679)
 --    & F G(deltaext1_1_2 = k680)
 --    & F G(notchic1_1_2 = k681)
 --    & F G(p21_1_1_2 = k682)
 --    & F G(wnt1_1_2 = k683)
 --    & F G(wntext2_1_2 = k684)
 --    & F G(frizzled2_1_2 = k685)
 --    & F G(dsh2_1_2 = k686)
 --    & F G(axin2_1_2 = k687)
 --    & F G(bcat2_1_2 = k688)
 --    & F G(gt1_2_1_2 = k689)
 --    & F G(gt2_2_1_2 = k690)
 --    & F G(delta2_1_2 = k691)
 --    & F G(deltaext2_1_2 = k692)
 --    & F G(notchic2_1_2 = k693)
 --    & F G(p21_2_1_2 = k694)
 --    & F G(wnt2_1_2 = k695)
 --    & F G(wntext3_1_2 = k696)
 --    & F G(frizzled3_1_2 = k697)
 --    & F G(dsh3_1_2 = k698)
 --    & F G(axin3_1_2 = k699)
 --    & F G(bcat3_1_2 = k700)
 --    & F G(gt1_3_1_2 = k701)
 --    & F G(gt2_3_1_2 = k702)
 --    & F G(delta3_1_2 = k703)
 --    & F G(deltaext3_1_2 = k704)
 --    & F G(notchic3_1_2 = k705)
 --    & F G(p21_3_1_2 = k706)
 --    & F G(wnt3_1_2 = k707)
 --    & F G(wntext4_1_2 = k708)
 --    & F G(frizzled4_1_2 = k709)
 --    & F G(dsh4_1_2 = k710)
 --    & F G(axin4_1_2 = k711)
 --    & F G(bcat4_1_2 = k712)
 --    & F G(gt1_4_1_2 = k713)
 --    & F G(gt2_4_1_2 = k714)
 --    & F G(delta4_1_2 = k715)
 --    & F G(deltaext4_1_2 = k716)
 --    & F G(notchic4_1_2 = k717)
 --    & F G(p21_4_1_2 = k718)
 --    & F G(wnt4_1_2 = k719)
 --    & F G(wntext0_2_2 = k720)
 --    & F G(frizzled0_2_2 = k721)
 --    & F G(dsh0_2_2 = k722)
 --    & F G(axin0_2_2 = k723)
 --    & F G(bcat0_2_2 = k724)
 --    & F G(gt1_0_2_2 = k725)
 --    & F G(gt2_0_2_2 = k726)
 --    & F G(delta0_2_2 = k727)
 --    & F G(deltaext0_2_2 = k728)
 --    & F G(notchic0_2_2 = k729)
 --    & F G(p21_0_2_2 = k730)
 --    & F G(wnt0_2_2 = k731)
 --    & F G(wntext1_2_2 = k732)
 --    & F G(frizzled1_2_2 = k733)
 --    & F G(dsh1_2_2 = k734)
 --    & F G(axin1_2_2 = k735)
 --    & F G(bcat1_2_2 = k736)
 --    & F G(gt1_1_2_2 = k737)
 --    & F G(gt2_1_2_2 = k738)
 --    & F G(delta1_2_2 = k739)
 --    & F G(deltaext1_2_2 = k740)
 --    & F G(notchic1_2_2 = k741)
 --    & F G(p21_1_2_2 = k742)
 --    & F G(wnt1_2_2 = k743)
 --    & F G(wntext2_2_2 = k744)
 --    & F G(frizzled2_2_2 = k745)
 --    & F G(dsh2_2_2 = k746)
 --    & F G(axin2_2_2 = k747)
 --    & F G(bcat2_2_2 = k748)
 --    & F G(gt1_2_2_2 = k749)
 --    & F G(gt2_2_2_2 = k750)
 --    & F G(delta2_2_2 = k751)
 --    & F G(deltaext2_2_2 = k752)
 --    & F G(notchic2_2_2 = k753)
 --    & F G(p21_2_2_2 = k754)
 --    & F G(wnt2_2_2 = k755)
 --    & F G(wntext3_2_2 = k756)
 --    & F G(frizzled3_2_2 = k757)
 --    & F G(dsh3_2_2 = k758)
 --    & F G(axin3_2_2 = k759)
 --    & F G(bcat3_2_2 = k760)
 --    & F G(gt1_3_2_2 = k761)
 --    & F G(gt2_3_2_2 = k762)
 --    & F G(delta3_2_2 = k763)
 --    & F G(deltaext3_2_2 = k764)
 --    & F G(notchic3_2_2 = k765)
 --    & F G(p21_3_2_2 = k766)
 --    & F G(wnt3_2_2 = k767)
 --    & F G(wntext4_2_2 = k768)
 --    & F G(frizzled4_2_2 = k769)
 --    & F G(dsh4_2_2 = k770)
 --    & F G(axin4_2_2 = k771)
 --    & F G(bcat4_2_2 = k772)
 --    & F G(gt1_4_2_2 = k773)
 --    & F G(gt2_4_2_2 = k774)
 --    & F G(delta4_2_2 = k775)
 --    & F G(deltaext4_2_2 = k776)
 --    & F G(notchic4_2_2 = k777)
 --    & F G(p21_4_2_2 = k778)
 --    & F G(wnt4_2_2 = k779)
 --    & F G(wntext0_3_2 = k780)
 --    & F G(frizzled0_3_2 = k781)
 --    & F G(dsh0_3_2 = k782)
 --    & F G(axin0_3_2 = k783)
 --    & F G(bcat0_3_2 = k784)
 --    & F G(gt1_0_3_2 = k785)
 --    & F G(gt2_0_3_2 = k786)
 --    & F G(delta0_3_2 = k787)
 --    & F G(deltaext0_3_2 = k788)
 --    & F G(notchic0_3_2 = k789)
 --    & F G(p21_0_3_2 = k790)
 --    & F G(wnt0_3_2 = k791)
 --    & F G(wntext1_3_2 = k792)
 --    & F G(frizzled1_3_2 = k793)
 --    & F G(dsh1_3_2 = k794)
 --    & F G(axin1_3_2 = k795)
 --    & F G(bcat1_3_2 = k796)
 --    & F G(gt1_1_3_2 = k797)
 --    & F G(gt2_1_3_2 = k798)
 --    & F G(delta1_3_2 = k799)
 --    & F G(deltaext1_3_2 = k800)
 --    & F G(notchic1_3_2 = k801)
 --    & F G(p21_1_3_2 = k802)
 --    & F G(wnt1_3_2 = k803)
 --    & F G(wntext2_3_2 = k804)
 --    & F G(frizzled2_3_2 = k805)
 --    & F G(dsh2_3_2 = k806)
 --    & F G(axin2_3_2 = k807)
 --    & F G(bcat2_3_2 = k808)
 --    & F G(gt1_2_3_2 = k809)
 --    & F G(gt2_2_3_2 = k810)
 --    & F G(delta2_3_2 = k811)
 --    & F G(deltaext2_3_2 = k812)
 --    & F G(notchic2_3_2 = k813)
 --    & F G(p21_2_3_2 = k814)
 --    & F G(wnt2_3_2 = k815)
 --    & F G(wntext3_3_2 = k816)
 --    & F G(frizzled3_3_2 = k817)
 --    & F G(dsh3_3_2 = k818)
 --    & F G(axin3_3_2 = k819)
 --    & F G(bcat3_3_2 = k820)
 --    & F G(gt1_3_3_2 = k821)
 --    & F G(gt2_3_3_2 = k822)
 --    & F G(delta3_3_2 = k823)
 --    & F G(deltaext3_3_2 = k824)
 --    & F G(notchic3_3_2 = k825)
 --    & F G(p21_3_3_2 = k826)
 --    & F G(wnt3_3_2 = k827)
 --    & F G(wntext4_3_2 = k828)
 --    & F G(frizzled4_3_2 = k829)
 --    & F G(dsh4_3_2 = k830)
 --    & F G(axin4_3_2 = k831)
 --    & F G(bcat4_3_2 = k832)
 --    & F G(gt1_4_3_2 = k833)
 --    & F G(gt2_4_3_2 = k834)
 --    & F G(delta4_3_2 = k835)
 --    & F G(deltaext4_3_2 = k836)
 --    & F G(notchic4_3_2 = k837)
 --    & F G(p21_4_3_2 = k838)
 --    & F G(wnt4_3_2 = k839)
 --    & F G(wntext0_4_2 = k840)
 --    & F G(frizzled0_4_2 = k841)
 --    & F G(dsh0_4_2 = k842)
 --    & F G(axin0_4_2 = k843)
 --    & F G(bcat0_4_2 = k844)
 --    & F G(gt1_0_4_2 = k845)
 --    & F G(gt2_0_4_2 = k846)
 --    & F G(delta0_4_2 = k847)
 --    & F G(deltaext0_4_2 = k848)
 --    & F G(notchic0_4_2 = k849)
 --    & F G(p21_0_4_2 = k850)
 --    & F G(wnt0_4_2 = k851)
 --    & F G(wntext1_4_2 = k852)
 --    & F G(frizzled1_4_2 = k853)
 --    & F G(dsh1_4_2 = k854)
 --    & F G(axin1_4_2 = k855)
 --    & F G(bcat1_4_2 = k856)
 --    & F G(gt1_1_4_2 = k857)
 --    & F G(gt2_1_4_2 = k858)
 --    & F G(delta1_4_2 = k859)
 --    & F G(deltaext1_4_2 = k860)
 --    & F G(notchic1_4_2 = k861)
 --    & F G(p21_1_4_2 = k862)
 --    & F G(wnt1_4_2 = k863)
 --    & F G(wntext2_4_2 = k864)
 --    & F G(frizzled2_4_2 = k865)
 --    & F G(dsh2_4_2 = k866)
 --    & F G(axin2_4_2 = k867)
 --    & F G(bcat2_4_2 = k868)
 --    & F G(gt1_2_4_2 = k869)
 --    & F G(gt2_2_4_2 = k870)
 --    & F G(delta2_4_2 = k871)
 --    & F G(deltaext2_4_2 = k872)
 --    & F G(notchic2_4_2 = k873)
 --    & F G(p21_2_4_2 = k874)
 --    & F G(wnt2_4_2 = k875)
 --    & F G(wntext3_4_2 = k876)
 --    & F G(frizzled3_4_2 = k877)
 --    & F G(dsh3_4_2 = k878)
 --    & F G(axin3_4_2 = k879)
 --    & F G(bcat3_4_2 = k880)
 --    & F G(gt1_3_4_2 = k881)
 --    & F G(gt2_3_4_2 = k882)
 --    & F G(delta3_4_2 = k883)
 --    & F G(deltaext3_4_2 = k884)
 --    & F G(notchic3_4_2 = k885)
 --    & F G(p21_3_4_2 = k886)
 --    & F G(wnt3_4_2 = k887)
 --    & F G(wntext4_4_2 = k888)
 --    & F G(frizzled4_4_2 = k889)
 --    & F G(dsh4_4_2 = k890)
 --    & F G(axin4_4_2 = k891)
 --    & F G(bcat4_4_2 = k892)
 --    & F G(gt1_4_4_2 = k893)
 --    & F G(gt2_4_4_2 = k894)
 --    & F G(delta4_4_2 = k895)
 --    & F G(deltaext4_4_2 = k896)
 --    & F G(notchic4_4_2 = k897)
 --    & F G(p21_4_4_2 = k898)
 --    & F G(wnt4_4_2 = k899)
 --    & F G(wntext0_0_3 = k900)
 --    & F G(frizzled0_0_3 = k901)
 --    & F G(dsh0_0_3 = k902)
 --    & F G(axin0_0_3 = k903)
 --    & F G(bcat0_0_3 = k904)
 --    & F G(gt1_0_0_3 = k905)
 --    & F G(gt2_0_0_3 = k906)
 --    & F G(delta0_0_3 = k907)
 --    & F G(deltaext0_0_3 = k908)
 --    & F G(notchic0_0_3 = k909)
 --    & F G(p21_0_0_3 = k910)
 --    & F G(wnt0_0_3 = k911)
 --    & F G(wntext1_0_3 = k912)
 --    & F G(frizzled1_0_3 = k913)
 --    & F G(dsh1_0_3 = k914)
 --    & F G(axin1_0_3 = k915)
 --    & F G(bcat1_0_3 = k916)
 --    & F G(gt1_1_0_3 = k917)
 --    & F G(gt2_1_0_3 = k918)
 --    & F G(delta1_0_3 = k919)
 --    & F G(deltaext1_0_3 = k920)
 --    & F G(notchic1_0_3 = k921)
 --    & F G(p21_1_0_3 = k922)
 --    & F G(wnt1_0_3 = k923)
 --    & F G(wntext2_0_3 = k924)
 --    & F G(frizzled2_0_3 = k925)
 --    & F G(dsh2_0_3 = k926)
 --    & F G(axin2_0_3 = k927)
 --    & F G(bcat2_0_3 = k928)
 --    & F G(gt1_2_0_3 = k929)
 --    & F G(gt2_2_0_3 = k930)
 --    & F G(delta2_0_3 = k931)
 --    & F G(deltaext2_0_3 = k932)
 --    & F G(notchic2_0_3 = k933)
 --    & F G(p21_2_0_3 = k934)
 --    & F G(wnt2_0_3 = k935)
 --    & F G(wntext3_0_3 = k936)
 --    & F G(frizzled3_0_3 = k937)
 --    & F G(dsh3_0_3 = k938)
 --    & F G(axin3_0_3 = k939)
 --    & F G(bcat3_0_3 = k940)
 --    & F G(gt1_3_0_3 = k941)
 --    & F G(gt2_3_0_3 = k942)
 --    & F G(delta3_0_3 = k943)
 --    & F G(deltaext3_0_3 = k944)
 --    & F G(notchic3_0_3 = k945)
 --    & F G(p21_3_0_3 = k946)
 --    & F G(wnt3_0_3 = k947)
 --    & F G(wntext4_0_3 = k948)
 --    & F G(frizzled4_0_3 = k949)
 --    & F G(dsh4_0_3 = k950)
 --    & F G(axin4_0_3 = k951)
 --    & F G(bcat4_0_3 = k952)
 --    & F G(gt1_4_0_3 = k953)
 --    & F G(gt2_4_0_3 = k954)
 --    & F G(delta4_0_3 = k955)
 --    & F G(deltaext4_0_3 = k956)
 --    & F G(notchic4_0_3 = k957)
 --    & F G(p21_4_0_3 = k958)
 --    & F G(wnt4_0_3 = k959)
 --    & F G(wntext0_1_3 = k960)
 --    & F G(frizzled0_1_3 = k961)
 --    & F G(dsh0_1_3 = k962)
 --    & F G(axin0_1_3 = k963)
 --    & F G(bcat0_1_3 = k964)
 --    & F G(gt1_0_1_3 = k965)
 --    & F G(gt2_0_1_3 = k966)
 --    & F G(delta0_1_3 = k967)
 --    & F G(deltaext0_1_3 = k968)
 --    & F G(notchic0_1_3 = k969)
 --    & F G(p21_0_1_3 = k970)
 --    & F G(wnt0_1_3 = k971)
 --    & F G(wntext1_1_3 = k972)
 --    & F G(frizzled1_1_3 = k973)
 --    & F G(dsh1_1_3 = k974)
 --    & F G(axin1_1_3 = k975)
 --    & F G(bcat1_1_3 = k976)
 --    & F G(gt1_1_1_3 = k977)
 --    & F G(gt2_1_1_3 = k978)
 --    & F G(delta1_1_3 = k979)
 --    & F G(deltaext1_1_3 = k980)
 --    & F G(notchic1_1_3 = k981)
 --    & F G(p21_1_1_3 = k982)
 --    & F G(wnt1_1_3 = k983)
 --    & F G(wntext2_1_3 = k984)
 --    & F G(frizzled2_1_3 = k985)
 --    & F G(dsh2_1_3 = k986)
 --    & F G(axin2_1_3 = k987)
 --    & F G(bcat2_1_3 = k988)
 --    & F G(gt1_2_1_3 = k989)
 --    & F G(gt2_2_1_3 = k990)
 --    & F G(delta2_1_3 = k991)
 --    & F G(deltaext2_1_3 = k992)
 --    & F G(notchic2_1_3 = k993)
 --    & F G(p21_2_1_3 = k994)
 --    & F G(wnt2_1_3 = k995)
 --    & F G(wntext3_1_3 = k996)
 --    & F G(frizzled3_1_3 = k997)
 --    & F G(dsh3_1_3 = k998)
 --    & F G(axin3_1_3 = k999)
 --    & F G(bcat3_1_3 = k1000)
 --    & F G(gt1_3_1_3 = k1001)
 --    & F G(gt2_3_1_3 = k1002)
 --    & F G(delta3_1_3 = k1003)
 --    & F G(deltaext3_1_3 = k1004)
 --    & F G(notchic3_1_3 = k1005)
 --    & F G(p21_3_1_3 = k1006)
 --    & F G(wnt3_1_3 = k1007)
 --    & F G(wntext4_1_3 = k1008)
 --    & F G(frizzled4_1_3 = k1009)
 --    & F G(dsh4_1_3 = k1010)
 --    & F G(axin4_1_3 = k1011)
 --    & F G(bcat4_1_3 = k1012)
 --    & F G(gt1_4_1_3 = k1013)
 --    & F G(gt2_4_1_3 = k1014)
 --    & F G(delta4_1_3 = k1015)
 --    & F G(deltaext4_1_3 = k1016)
 --    & F G(notchic4_1_3 = k1017)
 --    & F G(p21_4_1_3 = k1018)
 --    & F G(wnt4_1_3 = k1019)
 --    & F G(wntext0_2_3 = k1020)
 --    & F G(frizzled0_2_3 = k1021)
 --    & F G(dsh0_2_3 = k1022)
 --    & F G(axin0_2_3 = k1023)
 --    & F G(bcat0_2_3 = k1024)
 --    & F G(gt1_0_2_3 = k1025)
 --    & F G(gt2_0_2_3 = k1026)
 --    & F G(delta0_2_3 = k1027)
 --    & F G(deltaext0_2_3 = k1028)
 --    & F G(notchic0_2_3 = k1029)
 --    & F G(p21_0_2_3 = k1030)
 --    & F G(wnt0_2_3 = k1031)
 --    & F G(wntext1_2_3 = k1032)
 --    & F G(frizzled1_2_3 = k1033)
 --    & F G(dsh1_2_3 = k1034)
 --    & F G(axin1_2_3 = k1035)
 --    & F G(bcat1_2_3 = k1036)
 --    & F G(gt1_1_2_3 = k1037)
 --    & F G(gt2_1_2_3 = k1038)
 --    & F G(delta1_2_3 = k1039)
 --    & F G(deltaext1_2_3 = k1040)
 --    & F G(notchic1_2_3 = k1041)
 --    & F G(p21_1_2_3 = k1042)
 --    & F G(wnt1_2_3 = k1043)
 --    & F G(wntext2_2_3 = k1044)
 --    & F G(frizzled2_2_3 = k1045)
 --    & F G(dsh2_2_3 = k1046)
 --    & F G(axin2_2_3 = k1047)
 --    & F G(bcat2_2_3 = k1048)
 --    & F G(gt1_2_2_3 = k1049)
 --    & F G(gt2_2_2_3 = k1050)
 --    & F G(delta2_2_3 = k1051)
 --    & F G(deltaext2_2_3 = k1052)
 --    & F G(notchic2_2_3 = k1053)
 --    & F G(p21_2_2_3 = k1054)
 --    & F G(wnt2_2_3 = k1055)
 --    & F G(wntext3_2_3 = k1056)
 --    & F G(frizzled3_2_3 = k1057)
 --    & F G(dsh3_2_3 = k1058)
 --    & F G(axin3_2_3 = k1059)
 --    & F G(bcat3_2_3 = k1060)
 --    & F G(gt1_3_2_3 = k1061)
 --    & F G(gt2_3_2_3 = k1062)
 --    & F G(delta3_2_3 = k1063)
 --    & F G(deltaext3_2_3 = k1064)
 --    & F G(notchic3_2_3 = k1065)
 --    & F G(p21_3_2_3 = k1066)
 --    & F G(wnt3_2_3 = k1067)
 --    & F G(wntext4_2_3 = k1068)
 --    & F G(frizzled4_2_3 = k1069)
 --    & F G(dsh4_2_3 = k1070)
 --    & F G(axin4_2_3 = k1071)
 --    & F G(bcat4_2_3 = k1072)
 --    & F G(gt1_4_2_3 = k1073)
 --    & F G(gt2_4_2_3 = k1074)
 --    & F G(delta4_2_3 = k1075)
 --    & F G(deltaext4_2_3 = k1076)
 --    & F G(notchic4_2_3 = k1077)
 --    & F G(p21_4_2_3 = k1078)
 --    & F G(wnt4_2_3 = k1079)
 --    & F G(wntext0_3_3 = k1080)
 --    & F G(frizzled0_3_3 = k1081)
 --    & F G(dsh0_3_3 = k1082)
 --    & F G(axin0_3_3 = k1083)
 --    & F G(bcat0_3_3 = k1084)
 --    & F G(gt1_0_3_3 = k1085)
 --    & F G(gt2_0_3_3 = k1086)
 --    & F G(delta0_3_3 = k1087)
 --    & F G(deltaext0_3_3 = k1088)
 --    & F G(notchic0_3_3 = k1089)
 --    & F G(p21_0_3_3 = k1090)
 --    & F G(wnt0_3_3 = k1091)
 --    & F G(wntext1_3_3 = k1092)
 --    & F G(frizzled1_3_3 = k1093)
 --    & F G(dsh1_3_3 = k1094)
 --    & F G(axin1_3_3 = k1095)
 --    & F G(bcat1_3_3 = k1096)
 --    & F G(gt1_1_3_3 = k1097)
 --    & F G(gt2_1_3_3 = k1098)
 --    & F G(delta1_3_3 = k1099)
 --    & F G(deltaext1_3_3 = k1100)
 --    & F G(notchic1_3_3 = k1101)
 --    & F G(p21_1_3_3 = k1102)
 --    & F G(wnt1_3_3 = k1103)
 --    & F G(wntext2_3_3 = k1104)
 --    & F G(frizzled2_3_3 = k1105)
 --    & F G(dsh2_3_3 = k1106)
 --    & F G(axin2_3_3 = k1107)
 --    & F G(bcat2_3_3 = k1108)
 --    & F G(gt1_2_3_3 = k1109)
 --    & F G(gt2_2_3_3 = k1110)
 --    & F G(delta2_3_3 = k1111)
 --    & F G(deltaext2_3_3 = k1112)
 --    & F G(notchic2_3_3 = k1113)
 --    & F G(p21_2_3_3 = k1114)
 --    & F G(wnt2_3_3 = k1115)
 --    & F G(wntext3_3_3 = k1116)
 --    & F G(frizzled3_3_3 = k1117)
 --    & F G(dsh3_3_3 = k1118)
 --    & F G(axin3_3_3 = k1119)
 --    & F G(bcat3_3_3 = k1120)
 --    & F G(gt1_3_3_3 = k1121)
 --    & F G(gt2_3_3_3 = k1122)
 --    & F G(delta3_3_3 = k1123)
 --    & F G(deltaext3_3_3 = k1124)
 --    & F G(notchic3_3_3 = k1125)
 --    & F G(p21_3_3_3 = k1126)
 --    & F G(wnt3_3_3 = k1127)
 --    & F G(wntext4_3_3 = k1128)
 --    & F G(frizzled4_3_3 = k1129)
 --    & F G(dsh4_3_3 = k1130)
 --    & F G(axin4_3_3 = k1131)
 --    & F G(bcat4_3_3 = k1132)
 --    & F G(gt1_4_3_3 = k1133)
 --    & F G(gt2_4_3_3 = k1134)
 --    & F G(delta4_3_3 = k1135)
 --    & F G(deltaext4_3_3 = k1136)
 --    & F G(notchic4_3_3 = k1137)
 --    & F G(p21_4_3_3 = k1138)
 --    & F G(wnt4_3_3 = k1139)
 --    & F G(wntext0_4_3 = k1140)
 --    & F G(frizzled0_4_3 = k1141)
 --    & F G(dsh0_4_3 = k1142)
 --    & F G(axin0_4_3 = k1143)
 --    & F G(bcat0_4_3 = k1144)
 --    & F G(gt1_0_4_3 = k1145)
 --    & F G(gt2_0_4_3 = k1146)
 --    & F G(delta0_4_3 = k1147)
 --    & F G(deltaext0_4_3 = k1148)
 --    & F G(notchic0_4_3 = k1149)
 --    & F G(p21_0_4_3 = k1150)
 --    & F G(wnt0_4_3 = k1151)
 --    & F G(wntext1_4_3 = k1152)
 --    & F G(frizzled1_4_3 = k1153)
 --    & F G(dsh1_4_3 = k1154)
 --    & F G(axin1_4_3 = k1155)
 --    & F G(bcat1_4_3 = k1156)
 --    & F G(gt1_1_4_3 = k1157)
 --    & F G(gt2_1_4_3 = k1158)
 --    & F G(delta1_4_3 = k1159)
 --    & F G(deltaext1_4_3 = k1160)
 --    & F G(notchic1_4_3 = k1161)
 --    & F G(p21_1_4_3 = k1162)
 --    & F G(wnt1_4_3 = k1163)
 --    & F G(wntext2_4_3 = k1164)
 --    & F G(frizzled2_4_3 = k1165)
 --    & F G(dsh2_4_3 = k1166)
 --    & F G(axin2_4_3 = k1167)
 --    & F G(bcat2_4_3 = k1168)
 --    & F G(gt1_2_4_3 = k1169)
 --    & F G(gt2_2_4_3 = k1170)
 --    & F G(delta2_4_3 = k1171)
 --    & F G(deltaext2_4_3 = k1172)
 --    & F G(notchic2_4_3 = k1173)
 --    & F G(p21_2_4_3 = k1174)
 --    & F G(wnt2_4_3 = k1175)
 --    & F G(wntext3_4_3 = k1176)
 --    & F G(frizzled3_4_3 = k1177)
 --    & F G(dsh3_4_3 = k1178)
 --    & F G(axin3_4_3 = k1179)
 --    & F G(bcat3_4_3 = k1180)
 --    & F G(gt1_3_4_3 = k1181)
 --    & F G(gt2_3_4_3 = k1182)
 --    & F G(delta3_4_3 = k1183)
 --    & F G(deltaext3_4_3 = k1184)
 --    & F G(notchic3_4_3 = k1185)
 --    & F G(p21_3_4_3 = k1186)
 --    & F G(wnt3_4_3 = k1187)
 --    & F G(wntext4_4_3 = k1188)
 --    & F G(frizzled4_4_3 = k1189)
 --    & F G(dsh4_4_3 = k1190)
 --    & F G(axin4_4_3 = k1191)
 --    & F G(bcat4_4_3 = k1192)
 --    & F G(gt1_4_4_3 = k1193)
 --    & F G(gt2_4_4_3 = k1194)
 --    & F G(delta4_4_3 = k1195)
 --    & F G(deltaext4_4_3 = k1196)
 --    & F G(notchic4_4_3 = k1197)
 --    & F G(p21_4_4_3 = k1198)
 --    & F G(wnt4_4_3 = k1199)

}
