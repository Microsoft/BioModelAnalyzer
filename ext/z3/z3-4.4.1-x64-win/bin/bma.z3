(declare-fun v2^0 () Int)
(declare-fun v1^0 () Int)
(declare-fun v2^1 () Int)
(assert (>= v2^0 0))
(assert (<= v2^0 4))
(assert (>= v1^0 0))
(assert (<= v1^0 4))
(assert (let ((a!1 (/ (+ (* (to_real v1^0) (/ 4.0 4.0)) 0.0) 1.0)))
(let ((a!2 (to_int (+ (/ 1.0 2.0) (ite (< 4.0 a!1) 4.0 a!1)))))
(let ((a!3 (and (= v2^1 v2^0)
                (or (= a!2 v2^0)
                    (and (> a!2 v2^0) (= 4 v2^0))
                    (and (< a!2 v2^0) (= 0 v2^0))))))
  (or (and (= v2^1 (+ v2^0 1)) (> a!2 v2^0) (> 4 v2^0))
      a!3
      (and (= v2^1 (- v2^0 1)) (< a!2 v2^0) (< 0 v2^0)))))))
(assert (= v2^1 4))

(check-sat)